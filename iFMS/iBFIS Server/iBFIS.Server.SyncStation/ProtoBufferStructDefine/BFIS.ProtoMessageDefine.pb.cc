// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BFIS.ProtoMessageDefine.proto
#include "StdAfx.h"
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BFIS.ProtoMessageDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace BFIS {

namespace {

const ::google::protobuf::Descriptor* ClientInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RolePurviewInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RolePurviewInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusinessInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusinessInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProduceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProduceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BranchInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BranchInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusinessFileInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusinessFileInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusinessRelateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusinessRelateInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmployeeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmployeeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmployeePurviewInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmployeePurviewInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmployeePurviewInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmployeePurviewInfoList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PurviewInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PurviewInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserMapInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserMapInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusinessQueryParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusinessQueryParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProduceIdQueryParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProduceIdQueryParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskPlan_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskPlan_reflection_ = NULL;
const ::google::protobuf::Descriptor* BackupTask_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BackupTask_reflection_ = NULL;
const ::google::protobuf::Descriptor* McServer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  McServer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MigrateLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MigrateLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusinessDockMsgInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusinessDockMsgInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ManualSyncParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManualSyncParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScriptInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScriptInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperateLogInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperateLogInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DiskAndConnectStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DiskAndConnectStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BFIS_2eProtoMessageDefine_2eproto() {
  protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BFIS.ProtoMessageDefine.proto");
  GOOGLE_CHECK(file != NULL);
  ClientInfo_descriptor_ = file->message_type(0);
  static const int ClientInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strclientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strcredenitialstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strcredenitial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strphone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, strextendedinfo2_),
  };
  ClientInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientInfo_descriptor_,
      ClientInfo::default_instance_,
      ClientInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientInfo));
  RolePurviewInfo_descriptor_ = file->message_type(1);
  static const int RolePurviewInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, strroleinfopurviewid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, strroleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, strpruviewinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, strextendedinfo2_),
  };
  RolePurviewInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RolePurviewInfo_descriptor_,
      RolePurviewInfo::default_instance_,
      RolePurviewInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RolePurviewInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RolePurviewInfo));
  BusinessInfo_descriptor_ = file->message_type(2);
  static const int BusinessInfo_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strbusinessinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strdatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strclientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strproduceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strsubequipmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strextendedinfo2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strsubequipmenticmsign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strserialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, nmigrated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strfilecenter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strbusinesstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strcardnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, nmarkertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strcardtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strmediumtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, strmediumnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, stroffdisputetime_),
  };
  BusinessInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusinessInfo_descriptor_,
      BusinessInfo::default_instance_,
      BusinessInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusinessInfo));
  ProduceInfo_descriptor_ = file->message_type(3);
  static const int ProduceInfo_offsets_[39] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strproduceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strproducecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nperiod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strrevenue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nminiamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strrisklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strserialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strpublishbeintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strpublishendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strproductiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strapplicablecustomer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strrevenuetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strincrementmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strcurrentytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strsealsbranch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strrevenueinitialday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strdeadline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strpaymentday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strtrusteefee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strcommissioncharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strtrustee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, stroverheadcharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strrevenuecalculation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nmaxtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nminetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nstandardtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strprequestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nispublished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nisenabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strextendedinfo2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nenablemigrated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nrecordexistdays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, ntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, strriskleveldesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, nprod_lifecycle_),
  };
  ProduceInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProduceInfo_descriptor_,
      ProduceInfo::default_instance_,
      ProduceInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProduceInfo));
  BranchInfo_descriptor_ = file->message_type(4);
  static const int BranchInfo_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, straddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strcontact_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strphone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strextendedinfo2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strparentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, nislocal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strjdbrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strparentjdbrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strparentname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, strjdtype_),
  };
  BranchInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BranchInfo_descriptor_,
      BranchInfo::default_instance_,
      BranchInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BranchInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BranchInfo));
  BusinessFileInfo_descriptor_ = file->message_type(5);
  static const int BusinessFileInfo_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, strrecordid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, strbusinessinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, ntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, strfileid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, strrecordbegin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, strrecordend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, strextendedinfo2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, nmigrated_),
  };
  BusinessFileInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusinessFileInfo_descriptor_,
      BusinessFileInfo::default_instance_,
      BusinessFileInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessFileInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusinessFileInfo));
  BusinessRelateInfo_descriptor_ = file->message_type(6);
  static const int BusinessRelateInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, strbusinessrelateinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, strbusinessinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, nrelatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, strrelate1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, strrelate2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, strrelate3_),
  };
  BusinessRelateInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusinessRelateInfo_descriptor_,
      BusinessRelateInfo::default_instance_,
      BusinessRelateInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessRelateInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusinessRelateInfo));
  EmployeeInfo_descriptor_ = file->message_type(7);
  static const int EmployeeInfo_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strroleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strphone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strextendedinfo2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, nflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, stpasswordeidttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strjdbrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strtlnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strtel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strgw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strsts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strtlinst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strusername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, strrolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, struserstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, npasserrorcount_),
  };
  EmployeeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EmployeeInfo_descriptor_,
      EmployeeInfo::default_instance_,
      EmployeeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EmployeeInfo));
  EmployeePurviewInfo_descriptor_ = file->message_type(8);
  static const int EmployeePurviewInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, stremployeepurviewid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, strpurviewinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, strextendedinfo2_),
  };
  EmployeePurviewInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EmployeePurviewInfo_descriptor_,
      EmployeePurviewInfo::default_instance_,
      EmployeePurviewInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EmployeePurviewInfo));
  EmployeePurviewInfoList_descriptor_ = file->message_type(9);
  static const int EmployeePurviewInfoList_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfoList, nemployeepurviewsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfoList, vecemployeepurview_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfoList, nstatesign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfoList, nreserved_),
  };
  EmployeePurviewInfoList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EmployeePurviewInfoList_descriptor_,
      EmployeePurviewInfoList::default_instance_,
      EmployeePurviewInfoList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfoList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmployeePurviewInfoList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EmployeePurviewInfoList));
  PurviewInfo_descriptor_ = file->message_type(10);
  static const int PurviewInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, strpurviewinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, strparentpurviewid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, strpurviewcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, strdescription_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, strextendedinfo2_),
  };
  PurviewInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PurviewInfo_descriptor_,
      PurviewInfo::default_instance_,
      PurviewInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurviewInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PurviewInfo));
  RoleInfo_descriptor_ = file->message_type(11);
  static const int RoleInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, strroleinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, strrolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, nrolelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, strextendedinfo2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, strbranchinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, nflag_),
  };
  RoleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RoleInfo_descriptor_,
      RoleInfo::default_instance_,
      RoleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RoleInfo));
  UserMapInfo_descriptor_ = file->message_type(12);
  static const int UserMapInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, strusermapinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, strsocusername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, strsocpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, strextendedinfo2_),
  };
  UserMapInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserMapInfo_descriptor_,
      UserMapInfo::default_instance_,
      UserMapInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMapInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserMapInfo));
  BusinessQueryParam_descriptor_ = file->message_type(13);
  static const int BusinessQueryParam_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strcustomerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strproduceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strstarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, npagesize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, npageindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, nrecordcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strserialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strcredenitialstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strbusinesstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strcardnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, nmarkertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strrisklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strconditionex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strmediumnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, strextendedinfo2_),
  };
  BusinessQueryParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusinessQueryParam_descriptor_,
      BusinessQueryParam::default_instance_,
      BusinessQueryParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessQueryParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusinessQueryParam));
  ProduceIdQueryParam_descriptor_ = file->message_type(14);
  static const int ProduceIdQueryParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceIdQueryParam, strinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceIdQueryParam, ncount_),
  };
  ProduceIdQueryParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProduceIdQueryParam_descriptor_,
      ProduceIdQueryParam::default_instance_,
      ProduceIdQueryParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceIdQueryParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProduceIdQueryParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProduceIdQueryParam));
  TaskPlan_descriptor_ = file->message_type(15);
  static const int TaskPlan_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPlan, strplanid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPlan, strbegintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPlan, strendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPlan, neable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPlan, norderid_),
  };
  TaskPlan_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskPlan_descriptor_,
      TaskPlan::default_instance_,
      TaskPlan_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPlan, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPlan, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskPlan));
  BackupTask_descriptor_ = file->message_type(16);
  static const int BackupTask_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strtaskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, ntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, nstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strbusinessid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strproduceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, stcustomer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strautotime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strbegintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, nprocess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strlaunchemployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, norderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strtimeforbusiness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, strextendedinfo2_),
  };
  BackupTask_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BackupTask_descriptor_,
      BackupTask::default_instance_,
      BackupTask_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupTask, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BackupTask));
  McServer_descriptor_ = file->message_type(17);
  static const int McServer_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, strbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, strbranchname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, strmcip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, nport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, strmcusername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, strmcuserpwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, nislocal_),
  };
  McServer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      McServer_descriptor_,
      McServer::default_instance_,
      McServer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(McServer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(McServer));
  MigrateLog_descriptor_ = file->message_type(18);
  static const int MigrateLog_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, strmigratetaskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, strbusinessid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, strproduceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, ntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, nstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, strautotime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, strbegintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, strendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, strlaunchemployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, norderid_),
  };
  MigrateLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MigrateLog_descriptor_,
      MigrateLog::default_instance_,
      MigrateLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateLog, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MigrateLog));
  QueryCondition_descriptor_ = file->message_type(19);
  static const int QueryCondition_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, strcon1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, strcon2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, npagesize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, npageindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, nreserved_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, strreserved_),
  };
  QueryCondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryCondition_descriptor_,
      QueryCondition::default_instance_,
      QueryCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryCondition));
  BusinessDockMsgInfo_descriptor_ = file->message_type(20);
  static const int BusinessDockMsgInfo_offsets_[39] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strchannelcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strservicecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strjdbrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, stroperatorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strchannelserialnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strkernelserialnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strdatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strchanneldate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strrepondcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strchinesedescribeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strbusinesscode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strbusinessname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strbusinessstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strproducecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strobjectproducecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strfundname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strproducename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strincometype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strbusinessdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strclientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strcredenitialstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strcredenitialnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strmediumtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strmediumnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strclientrisklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strproducerisklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strfundtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strcancelbusinesstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strterminalip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strtradeserialnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strfinancserialnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, nsystemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, nbootflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strtermid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strtrantime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, stracctno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, stribfisserialnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strvideoenddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, strextendedinfo_),
  };
  BusinessDockMsgInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusinessDockMsgInfo_descriptor_,
      BusinessDockMsgInfo::default_instance_,
      BusinessDockMsgInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusinessDockMsgInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusinessDockMsgInfo));
  ManualSyncParameter_descriptor_ = file->message_type(21);
  static const int ManualSyncParameter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualSyncParameter, nbranchinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualSyncParameter, nproduceinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualSyncParameter, nemployeeinfo_),
  };
  ManualSyncParameter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManualSyncParameter_descriptor_,
      ManualSyncParameter::default_instance_,
      ManualSyncParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualSyncParameter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManualSyncParameter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManualSyncParameter));
  ScriptInfo_descriptor_ = file->message_type(22);
  static const int ScriptInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, strscriptid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, strbusinesscode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, strbusinesstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, strscriptcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, strextendedinfo1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, strextendedinfo2_),
  };
  ScriptInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScriptInfo_descriptor_,
      ScriptInfo::default_instance_,
      ScriptInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScriptInfo));
  OperateLogInfo_descriptor_ = file->message_type(23);
  static const int OperateLogInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, stroperatelogid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, strmodule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, stroperateevent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, strip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, stremployeeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, strbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, stoperatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, nextendedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, strextendedinfo1_),
  };
  OperateLogInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OperateLogInfo_descriptor_,
      OperateLogInfo::default_instance_,
      OperateLogInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateLogInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OperateLogInfo));
  DiskAndConnectStatus_descriptor_ = file->message_type(24);
  static const int DiskAndConnectStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiskAndConnectStatus, strbranchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiskAndConnectStatus, nconnectstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiskAndConnectStatus, ndisktatolspace_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiskAndConnectStatus, ndiskfreespace_),
  };
  DiskAndConnectStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DiskAndConnectStatus_descriptor_,
      DiskAndConnectStatus::default_instance_,
      DiskAndConnectStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiskAndConnectStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiskAndConnectStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DiskAndConnectStatus));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BFIS_2eProtoMessageDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientInfo_descriptor_, &ClientInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RolePurviewInfo_descriptor_, &RolePurviewInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusinessInfo_descriptor_, &BusinessInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProduceInfo_descriptor_, &ProduceInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BranchInfo_descriptor_, &BranchInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusinessFileInfo_descriptor_, &BusinessFileInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusinessRelateInfo_descriptor_, &BusinessRelateInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EmployeeInfo_descriptor_, &EmployeeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EmployeePurviewInfo_descriptor_, &EmployeePurviewInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EmployeePurviewInfoList_descriptor_, &EmployeePurviewInfoList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PurviewInfo_descriptor_, &PurviewInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RoleInfo_descriptor_, &RoleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserMapInfo_descriptor_, &UserMapInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusinessQueryParam_descriptor_, &BusinessQueryParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProduceIdQueryParam_descriptor_, &ProduceIdQueryParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskPlan_descriptor_, &TaskPlan::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BackupTask_descriptor_, &BackupTask::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    McServer_descriptor_, &McServer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MigrateLog_descriptor_, &MigrateLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryCondition_descriptor_, &QueryCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusinessDockMsgInfo_descriptor_, &BusinessDockMsgInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManualSyncParameter_descriptor_, &ManualSyncParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScriptInfo_descriptor_, &ScriptInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OperateLogInfo_descriptor_, &OperateLogInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DiskAndConnectStatus_descriptor_, &DiskAndConnectStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BFIS_2eProtoMessageDefine_2eproto() {
  delete ClientInfo::default_instance_;
  delete ClientInfo_reflection_;
  delete RolePurviewInfo::default_instance_;
  delete RolePurviewInfo_reflection_;
  delete BusinessInfo::default_instance_;
  delete BusinessInfo_reflection_;
  delete ProduceInfo::default_instance_;
  delete ProduceInfo_reflection_;
  delete BranchInfo::default_instance_;
  delete BranchInfo_reflection_;
  delete BusinessFileInfo::default_instance_;
  delete BusinessFileInfo_reflection_;
  delete BusinessRelateInfo::default_instance_;
  delete BusinessRelateInfo_reflection_;
  delete EmployeeInfo::default_instance_;
  delete EmployeeInfo_reflection_;
  delete EmployeePurviewInfo::default_instance_;
  delete EmployeePurviewInfo_reflection_;
  delete EmployeePurviewInfoList::default_instance_;
  delete EmployeePurviewInfoList_reflection_;
  delete PurviewInfo::default_instance_;
  delete PurviewInfo_reflection_;
  delete RoleInfo::default_instance_;
  delete RoleInfo_reflection_;
  delete UserMapInfo::default_instance_;
  delete UserMapInfo_reflection_;
  delete BusinessQueryParam::default_instance_;
  delete BusinessQueryParam_reflection_;
  delete ProduceIdQueryParam::default_instance_;
  delete ProduceIdQueryParam_reflection_;
  delete TaskPlan::default_instance_;
  delete TaskPlan_reflection_;
  delete BackupTask::default_instance_;
  delete BackupTask_reflection_;
  delete McServer::default_instance_;
  delete McServer_reflection_;
  delete MigrateLog::default_instance_;
  delete MigrateLog_reflection_;
  delete QueryCondition::default_instance_;
  delete QueryCondition_reflection_;
  delete BusinessDockMsgInfo::default_instance_;
  delete BusinessDockMsgInfo_reflection_;
  delete ManualSyncParameter::default_instance_;
  delete ManualSyncParameter_reflection_;
  delete ScriptInfo::default_instance_;
  delete ScriptInfo_reflection_;
  delete OperateLogInfo::default_instance_;
  delete OperateLogInfo_reflection_;
  delete DiskAndConnectStatus::default_instance_;
  delete DiskAndConnectStatus_reflection_;
}

void protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035BFIS.ProtoMessageDefine.proto\022\004BFIS\"\330\001"
    "\n\nClientInfo\022\023\n\013strClientId\030\001 \002(\t\022\017\n\007str"
    "Name\030\002 \002(\t\022\033\n\023strCredenitialsType\030\003 \002(\t\022"
    "\026\n\016strCredenitial\030\004 \002(\t\022\020\n\010strPhone\030\005 \002("
    "\t\022\022\n\nstrContent\030\006 \002(\t\022\025\n\rnExtendedInfo\030\007"
    " \002(\005\022\030\n\020strExtendedInfo1\030\010 \002(\t\022\030\n\020strExt"
    "endedInfo2\030\t \002(\t\"\247\001\n\017RolePurviewInfo\022\034\n\024"
    "strRoleInfoPurviewId\030\001 \002(\t\022\021\n\tstrRoleId\030"
    "\002 \002(\t\022\030\n\020strPruviewInfoId\030\003 \002(\t\022\025\n\rnExte"
    "ndedInfo\030\004 \002(\005\022\030\n\020strExtendedInfo1\030\005 \002(\t"
    "\022\030\n\020strExtendedInfo2\030\006 \002(\t\"\200\004\n\014BusinessI"
    "nfo\022\031\n\021strBusinessInfoId\030\001 \002(\t\022\023\n\013strDat"
    "eTime\030\002 \002(\t\022\023\n\013strBranchId\030\003 \002(\t\022\023\n\013strC"
    "lientId\030\004 \002(\t\022\025\n\rstrEmployeeId\030\005 \002(\t\022\024\n\014"
    "strProduceId\030\006 \002(\t\022\031\n\021strSubEquipmentId\030"
    "\007 \002(\t\022\025\n\rnExtendedInfo\030\010 \002(\005\022\030\n\020strExten"
    "dedInfo1\030\t \002(\t\022\030\n\020strExtendedInfo2\030\n \002(\t"
    "\022\036\n\026strSubEquipmentIcmSign\030\013 \002(\t\022\027\n\017strS"
    "erialNumber\030\014 \002(\t\022\021\n\tnMigrated\030\r \002(\005\022\025\n\r"
    "strFileCenter\030\016 \002(\t\022\027\n\017strBusinessType\030\017"
    " \002(\t\022\025\n\rstrCardNumber\030\020 \002(\t\022\023\n\013nMarkerTy"
    "pe\030\021 \002(\005\022\023\n\013strCardType\030\022 \002(\t\022\025\n\rstrMedi"
    "umType\030\023 \002(\t\022\024\n\014strMediumNum\030\024 \002(\t\022\031\n\021st"
    "rOffDisputeTime\030\025 \002(\t\"\250\007\n\013ProduceInfo\022\024\n"
    "\014strProduceId\030\001 \002(\t\022\017\n\007strName\030\002 \002(\t\022\026\n\016"
    "strProduceCode\030\003 \002(\t\022\017\n\007nPeriod\030\004 \002(\005\022\022\n"
    "\nstrRevenue\030\005 \002(\t\022\023\n\013nMiniAmount\030\006 \002(\005\022\024"
    "\n\014strRiskLevel\030\007 \002(\t\022\027\n\017strSerialNumber\030"
    "\010 \002(\t\022\032\n\022strPublishBeinTime\030\t \002(\t\022\031\n\021str"
    "PublishEndTime\030\n \002(\t\022\031\n\021strProductionTyp"
    "e\030\013 \002(\t\022\035\n\025strApplicableCustomer\030\014 \002(\t\022\026"
    "\n\016strRevenueType\030\r \002(\t\022\031\n\021strIncrementMo"
    "ney\030\016 \002(\t\022\027\n\017strCurrentyType\030\017 \002(\t\022\026\n\016st"
    "rSealsBranch\030\020 \002(\t\022\034\n\024strRevenueInitialD"
    "ay\030\021 \002(\t\022\023\n\013strDeadLine\030\022 \002(\t\022\025\n\rstrPaym"
    "entDay\030\023 \002(\t\022\025\n\rstrTrusteeFee\030\024 \002(\t\022\033\n\023s"
    "trCommissionCharge\030\025 \002(\t\022\022\n\nstrTrustee\030\026"
    " \002(\t\022\031\n\021strOverheadCharge\030\027 \002(\t\022\035\n\025strRe"
    "venueCalculation\030\030 \002(\t\022\022\n\nstrContent\030\031 \002"
    "(\t\022\020\n\010nMaxTime\030\032 \002(\005\022\021\n\tnMineTime\030\033 \002(\005\022"
    "\025\n\rnStandardTime\030\034 \002(\005\022\026\n\016strPrequestion"
    "\030\035 \002(\t\022\024\n\014nIsPublished\030\036 \002(\005\022\022\n\nnIsEnabl"
    "ed\030\037 \002(\005\022\025\n\rnExtendedInfo\030  \002(\005\022\030\n\020strEx"
    "tendedInfo1\030! \002(\t\022\030\n\020strExtendedInfo2\030\" "
    "\002(\t\022\027\n\017nEnableMigrated\030# \002(\005\022\030\n\020nRecordE"
    "xistDays\030$ \002(\005\022\r\n\005nType\030% \002(\005\022\030\n\020strRisk"
    "LevelDesc\030& \002(\t\022\027\n\017nPROD_LIFECYCLE\030\' \002(\005"
    "\"\310\002\n\nBranchInfo\022\023\n\013strBranchId\030\001 \002(\t\022\017\n\007"
    "strName\030\002 \002(\t\022\022\n\nstrAddress\030\003 \002(\t\022\022\n\nstr"
    "Contact\030\004 \002(\t\022\020\n\010strPhone\030\005 \002(\t\022\022\n\nstrCo"
    "ntent\030\006 \002(\t\022\025\n\rnExtendedInfo\030\007 \002(\005\022\030\n\020st"
    "rExtendedInfo1\030\010 \002(\t\022\030\n\020strExtendedInfo2"
    "\030\t \002(\t\022\023\n\013strParentId\030\n \002(\t\022\020\n\010nIsLocal\030"
    "\013 \002(\005\022\021\n\tstrJDBRID\030\014 \002(\t\022\027\n\017strParentJDB"
    "RID\030\r \002(\t\022\025\n\rstrParentName\030\016 \002(\t\022\021\n\tstrJ"
    "DTYPE\030\017 \002(\t\"\360\001\n\020BusinessFileInfo\022\023\n\013strR"
    "ecordId\030\001 \002(\t\022\031\n\021strBusinessInfoId\030\002 \002(\t"
    "\022\r\n\005nType\030\003 \002(\005\022\021\n\tstrFileId\030\004 \002(\t\022\026\n\016st"
    "rRecordBegin\030\005 \002(\t\022\024\n\014strRecordEnd\030\006 \002(\t"
    "\022\025\n\rnExtendedInfo\030\007 \002(\005\022\030\n\020strExtendedIn"
    "fo1\030\010 \002(\t\022\030\n\020strExtendedInfo2\030\t \002(\t\022\021\n\tn"
    "Migrated\030\n \002(\005\"\241\001\n\022BusinessRelateInfo\022\037\n"
    "\027strBusinessRelateInfoId\030\001 \002(\t\022\031\n\021strBus"
    "inessInfoId\030\002 \002(\t\022\023\n\013nRelateType\030\003 \002(\005\022\022"
    "\n\nstrRelate1\030\004 \002(\t\022\022\n\nstrRelate2\030\005 \002(\t\022\022"
    "\n\nstrRelate3\030\006 \002(\t\"\317\003\n\014EmployeeInfo\022\025\n\rs"
    "trEmployeeId\030\001 \002(\t\022\023\n\013strBranchId\030\002 \002(\t\022"
    "\017\n\007strName\030\003 \002(\t\022\023\n\013strPassword\030\004 \002(\t\022\021\n"
    "\tstrCardId\030\005 \002(\t\022\021\n\tstrRoleId\030\006 \002(\t\022\020\n\010s"
    "trPhone\030\007 \002(\t\022\025\n\rnExtendedInfo\030\010 \002(\005\022\030\n\020"
    "strExtendedInfo1\030\t \002(\t\022\030\n\020strExtendedInf"
    "o2\030\n \002(\t\022\r\n\005nFlag\030\013 \002(\005\022\032\n\022stPasswordEid"
    "tTime\030\014 \002(\t\022\021\n\tstrJDBRID\030\r \002(\t\022\020\n\010strTLN"
    "UM\030\016 \002(\t\022\016\n\006strTEL\030\017 \002(\t\022\r\n\005strGW\030\020 \002(\t\022"
    "\016\n\006strSTS\030\021 \002(\t\022\021\n\tstrTLINST\030\022 \002(\t\022\023\n\013st"
    "rUSERNAME\030\023 \002(\t\022\023\n\013strROLENAME\030\024 \002(\t\022\025\n\r"
    "strUSERSTATUS\030\025 \002(\t\022\027\n\017nPassErrorCount\030\026"
    " \002(\005\"\257\001\n\023EmployeePurviewInfo\022\034\n\024strEmplo"
    "yeePurviewId\030\001 \002(\t\022\025\n\rstrEmployeeId\030\002 \002("
    "\t\022\030\n\020strPurviewInfoId\030\003 \002(\t\022\025\n\rnExtended"
    "Info\030\004 \002(\005\022\030\n\020strExtendedInfo1\030\005 \002(\t\022\030\n\020"
    "strExtendedInfo2\030\006 \002(\t\"\233\001\n\027EmployeePurvi"
    "ewInfoList\022\034\n\024nEmployeePurviewSize\030\001 \002(\005"
    "\0225\n\022vecEmployeePurview\030\002 \003(\0132\031.BFIS.Empl"
    "oyeePurviewInfo\022\025\n\nnStateSign\030\003 \001(\005:\0010\022\024"
    "\n\tnReserved\030\004 \001(\005:\0010\"\247\001\n\013PurviewInfo\022\030\n\020"
    "strPurviewInfoId\030\001 \002(\t\022\032\n\022strParentPurvi"
    "ewId\030\002 \002(\t\022\026\n\016strPurviewCode\030\003 \002(\t\022\026\n\016st"
    "rDescription\030\004 \002(\t\022\030\n\020strExtendedInfo1\030\005"
    " \002(\t\022\030\n\020strExtendedInfo2\030\006 \002(\t\"\275\001\n\010RoleI"
    "nfo\022\025\n\rstrRoleInfoId\030\001 \002(\t\022\023\n\013strRoleNam"
    "e\030\002 \002(\t\022\022\n\nnRoleLevel\030\003 \002(\005\022\025\n\rnExtended"
    "Info\030\004 \002(\005\022\030\n\020strExtendedInfo1\030\005 \002(\t\022\030\n\020"
    "strExtendedInfo2\030\006 \002(\t\022\027\n\017strBranchInfoI"
    "d\030\007 \002(\t\022\r\n\005nFlag\030\010 \002(\005\"\242\001\n\013UserMapInfo\022\030"
    "\n\020strUsermapinfoid\030\001 \002(\t\022\025\n\rstrEmployeei"
    "d\030\002 \002(\t\022\026\n\016strSocusername\030\003 \002(\t\022\026\n\016strSo"
    "cpassword\030\004 \002(\t\022\030\n\020strExtendedinfo1\030\005 \002("
    "\t\022\030\n\020strExtendedinfo2\030\006 \002(\t\"\255\003\n\022Business"
    "QueryParam\022\023\n\013strBranchid\030\001 \002(\t\022\025\n\rstrEm"
    "ployeeid\030\002 \002(\t\022\025\n\rstrCustomerid\030\003 \002(\t\022\024\n"
    "\014strProduceid\030\004 \002(\t\022\024\n\014strStarttime\030\005 \002("
    "\t\022\022\n\nstrEndtime\030\006 \002(\t\022\021\n\tnPagesize\030\007 \002(\005"
    "\022\022\n\nnPageindex\030\010 \002(\005\022\024\n\014nRecordcount\030\t \002"
    "(\005\022\027\n\017strSerialNumber\030\n \002(\t\022\033\n\023strCreden"
    "itialsType\030\013 \002(\t\022\027\n\017strBusinessType\030\014 \002("
    "\t\022\025\n\rstrCardNumber\030\r \002(\t\022\023\n\013nMarkerType\030"
    "\016 \002(\005\022\024\n\014strRiskLevel\030\017 \002(\t\022\026\n\016strCondit"
    "ionEx\030\020 \002(\t\022\024\n\014strMediumNum\030\021 \002(\t\022\030\n\020str"
    "ExtendedInfo2\030\022 \002(\t\"8\n\023ProduceIdQueryPar"
    "am\022\021\n\tstrInfoId\030\001 \002(\t\022\016\n\006nCount\030\002 \002(\005\"i\n"
    "\010TaskPlan\022\021\n\tstrPlanid\030\001 \002(\t\022\024\n\014strBegin"
    "time\030\002 \002(\t\022\022\n\nstrEndtime\030\003 \002(\t\022\016\n\006nEable"
    "\030\004 \002(\005\022\020\n\010nOrderid\030\005 \002(\005\"\337\002\n\nBackupTask\022"
    "\021\n\tstrTaskid\030\001 \002(\t\022\r\n\005nType\030\002 \002(\005\022\017\n\007nSt"
    "atus\030\003 \002(\005\022\025\n\rstrBusinessid\030\004 \002(\t\022\024\n\014str"
    "Produceid\030\005 \002(\t\022\025\n\rstrEmployeeid\030\006 \002(\t\022$"
    "\n\nstCustomer\030\007 \002(\0132\020.BFIS.ClientInfo\022\023\n\013"
    "strAutotime\030\010 \002(\t\022\024\n\014strBegintime\030\t \002(\t\022"
    "\022\n\nstrEndtime\030\n \002(\t\022\020\n\010nProcess\030\013 \002(\005\022\033\n"
    "\023strLaunchEmployeeID\030\014 \002(\t\022\020\n\010nOrderid\030\r"
    " \002(\005\022\032\n\022strTimeForBusiness\030\016 \002(\t\022\030\n\020strE"
    "xtendedInfo2\030\017 \002(\t\"\225\001\n\010McServer\022\023\n\013strBr"
    "anchID\030\001 \002(\t\022\025\n\rstrBranchName\030\002 \002(\t\022\017\n\007s"
    "trMCIP\030\003 \002(\t\022\r\n\005nPort\030\004 \002(\005\022\025\n\rstrMCUser"
    "Name\030\005 \002(\t\022\024\n\014strMCUserPwd\030\006 \002(\t\022\020\n\010nIsL"
    "ocal\030\007 \002(\005\"\370\001\n\nMigrateLog\022\030\n\020strMigrateT"
    "askID\030\001 \002(\t\022\025\n\rstrBusinessID\030\002 \002(\t\022\024\n\014st"
    "rProduceID\030\003 \002(\t\022\025\n\rstrEmployeeID\030\004 \002(\t\022"
    "\r\n\005nType\030\005 \002(\005\022\017\n\007nStatus\030\006 \002(\005\022\023\n\013strAu"
    "toTime\030\007 \002(\t\022\024\n\014strBeginTime\030\010 \002(\t\022\022\n\nst"
    "rEndTime\030\t \002(\t\022\033\n\023strLaunchEmployeeID\030\n "
    "\002(\t\022\020\n\010nOrderID\030\013 \002(\005\"\201\001\n\016QueryCondition"
    "\022\017\n\007strCon1\030\001 \002(\t\022\017\n\007strCon2\030\002 \002(\t\022\021\n\tnP"
    "ageSize\030\003 \002(\005\022\022\n\nnPageIndex\030\004 \002(\005\022\021\n\tnRe"
    "served\030\005 \002(\005\022\023\n\013strReserved\030\006 \002(\t\"\323\007\n\023Bu"
    "sinessDockMsgInfo\022\026\n\016strChannelCode\030\001 \002("
    "\t\022\026\n\016strServiceCode\030\002 \002(\t\022\021\n\tstrJDBRID\030\003"
    " \002(\t\022\025\n\rstrOperatorId\030\004 \002(\t\022\033\n\023strChanne"
    "lSerialNum\030\005 \002(\t\022\032\n\022strKernelSerialNum\030\006"
    " \002(\t\022\023\n\013strDateTime\030\007 \002(\t\022\026\n\016strChannelD"
    "ate\030\010 \002(\t\022\025\n\rstrRepondCode\030\t \002(\t\022\036\n\026strC"
    "hineseDescribeInfo\030\n \002(\t\022\027\n\017strBusinessC"
    "ode\030\013 \002(\t\022\027\n\017strBusinessName\030\014 \002(\t\022\031\n\021st"
    "rBusinessStatus\030\r \002(\t\022\026\n\016strProduceCode\030"
    "\016 \002(\t\022\034\n\024strObjectProduceCode\030\017 \002(\t\022\023\n\013s"
    "trFundName\030\020 \002(\t\022\026\n\016strProduceName\030\021 \002(\t"
    "\022\025\n\rstrIncomeType\030\022 \002(\t\022\027\n\017strBusinessDa"
    "te\030\023 \002(\t\022\025\n\rstrClientName\030\024 \002(\t\022\033\n\023strCr"
    "edenitialsType\030\025 \002(\t\022\031\n\021strCredenitialNu"
    "m\030\026 \002(\t\022\025\n\rstrMediumType\030\027 \002(\t\022\024\n\014strMed"
    "iumNum\030\030 \002(\t\022\032\n\022strClientRiskLevel\030\031 \002(\t"
    "\022\033\n\023strProduceRiskLevel\030\032 \002(\t\022\023\n\013strFund"
    "Type\030\033 \002(\t\022\035\n\025strCancelBusinessType\030\034 \002("
    "\t\022\025\n\rstrTerminalIP\030\035 \002(\t\022\031\n\021strTradeSeri"
    "alNum\030\036 \002(\t\022\032\n\022strFinancSerialNum\030\037 \002(\t\022"
    "\023\n\013nSystemType\030  \002(\005\022\021\n\tnBootFlag\030! \002(\005\022"
    "\021\n\tstrTermId\030\" \001(\t\022\023\n\013strTranTime\030# \001(\t\022"
    "\021\n\tstrAcctNo\030$ \001(\t\022\031\n\021strIBFISSerialNum\030"
    "% \001(\t\022\027\n\017strVideoEndDate\030& \001(\t\022\027\n\017strExt"
    "endedInfo\030\' \001(\t\"W\n\023ManualSyncParameter\022\023"
    "\n\013nBranchInfo\030\001 \002(\005\022\024\n\014nProduceInfo\030\002 \002("
    "\005\022\025\n\rnEmployeeInfo\030\003 \002(\005\"\270\001\n\nScriptInfo\022"
    "\023\n\013strScriptId\030\001 \002(\t\022\027\n\017strBusinessCode\030"
    "\002 \002(\t\022\027\n\017strBusinessType\030\003 \002(\t\022\030\n\020strScr"
    "iptContent\030\004 \002(\t\022\025\n\rnExtendedInfo\030\005 \002(\005\022"
    "\030\n\020strExtendedInfo1\030\006 \002(\t\022\030\n\020strExtended"
    "Info2\030\007 \002(\t\"\330\001\n\016OperateLogInfo\022\027\n\017strOpe"
    "rateLogId\030\001 \002(\t\022\021\n\tstrModule\030\002 \002(\t\022\027\n\017st"
    "rOperateEvent\030\003 \002(\t\022\r\n\005strIp\030\004 \002(\t\022\025\n\rst"
    "rEmployeeId\030\005 \002(\t\022\023\n\013strBranchId\030\006 \002(\t\022\025"
    "\n\rstOperateTime\030\007 \002(\t\022\025\n\rnExtendedInfo\030\010"
    " \002(\005\022\030\n\020strExtendedInfo1\030\t \002(\t\"t\n\024DiskAn"
    "dConnectStatus\022\023\n\013strbranchId\030\001 \002(\t\022\026\n\016n"
    "ConnectStatus\030\002 \002(\005\022\027\n\017nDiskTatolSpace\030\003"
    " \002(\005\022\026\n\016nDiskFreeSpace\030\004 \002(\005", 7028);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BFIS.ProtoMessageDefine.proto", &protobuf_RegisterTypes);
  ClientInfo::default_instance_ = new ClientInfo();
  RolePurviewInfo::default_instance_ = new RolePurviewInfo();
  BusinessInfo::default_instance_ = new BusinessInfo();
  ProduceInfo::default_instance_ = new ProduceInfo();
  BranchInfo::default_instance_ = new BranchInfo();
  BusinessFileInfo::default_instance_ = new BusinessFileInfo();
  BusinessRelateInfo::default_instance_ = new BusinessRelateInfo();
  EmployeeInfo::default_instance_ = new EmployeeInfo();
  EmployeePurviewInfo::default_instance_ = new EmployeePurviewInfo();
  EmployeePurviewInfoList::default_instance_ = new EmployeePurviewInfoList();
  PurviewInfo::default_instance_ = new PurviewInfo();
  RoleInfo::default_instance_ = new RoleInfo();
  UserMapInfo::default_instance_ = new UserMapInfo();
  BusinessQueryParam::default_instance_ = new BusinessQueryParam();
  ProduceIdQueryParam::default_instance_ = new ProduceIdQueryParam();
  TaskPlan::default_instance_ = new TaskPlan();
  BackupTask::default_instance_ = new BackupTask();
  McServer::default_instance_ = new McServer();
  MigrateLog::default_instance_ = new MigrateLog();
  QueryCondition::default_instance_ = new QueryCondition();
  BusinessDockMsgInfo::default_instance_ = new BusinessDockMsgInfo();
  ManualSyncParameter::default_instance_ = new ManualSyncParameter();
  ScriptInfo::default_instance_ = new ScriptInfo();
  OperateLogInfo::default_instance_ = new OperateLogInfo();
  DiskAndConnectStatus::default_instance_ = new DiskAndConnectStatus();
  ClientInfo::default_instance_->InitAsDefaultInstance();
  RolePurviewInfo::default_instance_->InitAsDefaultInstance();
  BusinessInfo::default_instance_->InitAsDefaultInstance();
  ProduceInfo::default_instance_->InitAsDefaultInstance();
  BranchInfo::default_instance_->InitAsDefaultInstance();
  BusinessFileInfo::default_instance_->InitAsDefaultInstance();
  BusinessRelateInfo::default_instance_->InitAsDefaultInstance();
  EmployeeInfo::default_instance_->InitAsDefaultInstance();
  EmployeePurviewInfo::default_instance_->InitAsDefaultInstance();
  EmployeePurviewInfoList::default_instance_->InitAsDefaultInstance();
  PurviewInfo::default_instance_->InitAsDefaultInstance();
  RoleInfo::default_instance_->InitAsDefaultInstance();
  UserMapInfo::default_instance_->InitAsDefaultInstance();
  BusinessQueryParam::default_instance_->InitAsDefaultInstance();
  ProduceIdQueryParam::default_instance_->InitAsDefaultInstance();
  TaskPlan::default_instance_->InitAsDefaultInstance();
  BackupTask::default_instance_->InitAsDefaultInstance();
  McServer::default_instance_->InitAsDefaultInstance();
  MigrateLog::default_instance_->InitAsDefaultInstance();
  QueryCondition::default_instance_->InitAsDefaultInstance();
  BusinessDockMsgInfo::default_instance_->InitAsDefaultInstance();
  ManualSyncParameter::default_instance_->InitAsDefaultInstance();
  ScriptInfo::default_instance_->InitAsDefaultInstance();
  OperateLogInfo::default_instance_->InitAsDefaultInstance();
  DiskAndConnectStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BFIS_2eProtoMessageDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BFIS_2eProtoMessageDefine_2eproto {
  StaticDescriptorInitializer_BFIS_2eProtoMessageDefine_2eproto() {
    protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  }
} static_descriptor_initializer_BFIS_2eProtoMessageDefine_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ClientInfo::kStrClientIdFieldNumber;
const int ClientInfo::kStrNameFieldNumber;
const int ClientInfo::kStrCredenitialsTypeFieldNumber;
const int ClientInfo::kStrCredenitialFieldNumber;
const int ClientInfo::kStrPhoneFieldNumber;
const int ClientInfo::kStrContentFieldNumber;
const int ClientInfo::kNExtendedInfoFieldNumber;
const int ClientInfo::kStrExtendedInfo1FieldNumber;
const int ClientInfo::kStrExtendedInfo2FieldNumber;
#endif  // !_MSC_VER

ClientInfo::ClientInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClientInfo::InitAsDefaultInstance() {
}

ClientInfo::ClientInfo(const ClientInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClientInfo::SharedCtor() {
  _cached_size_ = 0;
  strclientid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcredenitialstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcredenitial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientInfo::~ClientInfo() {
  SharedDtor();
}

void ClientInfo::SharedDtor() {
  if (strclientid_ != &::google::protobuf::internal::kEmptyString) {
    delete strclientid_;
  }
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strcredenitialstype_ != &::google::protobuf::internal::kEmptyString) {
    delete strcredenitialstype_;
  }
  if (strcredenitial_ != &::google::protobuf::internal::kEmptyString) {
    delete strcredenitial_;
  }
  if (strphone_ != &::google::protobuf::internal::kEmptyString) {
    delete strphone_;
  }
  if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
    delete strcontent_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void ClientInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientInfo_descriptor_;
}

const ClientInfo& ClientInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

ClientInfo* ClientInfo::default_instance_ = NULL;

ClientInfo* ClientInfo::New() const {
  return new ClientInfo;
}

void ClientInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strclientid()) {
      if (strclientid_ != &::google::protobuf::internal::kEmptyString) {
        strclientid_->clear();
      }
    }
    if (has_strname()) {
      if (strname_ != &::google::protobuf::internal::kEmptyString) {
        strname_->clear();
      }
    }
    if (has_strcredenitialstype()) {
      if (strcredenitialstype_ != &::google::protobuf::internal::kEmptyString) {
        strcredenitialstype_->clear();
      }
    }
    if (has_strcredenitial()) {
      if (strcredenitial_ != &::google::protobuf::internal::kEmptyString) {
        strcredenitial_->clear();
      }
    }
    if (has_strphone()) {
      if (strphone_ != &::google::protobuf::internal::kEmptyString) {
        strphone_->clear();
      }
    }
    if (has_strcontent()) {
      if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
        strcontent_->clear();
      }
    }
    nextendedinfo_ = 0;
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strClientId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclientid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strclientid().data(), this->strclientid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strName;
        break;
      }

      // required string strName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strname().data(), this->strname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strCredenitialsType;
        break;
      }

      // required string strCredenitialsType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCredenitialsType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcredenitialstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcredenitialstype().data(), this->strcredenitialstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strCredenitial;
        break;
      }

      // required string strCredenitial = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCredenitial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcredenitial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcredenitial().data(), this->strcredenitial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strPhone;
        break;
      }

      // required string strPhone = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strphone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strphone().data(), this->strphone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strContent;
        break;
      }

      // required string strContent = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcontent().data(), this->strcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClientInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strClientId = 1;
  if (has_strclientid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientid().data(), this->strclientid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strclientid(), output);
  }

  // required string strName = 2;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strname(), output);
  }

  // required string strCredenitialsType = 3;
  if (has_strcredenitialstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialstype().data(), this->strcredenitialstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strcredenitialstype(), output);
  }

  // required string strCredenitial = 4;
  if (has_strcredenitial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitial().data(), this->strcredenitial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strcredenitial(), output);
  }

  // required string strPhone = 5;
  if (has_strphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strphone().data(), this->strphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strphone(), output);
  }

  // required string strContent = 6;
  if (has_strcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontent().data(), this->strcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strcontent(), output);
  }

  // required int32 nExtendedInfo = 7;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 8;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 9;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClientInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strClientId = 1;
  if (has_strclientid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientid().data(), this->strclientid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strclientid(), target);
  }

  // required string strName = 2;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strname(), target);
  }

  // required string strCredenitialsType = 3;
  if (has_strcredenitialstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialstype().data(), this->strcredenitialstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strcredenitialstype(), target);
  }

  // required string strCredenitial = 4;
  if (has_strcredenitial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitial().data(), this->strcredenitial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strcredenitial(), target);
  }

  // required string strPhone = 5;
  if (has_strphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strphone().data(), this->strphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strphone(), target);
  }

  // required string strContent = 6;
  if (has_strcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontent().data(), this->strcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strcontent(), target);
  }

  // required int32 nExtendedInfo = 7;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 8;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 9;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClientInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strClientId = 1;
    if (has_strclientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strclientid());
    }

    // required string strName = 2;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }

    // required string strCredenitialsType = 3;
    if (has_strcredenitialstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcredenitialstype());
    }

    // required string strCredenitial = 4;
    if (has_strcredenitial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcredenitial());
    }

    // required string strPhone = 5;
    if (has_strphone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strphone());
    }

    // required string strContent = 6;
    if (has_strcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcontent());
    }

    // required int32 nExtendedInfo = 7;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

    // required string strExtendedInfo1 = 8;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strExtendedInfo2 = 9;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientInfo::MergeFrom(const ClientInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strclientid()) {
      set_strclientid(from.strclientid());
    }
    if (from.has_strname()) {
      set_strname(from.strname());
    }
    if (from.has_strcredenitialstype()) {
      set_strcredenitialstype(from.strcredenitialstype());
    }
    if (from.has_strcredenitial()) {
      set_strcredenitial(from.strcredenitial());
    }
    if (from.has_strphone()) {
      set_strphone(from.strphone());
    }
    if (from.has_strcontent()) {
      set_strcontent(from.strcontent());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientInfo::CopyFrom(const ClientInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void ClientInfo::Swap(ClientInfo* other) {
  if (other != this) {
    std::swap(strclientid_, other->strclientid_);
    std::swap(strname_, other->strname_);
    std::swap(strcredenitialstype_, other->strcredenitialstype_);
    std::swap(strcredenitial_, other->strcredenitial_);
    std::swap(strphone_, other->strphone_);
    std::swap(strcontent_, other->strcontent_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientInfo_descriptor_;
  metadata.reflection = ClientInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RolePurviewInfo::kStrRoleInfoPurviewIdFieldNumber;
const int RolePurviewInfo::kStrRoleIdFieldNumber;
const int RolePurviewInfo::kStrPruviewInfoIdFieldNumber;
const int RolePurviewInfo::kNExtendedInfoFieldNumber;
const int RolePurviewInfo::kStrExtendedInfo1FieldNumber;
const int RolePurviewInfo::kStrExtendedInfo2FieldNumber;
#endif  // !_MSC_VER

RolePurviewInfo::RolePurviewInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RolePurviewInfo::InitAsDefaultInstance() {
}

RolePurviewInfo::RolePurviewInfo(const RolePurviewInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RolePurviewInfo::SharedCtor() {
  _cached_size_ = 0;
  strroleinfopurviewid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strroleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpruviewinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RolePurviewInfo::~RolePurviewInfo() {
  SharedDtor();
}

void RolePurviewInfo::SharedDtor() {
  if (strroleinfopurviewid_ != &::google::protobuf::internal::kEmptyString) {
    delete strroleinfopurviewid_;
  }
  if (strroleid_ != &::google::protobuf::internal::kEmptyString) {
    delete strroleid_;
  }
  if (strpruviewinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strpruviewinfoid_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void RolePurviewInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RolePurviewInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RolePurviewInfo_descriptor_;
}

const RolePurviewInfo& RolePurviewInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

RolePurviewInfo* RolePurviewInfo::default_instance_ = NULL;

RolePurviewInfo* RolePurviewInfo::New() const {
  return new RolePurviewInfo;
}

void RolePurviewInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strroleinfopurviewid()) {
      if (strroleinfopurviewid_ != &::google::protobuf::internal::kEmptyString) {
        strroleinfopurviewid_->clear();
      }
    }
    if (has_strroleid()) {
      if (strroleid_ != &::google::protobuf::internal::kEmptyString) {
        strroleid_->clear();
      }
    }
    if (has_strpruviewinfoid()) {
      if (strpruviewinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strpruviewinfoid_->clear();
      }
    }
    nextendedinfo_ = 0;
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RolePurviewInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strRoleInfoPurviewId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strroleinfopurviewid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strroleinfopurviewid().data(), this->strroleinfopurviewid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strRoleId;
        break;
      }

      // required string strRoleId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRoleId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strroleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strroleid().data(), this->strroleid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strPruviewInfoId;
        break;
      }

      // required string strPruviewInfoId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPruviewInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpruviewinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpruviewinfoid().data(), this->strpruviewinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RolePurviewInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strRoleInfoPurviewId = 1;
  if (has_strroleinfopurviewid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleinfopurviewid().data(), this->strroleinfopurviewid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strroleinfopurviewid(), output);
  }

  // required string strRoleId = 2;
  if (has_strroleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleid().data(), this->strroleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strroleid(), output);
  }

  // required string strPruviewInfoId = 3;
  if (has_strpruviewinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpruviewinfoid().data(), this->strpruviewinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strpruviewinfoid(), output);
  }

  // required int32 nExtendedInfo = 4;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RolePurviewInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strRoleInfoPurviewId = 1;
  if (has_strroleinfopurviewid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleinfopurviewid().data(), this->strroleinfopurviewid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strroleinfopurviewid(), target);
  }

  // required string strRoleId = 2;
  if (has_strroleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleid().data(), this->strroleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strroleid(), target);
  }

  // required string strPruviewInfoId = 3;
  if (has_strpruviewinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpruviewinfoid().data(), this->strpruviewinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strpruviewinfoid(), target);
  }

  // required int32 nExtendedInfo = 4;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RolePurviewInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strRoleInfoPurviewId = 1;
    if (has_strroleinfopurviewid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strroleinfopurviewid());
    }

    // required string strRoleId = 2;
    if (has_strroleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strroleid());
    }

    // required string strPruviewInfoId = 3;
    if (has_strpruviewinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpruviewinfoid());
    }

    // required int32 nExtendedInfo = 4;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

    // required string strExtendedInfo1 = 5;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 6;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RolePurviewInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RolePurviewInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RolePurviewInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RolePurviewInfo::MergeFrom(const RolePurviewInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strroleinfopurviewid()) {
      set_strroleinfopurviewid(from.strroleinfopurviewid());
    }
    if (from.has_strroleid()) {
      set_strroleid(from.strroleid());
    }
    if (from.has_strpruviewinfoid()) {
      set_strpruviewinfoid(from.strpruviewinfoid());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RolePurviewInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RolePurviewInfo::CopyFrom(const RolePurviewInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RolePurviewInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void RolePurviewInfo::Swap(RolePurviewInfo* other) {
  if (other != this) {
    std::swap(strroleinfopurviewid_, other->strroleinfopurviewid_);
    std::swap(strroleid_, other->strroleid_);
    std::swap(strpruviewinfoid_, other->strpruviewinfoid_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RolePurviewInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RolePurviewInfo_descriptor_;
  metadata.reflection = RolePurviewInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BusinessInfo::kStrBusinessInfoIdFieldNumber;
const int BusinessInfo::kStrDateTimeFieldNumber;
const int BusinessInfo::kStrBranchIdFieldNumber;
const int BusinessInfo::kStrClientIdFieldNumber;
const int BusinessInfo::kStrEmployeeIdFieldNumber;
const int BusinessInfo::kStrProduceIdFieldNumber;
const int BusinessInfo::kStrSubEquipmentIdFieldNumber;
const int BusinessInfo::kNExtendedInfoFieldNumber;
const int BusinessInfo::kStrExtendedInfo1FieldNumber;
const int BusinessInfo::kStrExtendedInfo2FieldNumber;
const int BusinessInfo::kStrSubEquipmentIcmSignFieldNumber;
const int BusinessInfo::kStrSerialNumberFieldNumber;
const int BusinessInfo::kNMigratedFieldNumber;
const int BusinessInfo::kStrFileCenterFieldNumber;
const int BusinessInfo::kStrBusinessTypeFieldNumber;
const int BusinessInfo::kStrCardNumberFieldNumber;
const int BusinessInfo::kNMarkerTypeFieldNumber;
const int BusinessInfo::kStrCardTypeFieldNumber;
const int BusinessInfo::kStrMediumTypeFieldNumber;
const int BusinessInfo::kStrMediumNumFieldNumber;
const int BusinessInfo::kStrOffDisputeTimeFieldNumber;
#endif  // !_MSC_VER

BusinessInfo::BusinessInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BusinessInfo::InitAsDefaultInstance() {
}

BusinessInfo::BusinessInfo(const BusinessInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BusinessInfo::SharedCtor() {
  _cached_size_ = 0;
  strbusinessinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strdatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbranchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strclientid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproduceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strsubequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strsubequipmenticmsign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strserialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nmigrated_ = 0;
  strfilecenter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinesstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcardnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nmarkertype_ = 0;
  strcardtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmediumtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmediumnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stroffdisputetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusinessInfo::~BusinessInfo() {
  SharedDtor();
}

void BusinessInfo::SharedDtor() {
  if (strbusinessinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessinfoid_;
  }
  if (strdatetime_ != &::google::protobuf::internal::kEmptyString) {
    delete strdatetime_;
  }
  if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchid_;
  }
  if (strclientid_ != &::google::protobuf::internal::kEmptyString) {
    delete strclientid_;
  }
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
    delete strproduceid_;
  }
  if (strsubequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete strsubequipmentid_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (strsubequipmenticmsign_ != &::google::protobuf::internal::kEmptyString) {
    delete strsubequipmenticmsign_;
  }
  if (strserialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete strserialnumber_;
  }
  if (strfilecenter_ != &::google::protobuf::internal::kEmptyString) {
    delete strfilecenter_;
  }
  if (strbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinesstype_;
  }
  if (strcardnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete strcardnumber_;
  }
  if (strcardtype_ != &::google::protobuf::internal::kEmptyString) {
    delete strcardtype_;
  }
  if (strmediumtype_ != &::google::protobuf::internal::kEmptyString) {
    delete strmediumtype_;
  }
  if (strmediumnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strmediumnum_;
  }
  if (stroffdisputetime_ != &::google::protobuf::internal::kEmptyString) {
    delete stroffdisputetime_;
  }
  if (this != default_instance_) {
  }
}

void BusinessInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusinessInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusinessInfo_descriptor_;
}

const BusinessInfo& BusinessInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

BusinessInfo* BusinessInfo::default_instance_ = NULL;

BusinessInfo* BusinessInfo::New() const {
  return new BusinessInfo;
}

void BusinessInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strbusinessinfoid()) {
      if (strbusinessinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessinfoid_->clear();
      }
    }
    if (has_strdatetime()) {
      if (strdatetime_ != &::google::protobuf::internal::kEmptyString) {
        strdatetime_->clear();
      }
    }
    if (has_strbranchid()) {
      if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchid_->clear();
      }
    }
    if (has_strclientid()) {
      if (strclientid_ != &::google::protobuf::internal::kEmptyString) {
        strclientid_->clear();
      }
    }
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    if (has_strproduceid()) {
      if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
        strproduceid_->clear();
      }
    }
    if (has_strsubequipmentid()) {
      if (strsubequipmentid_ != &::google::protobuf::internal::kEmptyString) {
        strsubequipmentid_->clear();
      }
    }
    nextendedinfo_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
    if (has_strsubequipmenticmsign()) {
      if (strsubequipmenticmsign_ != &::google::protobuf::internal::kEmptyString) {
        strsubequipmenticmsign_->clear();
      }
    }
    if (has_strserialnumber()) {
      if (strserialnumber_ != &::google::protobuf::internal::kEmptyString) {
        strserialnumber_->clear();
      }
    }
    nmigrated_ = 0;
    if (has_strfilecenter()) {
      if (strfilecenter_ != &::google::protobuf::internal::kEmptyString) {
        strfilecenter_->clear();
      }
    }
    if (has_strbusinesstype()) {
      if (strbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
        strbusinesstype_->clear();
      }
    }
    if (has_strcardnumber()) {
      if (strcardnumber_ != &::google::protobuf::internal::kEmptyString) {
        strcardnumber_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    nmarkertype_ = 0;
    if (has_strcardtype()) {
      if (strcardtype_ != &::google::protobuf::internal::kEmptyString) {
        strcardtype_->clear();
      }
    }
    if (has_strmediumtype()) {
      if (strmediumtype_ != &::google::protobuf::internal::kEmptyString) {
        strmediumtype_->clear();
      }
    }
    if (has_strmediumnum()) {
      if (strmediumnum_ != &::google::protobuf::internal::kEmptyString) {
        strmediumnum_->clear();
      }
    }
    if (has_stroffdisputetime()) {
      if (stroffdisputetime_ != &::google::protobuf::internal::kEmptyString) {
        stroffdisputetime_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusinessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strBusinessInfoId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strDateTime;
        break;
      }

      // required string strDateTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strDateTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strdatetime().data(), this->strdatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strBranchId;
        break;
      }

      // required string strBranchId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBranchId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchid().data(), this->strbranchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strClientId;
        break;
      }

      // required string strClientId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strClientId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclientid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strclientid().data(), this->strclientid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strEmployeeId;
        break;
      }

      // required string strEmployeeId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEmployeeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strProduceId;
        break;
      }

      // required string strProduceId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproduceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproduceid().data(), this->strproduceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strSubEquipmentId;
        break;
      }

      // required string strSubEquipmentId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSubEquipmentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsubequipmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strsubequipmentid().data(), this->strsubequipmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_strSubEquipmentIcmSign;
        break;
      }

      // required string strSubEquipmentIcmSign = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSubEquipmentIcmSign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsubequipmenticmsign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strsubequipmenticmsign().data(), this->strsubequipmenticmsign().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_strSerialNumber;
        break;
      }

      // required string strSerialNumber = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSerialNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strserialnumber().data(), this->strserialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_nMigrated;
        break;
      }

      // required int32 nMigrated = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nMigrated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmigrated_)));
          set_has_nmigrated();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_strFileCenter;
        break;
      }

      // required string strFileCenter = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strFileCenter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfilecenter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strfilecenter().data(), this->strfilecenter().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_strBusinessType;
        break;
      }

      // required string strBusinessType = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinesstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinesstype().data(), this->strbusinesstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_strCardNumber;
        break;
      }

      // required string strCardNumber = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCardNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcardnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcardnumber().data(), this->strcardnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_nMarkerType;
        break;
      }

      // required int32 nMarkerType = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nMarkerType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmarkertype_)));
          set_has_nmarkertype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_strCardType;
        break;
      }

      // required string strCardType = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCardType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcardtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcardtype().data(), this->strcardtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_strMediumType;
        break;
      }

      // required string strMediumType = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMediumType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmediumtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmediumtype().data(), this->strmediumtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_strMediumNum;
        break;
      }

      // required string strMediumNum = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMediumNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmediumnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmediumnum().data(), this->strmediumnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_strOffDisputeTime;
        break;
      }

      // required string strOffDisputeTime = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strOffDisputeTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stroffdisputetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stroffdisputetime().data(), this->stroffdisputetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BusinessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strBusinessInfoId = 1;
  if (has_strbusinessinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strbusinessinfoid(), output);
  }

  // required string strDateTime = 2;
  if (has_strdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdatetime().data(), this->strdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strdatetime(), output);
  }

  // required string strBranchId = 3;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strbranchid(), output);
  }

  // required string strClientId = 4;
  if (has_strclientid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientid().data(), this->strclientid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strclientid(), output);
  }

  // required string strEmployeeId = 5;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->stremployeeid(), output);
  }

  // required string strProduceId = 6;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strproduceid(), output);
  }

  // required string strSubEquipmentId = 7;
  if (has_strsubequipmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsubequipmentid().data(), this->strsubequipmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strsubequipmentid(), output);
  }

  // required int32 nExtendedInfo = 8;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 9;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 10;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strextendedinfo2(), output);
  }

  // required string strSubEquipmentIcmSign = 11;
  if (has_strsubequipmenticmsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsubequipmenticmsign().data(), this->strsubequipmenticmsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->strsubequipmenticmsign(), output);
  }

  // required string strSerialNumber = 12;
  if (has_strserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->strserialnumber(), output);
  }

  // required int32 nMigrated = 13;
  if (has_nmigrated()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->nmigrated(), output);
  }

  // required string strFileCenter = 14;
  if (has_strfilecenter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfilecenter().data(), this->strfilecenter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->strfilecenter(), output);
  }

  // required string strBusinessType = 15;
  if (has_strbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesstype().data(), this->strbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->strbusinesstype(), output);
  }

  // required string strCardNumber = 16;
  if (has_strcardnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardnumber().data(), this->strcardnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->strcardnumber(), output);
  }

  // required int32 nMarkerType = 17;
  if (has_nmarkertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->nmarkertype(), output);
  }

  // required string strCardType = 18;
  if (has_strcardtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardtype().data(), this->strcardtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->strcardtype(), output);
  }

  // required string strMediumType = 19;
  if (has_strmediumtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumtype().data(), this->strmediumtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->strmediumtype(), output);
  }

  // required string strMediumNum = 20;
  if (has_strmediumnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumnum().data(), this->strmediumnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->strmediumnum(), output);
  }

  // required string strOffDisputeTime = 21;
  if (has_stroffdisputetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroffdisputetime().data(), this->stroffdisputetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->stroffdisputetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BusinessInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strBusinessInfoId = 1;
  if (has_strbusinessinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strbusinessinfoid(), target);
  }

  // required string strDateTime = 2;
  if (has_strdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdatetime().data(), this->strdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdatetime(), target);
  }

  // required string strBranchId = 3;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strbranchid(), target);
  }

  // required string strClientId = 4;
  if (has_strclientid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientid().data(), this->strclientid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strclientid(), target);
  }

  // required string strEmployeeId = 5;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stremployeeid(), target);
  }

  // required string strProduceId = 6;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strproduceid(), target);
  }

  // required string strSubEquipmentId = 7;
  if (has_strsubequipmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsubequipmentid().data(), this->strsubequipmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strsubequipmentid(), target);
  }

  // required int32 nExtendedInfo = 8;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 9;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 10;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strextendedinfo2(), target);
  }

  // required string strSubEquipmentIcmSign = 11;
  if (has_strsubequipmenticmsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsubequipmenticmsign().data(), this->strsubequipmenticmsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strsubequipmenticmsign(), target);
  }

  // required string strSerialNumber = 12;
  if (has_strserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strserialnumber(), target);
  }

  // required int32 nMigrated = 13;
  if (has_nmigrated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->nmigrated(), target);
  }

  // required string strFileCenter = 14;
  if (has_strfilecenter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfilecenter().data(), this->strfilecenter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strfilecenter(), target);
  }

  // required string strBusinessType = 15;
  if (has_strbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesstype().data(), this->strbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strbusinesstype(), target);
  }

  // required string strCardNumber = 16;
  if (has_strcardnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardnumber().data(), this->strcardnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strcardnumber(), target);
  }

  // required int32 nMarkerType = 17;
  if (has_nmarkertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->nmarkertype(), target);
  }

  // required string strCardType = 18;
  if (has_strcardtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardtype().data(), this->strcardtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->strcardtype(), target);
  }

  // required string strMediumType = 19;
  if (has_strmediumtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumtype().data(), this->strmediumtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strmediumtype(), target);
  }

  // required string strMediumNum = 20;
  if (has_strmediumnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumnum().data(), this->strmediumnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strmediumnum(), target);
  }

  // required string strOffDisputeTime = 21;
  if (has_stroffdisputetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroffdisputetime().data(), this->stroffdisputetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->stroffdisputetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BusinessInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strBusinessInfoId = 1;
    if (has_strbusinessinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessinfoid());
    }

    // required string strDateTime = 2;
    if (has_strdatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strdatetime());
    }

    // required string strBranchId = 3;
    if (has_strbranchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchid());
    }

    // required string strClientId = 4;
    if (has_strclientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strclientid());
    }

    // required string strEmployeeId = 5;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required string strProduceId = 6;
    if (has_strproduceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproduceid());
    }

    // required string strSubEquipmentId = 7;
    if (has_strsubequipmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsubequipmentid());
    }

    // required int32 nExtendedInfo = 8;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strExtendedInfo1 = 9;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 10;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

    // required string strSubEquipmentIcmSign = 11;
    if (has_strsubequipmenticmsign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsubequipmenticmsign());
    }

    // required string strSerialNumber = 12;
    if (has_strserialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strserialnumber());
    }

    // required int32 nMigrated = 13;
    if (has_nmigrated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmigrated());
    }

    // required string strFileCenter = 14;
    if (has_strfilecenter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strfilecenter());
    }

    // required string strBusinessType = 15;
    if (has_strbusinesstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinesstype());
    }

    // required string strCardNumber = 16;
    if (has_strcardnumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcardnumber());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required int32 nMarkerType = 17;
    if (has_nmarkertype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmarkertype());
    }

    // required string strCardType = 18;
    if (has_strcardtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcardtype());
    }

    // required string strMediumType = 19;
    if (has_strmediumtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmediumtype());
    }

    // required string strMediumNum = 20;
    if (has_strmediumnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmediumnum());
    }

    // required string strOffDisputeTime = 21;
    if (has_stroffdisputetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stroffdisputetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusinessInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusinessInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusinessInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusinessInfo::MergeFrom(const BusinessInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strbusinessinfoid()) {
      set_strbusinessinfoid(from.strbusinessinfoid());
    }
    if (from.has_strdatetime()) {
      set_strdatetime(from.strdatetime());
    }
    if (from.has_strbranchid()) {
      set_strbranchid(from.strbranchid());
    }
    if (from.has_strclientid()) {
      set_strclientid(from.strclientid());
    }
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_strproduceid()) {
      set_strproduceid(from.strproduceid());
    }
    if (from.has_strsubequipmentid()) {
      set_strsubequipmentid(from.strsubequipmentid());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
    if (from.has_strsubequipmenticmsign()) {
      set_strsubequipmenticmsign(from.strsubequipmenticmsign());
    }
    if (from.has_strserialnumber()) {
      set_strserialnumber(from.strserialnumber());
    }
    if (from.has_nmigrated()) {
      set_nmigrated(from.nmigrated());
    }
    if (from.has_strfilecenter()) {
      set_strfilecenter(from.strfilecenter());
    }
    if (from.has_strbusinesstype()) {
      set_strbusinesstype(from.strbusinesstype());
    }
    if (from.has_strcardnumber()) {
      set_strcardnumber(from.strcardnumber());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_nmarkertype()) {
      set_nmarkertype(from.nmarkertype());
    }
    if (from.has_strcardtype()) {
      set_strcardtype(from.strcardtype());
    }
    if (from.has_strmediumtype()) {
      set_strmediumtype(from.strmediumtype());
    }
    if (from.has_strmediumnum()) {
      set_strmediumnum(from.strmediumnum());
    }
    if (from.has_stroffdisputetime()) {
      set_stroffdisputetime(from.stroffdisputetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusinessInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusinessInfo::CopyFrom(const BusinessInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusinessInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x001fffff) != 0x001fffff) return false;

  return true;
}

void BusinessInfo::Swap(BusinessInfo* other) {
  if (other != this) {
    std::swap(strbusinessinfoid_, other->strbusinessinfoid_);
    std::swap(strdatetime_, other->strdatetime_);
    std::swap(strbranchid_, other->strbranchid_);
    std::swap(strclientid_, other->strclientid_);
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(strproduceid_, other->strproduceid_);
    std::swap(strsubequipmentid_, other->strsubequipmentid_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(strsubequipmenticmsign_, other->strsubequipmenticmsign_);
    std::swap(strserialnumber_, other->strserialnumber_);
    std::swap(nmigrated_, other->nmigrated_);
    std::swap(strfilecenter_, other->strfilecenter_);
    std::swap(strbusinesstype_, other->strbusinesstype_);
    std::swap(strcardnumber_, other->strcardnumber_);
    std::swap(nmarkertype_, other->nmarkertype_);
    std::swap(strcardtype_, other->strcardtype_);
    std::swap(strmediumtype_, other->strmediumtype_);
    std::swap(strmediumnum_, other->strmediumnum_);
    std::swap(stroffdisputetime_, other->stroffdisputetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusinessInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusinessInfo_descriptor_;
  metadata.reflection = BusinessInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProduceInfo::kStrProduceIdFieldNumber;
const int ProduceInfo::kStrNameFieldNumber;
const int ProduceInfo::kStrProduceCodeFieldNumber;
const int ProduceInfo::kNPeriodFieldNumber;
const int ProduceInfo::kStrRevenueFieldNumber;
const int ProduceInfo::kNMiniAmountFieldNumber;
const int ProduceInfo::kStrRiskLevelFieldNumber;
const int ProduceInfo::kStrSerialNumberFieldNumber;
const int ProduceInfo::kStrPublishBeinTimeFieldNumber;
const int ProduceInfo::kStrPublishEndTimeFieldNumber;
const int ProduceInfo::kStrProductionTypeFieldNumber;
const int ProduceInfo::kStrApplicableCustomerFieldNumber;
const int ProduceInfo::kStrRevenueTypeFieldNumber;
const int ProduceInfo::kStrIncrementMoneyFieldNumber;
const int ProduceInfo::kStrCurrentyTypeFieldNumber;
const int ProduceInfo::kStrSealsBranchFieldNumber;
const int ProduceInfo::kStrRevenueInitialDayFieldNumber;
const int ProduceInfo::kStrDeadLineFieldNumber;
const int ProduceInfo::kStrPaymentDayFieldNumber;
const int ProduceInfo::kStrTrusteeFeeFieldNumber;
const int ProduceInfo::kStrCommissionChargeFieldNumber;
const int ProduceInfo::kStrTrusteeFieldNumber;
const int ProduceInfo::kStrOverheadChargeFieldNumber;
const int ProduceInfo::kStrRevenueCalculationFieldNumber;
const int ProduceInfo::kStrContentFieldNumber;
const int ProduceInfo::kNMaxTimeFieldNumber;
const int ProduceInfo::kNMineTimeFieldNumber;
const int ProduceInfo::kNStandardTimeFieldNumber;
const int ProduceInfo::kStrPrequestionFieldNumber;
const int ProduceInfo::kNIsPublishedFieldNumber;
const int ProduceInfo::kNIsEnabledFieldNumber;
const int ProduceInfo::kNExtendedInfoFieldNumber;
const int ProduceInfo::kStrExtendedInfo1FieldNumber;
const int ProduceInfo::kStrExtendedInfo2FieldNumber;
const int ProduceInfo::kNEnableMigratedFieldNumber;
const int ProduceInfo::kNRecordExistDaysFieldNumber;
const int ProduceInfo::kNTypeFieldNumber;
const int ProduceInfo::kStrRiskLevelDescFieldNumber;
const int ProduceInfo::kNPRODLIFECYCLEFieldNumber;
#endif  // !_MSC_VER

ProduceInfo::ProduceInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProduceInfo::InitAsDefaultInstance() {
}

ProduceInfo::ProduceInfo(const ProduceInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProduceInfo::SharedCtor() {
  _cached_size_ = 0;
  strproduceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproducecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nperiod_ = 0;
  strrevenue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nminiamount_ = 0;
  strrisklevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strserialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpublishbeintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpublishendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproductiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strapplicablecustomer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrevenuetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strincrementmoney_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcurrentytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strsealsbranch_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrevenueinitialday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strdeadline_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpaymentday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strtrusteefee_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcommissioncharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strtrustee_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stroverheadcharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrevenuecalculation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nmaxtime_ = 0;
  nminetime_ = 0;
  nstandardtime_ = 0;
  strprequestion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nispublished_ = 0;
  nisenabled_ = 0;
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nenablemigrated_ = 0;
  nrecordexistdays_ = 0;
  ntype_ = 0;
  strriskleveldesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nprod_lifecycle_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProduceInfo::~ProduceInfo() {
  SharedDtor();
}

void ProduceInfo::SharedDtor() {
  if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
    delete strproduceid_;
  }
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strproducecode_ != &::google::protobuf::internal::kEmptyString) {
    delete strproducecode_;
  }
  if (strrevenue_ != &::google::protobuf::internal::kEmptyString) {
    delete strrevenue_;
  }
  if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
    delete strrisklevel_;
  }
  if (strserialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete strserialnumber_;
  }
  if (strpublishbeintime_ != &::google::protobuf::internal::kEmptyString) {
    delete strpublishbeintime_;
  }
  if (strpublishendtime_ != &::google::protobuf::internal::kEmptyString) {
    delete strpublishendtime_;
  }
  if (strproductiontype_ != &::google::protobuf::internal::kEmptyString) {
    delete strproductiontype_;
  }
  if (strapplicablecustomer_ != &::google::protobuf::internal::kEmptyString) {
    delete strapplicablecustomer_;
  }
  if (strrevenuetype_ != &::google::protobuf::internal::kEmptyString) {
    delete strrevenuetype_;
  }
  if (strincrementmoney_ != &::google::protobuf::internal::kEmptyString) {
    delete strincrementmoney_;
  }
  if (strcurrentytype_ != &::google::protobuf::internal::kEmptyString) {
    delete strcurrentytype_;
  }
  if (strsealsbranch_ != &::google::protobuf::internal::kEmptyString) {
    delete strsealsbranch_;
  }
  if (strrevenueinitialday_ != &::google::protobuf::internal::kEmptyString) {
    delete strrevenueinitialday_;
  }
  if (strdeadline_ != &::google::protobuf::internal::kEmptyString) {
    delete strdeadline_;
  }
  if (strpaymentday_ != &::google::protobuf::internal::kEmptyString) {
    delete strpaymentday_;
  }
  if (strtrusteefee_ != &::google::protobuf::internal::kEmptyString) {
    delete strtrusteefee_;
  }
  if (strcommissioncharge_ != &::google::protobuf::internal::kEmptyString) {
    delete strcommissioncharge_;
  }
  if (strtrustee_ != &::google::protobuf::internal::kEmptyString) {
    delete strtrustee_;
  }
  if (stroverheadcharge_ != &::google::protobuf::internal::kEmptyString) {
    delete stroverheadcharge_;
  }
  if (strrevenuecalculation_ != &::google::protobuf::internal::kEmptyString) {
    delete strrevenuecalculation_;
  }
  if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
    delete strcontent_;
  }
  if (strprequestion_ != &::google::protobuf::internal::kEmptyString) {
    delete strprequestion_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (strriskleveldesc_ != &::google::protobuf::internal::kEmptyString) {
    delete strriskleveldesc_;
  }
  if (this != default_instance_) {
  }
}

void ProduceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProduceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProduceInfo_descriptor_;
}

const ProduceInfo& ProduceInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

ProduceInfo* ProduceInfo::default_instance_ = NULL;

ProduceInfo* ProduceInfo::New() const {
  return new ProduceInfo;
}

void ProduceInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strproduceid()) {
      if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
        strproduceid_->clear();
      }
    }
    if (has_strname()) {
      if (strname_ != &::google::protobuf::internal::kEmptyString) {
        strname_->clear();
      }
    }
    if (has_strproducecode()) {
      if (strproducecode_ != &::google::protobuf::internal::kEmptyString) {
        strproducecode_->clear();
      }
    }
    nperiod_ = 0;
    if (has_strrevenue()) {
      if (strrevenue_ != &::google::protobuf::internal::kEmptyString) {
        strrevenue_->clear();
      }
    }
    nminiamount_ = 0;
    if (has_strrisklevel()) {
      if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
        strrisklevel_->clear();
      }
    }
    if (has_strserialnumber()) {
      if (strserialnumber_ != &::google::protobuf::internal::kEmptyString) {
        strserialnumber_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strpublishbeintime()) {
      if (strpublishbeintime_ != &::google::protobuf::internal::kEmptyString) {
        strpublishbeintime_->clear();
      }
    }
    if (has_strpublishendtime()) {
      if (strpublishendtime_ != &::google::protobuf::internal::kEmptyString) {
        strpublishendtime_->clear();
      }
    }
    if (has_strproductiontype()) {
      if (strproductiontype_ != &::google::protobuf::internal::kEmptyString) {
        strproductiontype_->clear();
      }
    }
    if (has_strapplicablecustomer()) {
      if (strapplicablecustomer_ != &::google::protobuf::internal::kEmptyString) {
        strapplicablecustomer_->clear();
      }
    }
    if (has_strrevenuetype()) {
      if (strrevenuetype_ != &::google::protobuf::internal::kEmptyString) {
        strrevenuetype_->clear();
      }
    }
    if (has_strincrementmoney()) {
      if (strincrementmoney_ != &::google::protobuf::internal::kEmptyString) {
        strincrementmoney_->clear();
      }
    }
    if (has_strcurrentytype()) {
      if (strcurrentytype_ != &::google::protobuf::internal::kEmptyString) {
        strcurrentytype_->clear();
      }
    }
    if (has_strsealsbranch()) {
      if (strsealsbranch_ != &::google::protobuf::internal::kEmptyString) {
        strsealsbranch_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_strrevenueinitialday()) {
      if (strrevenueinitialday_ != &::google::protobuf::internal::kEmptyString) {
        strrevenueinitialday_->clear();
      }
    }
    if (has_strdeadline()) {
      if (strdeadline_ != &::google::protobuf::internal::kEmptyString) {
        strdeadline_->clear();
      }
    }
    if (has_strpaymentday()) {
      if (strpaymentday_ != &::google::protobuf::internal::kEmptyString) {
        strpaymentday_->clear();
      }
    }
    if (has_strtrusteefee()) {
      if (strtrusteefee_ != &::google::protobuf::internal::kEmptyString) {
        strtrusteefee_->clear();
      }
    }
    if (has_strcommissioncharge()) {
      if (strcommissioncharge_ != &::google::protobuf::internal::kEmptyString) {
        strcommissioncharge_->clear();
      }
    }
    if (has_strtrustee()) {
      if (strtrustee_ != &::google::protobuf::internal::kEmptyString) {
        strtrustee_->clear();
      }
    }
    if (has_stroverheadcharge()) {
      if (stroverheadcharge_ != &::google::protobuf::internal::kEmptyString) {
        stroverheadcharge_->clear();
      }
    }
    if (has_strrevenuecalculation()) {
      if (strrevenuecalculation_ != &::google::protobuf::internal::kEmptyString) {
        strrevenuecalculation_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_strcontent()) {
      if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
        strcontent_->clear();
      }
    }
    nmaxtime_ = 0;
    nminetime_ = 0;
    nstandardtime_ = 0;
    if (has_strprequestion()) {
      if (strprequestion_ != &::google::protobuf::internal::kEmptyString) {
        strprequestion_->clear();
      }
    }
    nispublished_ = 0;
    nisenabled_ = 0;
    nextendedinfo_ = 0;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
    nenablemigrated_ = 0;
    nrecordexistdays_ = 0;
    ntype_ = 0;
    if (has_strriskleveldesc()) {
      if (strriskleveldesc_ != &::google::protobuf::internal::kEmptyString) {
        strriskleveldesc_->clear();
      }
    }
    nprod_lifecycle_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProduceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strProduceId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproduceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproduceid().data(), this->strproduceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strName;
        break;
      }

      // required string strName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strname().data(), this->strname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strProduceCode;
        break;
      }

      // required string strProduceCode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproducecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproducecode().data(), this->strproducecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nPeriod;
        break;
      }

      // required int32 nPeriod = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPeriod:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nperiod_)));
          set_has_nperiod();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strRevenue;
        break;
      }

      // required string strRevenue = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRevenue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrevenue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrevenue().data(), this->strrevenue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_nMiniAmount;
        break;
      }

      // required int32 nMiniAmount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nMiniAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nminiamount_)));
          set_has_nminiamount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strRiskLevel;
        break;
      }

      // required string strRiskLevel = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRiskLevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrisklevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrisklevel().data(), this->strrisklevel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strSerialNumber;
        break;
      }

      // required string strSerialNumber = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSerialNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strserialnumber().data(), this->strserialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strPublishBeinTime;
        break;
      }

      // required string strPublishBeinTime = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPublishBeinTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpublishbeintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpublishbeintime().data(), this->strpublishbeintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strPublishEndTime;
        break;
      }

      // required string strPublishEndTime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPublishEndTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpublishendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpublishendtime().data(), this->strpublishendtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_strProductionType;
        break;
      }

      // required string strProductionType = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProductionType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproductiontype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproductiontype().data(), this->strproductiontype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_strApplicableCustomer;
        break;
      }

      // required string strApplicableCustomer = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strApplicableCustomer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strapplicablecustomer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strapplicablecustomer().data(), this->strapplicablecustomer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_strRevenueType;
        break;
      }

      // required string strRevenueType = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRevenueType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrevenuetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrevenuetype().data(), this->strrevenuetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_strIncrementMoney;
        break;
      }

      // required string strIncrementMoney = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strIncrementMoney:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strincrementmoney()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strincrementmoney().data(), this->strincrementmoney().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_strCurrentyType;
        break;
      }

      // required string strCurrentyType = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCurrentyType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcurrentytype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcurrentytype().data(), this->strcurrentytype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_strSealsBranch;
        break;
      }

      // required string strSealsBranch = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSealsBranch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsealsbranch()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strsealsbranch().data(), this->strsealsbranch().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_strRevenueInitialDay;
        break;
      }

      // required string strRevenueInitialDay = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRevenueInitialDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrevenueinitialday()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrevenueinitialday().data(), this->strrevenueinitialday().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_strDeadLine;
        break;
      }

      // required string strDeadLine = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strDeadLine:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdeadline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strdeadline().data(), this->strdeadline().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_strPaymentDay;
        break;
      }

      // required string strPaymentDay = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPaymentDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpaymentday()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpaymentday().data(), this->strpaymentday().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_strTrusteeFee;
        break;
      }

      // required string strTrusteeFee = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTrusteeFee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtrusteefee()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtrusteefee().data(), this->strtrusteefee().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_strCommissionCharge;
        break;
      }

      // required string strCommissionCharge = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCommissionCharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcommissioncharge()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcommissioncharge().data(), this->strcommissioncharge().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_strTrustee;
        break;
      }

      // required string strTrustee = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTrustee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtrustee()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtrustee().data(), this->strtrustee().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_strOverheadCharge;
        break;
      }

      // required string strOverheadCharge = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strOverheadCharge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stroverheadcharge()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stroverheadcharge().data(), this->stroverheadcharge().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_strRevenueCalculation;
        break;
      }

      // required string strRevenueCalculation = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRevenueCalculation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrevenuecalculation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrevenuecalculation().data(), this->strrevenuecalculation().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_strContent;
        break;
      }

      // required string strContent = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcontent().data(), this->strcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_nMaxTime;
        break;
      }

      // required int32 nMaxTime = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nMaxTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmaxtime_)));
          set_has_nmaxtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_nMineTime;
        break;
      }

      // required int32 nMineTime = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nMineTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nminetime_)));
          set_has_nminetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_nStandardTime;
        break;
      }

      // required int32 nStandardTime = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nStandardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstandardtime_)));
          set_has_nstandardtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_strPrequestion;
        break;
      }

      // required string strPrequestion = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPrequestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strprequestion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strprequestion().data(), this->strprequestion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_nIsPublished;
        break;
      }

      // required int32 nIsPublished = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nIsPublished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nispublished_)));
          set_has_nispublished();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_nIsEnabled;
        break;
      }

      // required int32 nIsEnabled = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nIsEnabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nisenabled_)));
          set_has_nisenabled();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_nEnableMigrated;
        break;
      }

      // required int32 nEnableMigrated = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nEnableMigrated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nenablemigrated_)));
          set_has_nenablemigrated();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_nRecordExistDays;
        break;
      }

      // required int32 nRecordExistDays = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nRecordExistDays:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nrecordexistdays_)));
          set_has_nrecordexistdays();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_nType;
        break;
      }

      // required int32 nType = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
          set_has_ntype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(306)) goto parse_strRiskLevelDesc;
        break;
      }

      // required string strRiskLevelDesc = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRiskLevelDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strriskleveldesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strriskleveldesc().data(), this->strriskleveldesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_nPROD_LIFECYCLE;
        break;
      }

      // required int32 nPROD_LIFECYCLE = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPROD_LIFECYCLE:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nprod_lifecycle_)));
          set_has_nprod_lifecycle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProduceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strProduceId = 1;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strproduceid(), output);
  }

  // required string strName = 2;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strname(), output);
  }

  // required string strProduceCode = 3;
  if (has_strproducecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducecode().data(), this->strproducecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strproducecode(), output);
  }

  // required int32 nPeriod = 4;
  if (has_nperiod()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nperiod(), output);
  }

  // required string strRevenue = 5;
  if (has_strrevenue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenue().data(), this->strrevenue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strrevenue(), output);
  }

  // required int32 nMiniAmount = 6;
  if (has_nminiamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nminiamount(), output);
  }

  // required string strRiskLevel = 7;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strrisklevel(), output);
  }

  // required string strSerialNumber = 8;
  if (has_strserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strserialnumber(), output);
  }

  // required string strPublishBeinTime = 9;
  if (has_strpublishbeintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpublishbeintime().data(), this->strpublishbeintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strpublishbeintime(), output);
  }

  // required string strPublishEndTime = 10;
  if (has_strpublishendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpublishendtime().data(), this->strpublishendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strpublishendtime(), output);
  }

  // required string strProductionType = 11;
  if (has_strproductiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproductiontype().data(), this->strproductiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->strproductiontype(), output);
  }

  // required string strApplicableCustomer = 12;
  if (has_strapplicablecustomer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strapplicablecustomer().data(), this->strapplicablecustomer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->strapplicablecustomer(), output);
  }

  // required string strRevenueType = 13;
  if (has_strrevenuetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenuetype().data(), this->strrevenuetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->strrevenuetype(), output);
  }

  // required string strIncrementMoney = 14;
  if (has_strincrementmoney()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strincrementmoney().data(), this->strincrementmoney().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->strincrementmoney(), output);
  }

  // required string strCurrentyType = 15;
  if (has_strcurrentytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcurrentytype().data(), this->strcurrentytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->strcurrentytype(), output);
  }

  // required string strSealsBranch = 16;
  if (has_strsealsbranch()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsealsbranch().data(), this->strsealsbranch().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->strsealsbranch(), output);
  }

  // required string strRevenueInitialDay = 17;
  if (has_strrevenueinitialday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenueinitialday().data(), this->strrevenueinitialday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->strrevenueinitialday(), output);
  }

  // required string strDeadLine = 18;
  if (has_strdeadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdeadline().data(), this->strdeadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->strdeadline(), output);
  }

  // required string strPaymentDay = 19;
  if (has_strpaymentday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpaymentday().data(), this->strpaymentday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->strpaymentday(), output);
  }

  // required string strTrusteeFee = 20;
  if (has_strtrusteefee()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtrusteefee().data(), this->strtrusteefee().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->strtrusteefee(), output);
  }

  // required string strCommissionCharge = 21;
  if (has_strcommissioncharge()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcommissioncharge().data(), this->strcommissioncharge().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->strcommissioncharge(), output);
  }

  // required string strTrustee = 22;
  if (has_strtrustee()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtrustee().data(), this->strtrustee().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->strtrustee(), output);
  }

  // required string strOverheadCharge = 23;
  if (has_stroverheadcharge()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroverheadcharge().data(), this->stroverheadcharge().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->stroverheadcharge(), output);
  }

  // required string strRevenueCalculation = 24;
  if (has_strrevenuecalculation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenuecalculation().data(), this->strrevenuecalculation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->strrevenuecalculation(), output);
  }

  // required string strContent = 25;
  if (has_strcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontent().data(), this->strcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->strcontent(), output);
  }

  // required int32 nMaxTime = 26;
  if (has_nmaxtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->nmaxtime(), output);
  }

  // required int32 nMineTime = 27;
  if (has_nminetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->nminetime(), output);
  }

  // required int32 nStandardTime = 28;
  if (has_nstandardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->nstandardtime(), output);
  }

  // required string strPrequestion = 29;
  if (has_strprequestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strprequestion().data(), this->strprequestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->strprequestion(), output);
  }

  // required int32 nIsPublished = 30;
  if (has_nispublished()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->nispublished(), output);
  }

  // required int32 nIsEnabled = 31;
  if (has_nisenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->nisenabled(), output);
  }

  // required int32 nExtendedInfo = 32;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 33;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 34;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      34, this->strextendedinfo2(), output);
  }

  // required int32 nEnableMigrated = 35;
  if (has_nenablemigrated()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->nenablemigrated(), output);
  }

  // required int32 nRecordExistDays = 36;
  if (has_nrecordexistdays()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->nrecordexistdays(), output);
  }

  // required int32 nType = 37;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->ntype(), output);
  }

  // required string strRiskLevelDesc = 38;
  if (has_strriskleveldesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strriskleveldesc().data(), this->strriskleveldesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      38, this->strriskleveldesc(), output);
  }

  // required int32 nPROD_LIFECYCLE = 39;
  if (has_nprod_lifecycle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->nprod_lifecycle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProduceInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strProduceId = 1;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strproduceid(), target);
  }

  // required string strName = 2;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strname(), target);
  }

  // required string strProduceCode = 3;
  if (has_strproducecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducecode().data(), this->strproducecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strproducecode(), target);
  }

  // required int32 nPeriod = 4;
  if (has_nperiod()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nperiod(), target);
  }

  // required string strRevenue = 5;
  if (has_strrevenue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenue().data(), this->strrevenue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strrevenue(), target);
  }

  // required int32 nMiniAmount = 6;
  if (has_nminiamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nminiamount(), target);
  }

  // required string strRiskLevel = 7;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strrisklevel(), target);
  }

  // required string strSerialNumber = 8;
  if (has_strserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strserialnumber(), target);
  }

  // required string strPublishBeinTime = 9;
  if (has_strpublishbeintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpublishbeintime().data(), this->strpublishbeintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strpublishbeintime(), target);
  }

  // required string strPublishEndTime = 10;
  if (has_strpublishendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpublishendtime().data(), this->strpublishendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strpublishendtime(), target);
  }

  // required string strProductionType = 11;
  if (has_strproductiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproductiontype().data(), this->strproductiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strproductiontype(), target);
  }

  // required string strApplicableCustomer = 12;
  if (has_strapplicablecustomer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strapplicablecustomer().data(), this->strapplicablecustomer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strapplicablecustomer(), target);
  }

  // required string strRevenueType = 13;
  if (has_strrevenuetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenuetype().data(), this->strrevenuetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strrevenuetype(), target);
  }

  // required string strIncrementMoney = 14;
  if (has_strincrementmoney()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strincrementmoney().data(), this->strincrementmoney().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strincrementmoney(), target);
  }

  // required string strCurrentyType = 15;
  if (has_strcurrentytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcurrentytype().data(), this->strcurrentytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strcurrentytype(), target);
  }

  // required string strSealsBranch = 16;
  if (has_strsealsbranch()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsealsbranch().data(), this->strsealsbranch().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strsealsbranch(), target);
  }

  // required string strRevenueInitialDay = 17;
  if (has_strrevenueinitialday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenueinitialday().data(), this->strrevenueinitialday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->strrevenueinitialday(), target);
  }

  // required string strDeadLine = 18;
  if (has_strdeadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdeadline().data(), this->strdeadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->strdeadline(), target);
  }

  // required string strPaymentDay = 19;
  if (has_strpaymentday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpaymentday().data(), this->strpaymentday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strpaymentday(), target);
  }

  // required string strTrusteeFee = 20;
  if (has_strtrusteefee()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtrusteefee().data(), this->strtrusteefee().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strtrusteefee(), target);
  }

  // required string strCommissionCharge = 21;
  if (has_strcommissioncharge()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcommissioncharge().data(), this->strcommissioncharge().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->strcommissioncharge(), target);
  }

  // required string strTrustee = 22;
  if (has_strtrustee()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtrustee().data(), this->strtrustee().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->strtrustee(), target);
  }

  // required string strOverheadCharge = 23;
  if (has_stroverheadcharge()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroverheadcharge().data(), this->stroverheadcharge().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->stroverheadcharge(), target);
  }

  // required string strRevenueCalculation = 24;
  if (has_strrevenuecalculation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrevenuecalculation().data(), this->strrevenuecalculation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->strrevenuecalculation(), target);
  }

  // required string strContent = 25;
  if (has_strcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontent().data(), this->strcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->strcontent(), target);
  }

  // required int32 nMaxTime = 26;
  if (has_nmaxtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->nmaxtime(), target);
  }

  // required int32 nMineTime = 27;
  if (has_nminetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->nminetime(), target);
  }

  // required int32 nStandardTime = 28;
  if (has_nstandardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->nstandardtime(), target);
  }

  // required string strPrequestion = 29;
  if (has_strprequestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strprequestion().data(), this->strprequestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->strprequestion(), target);
  }

  // required int32 nIsPublished = 30;
  if (has_nispublished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->nispublished(), target);
  }

  // required int32 nIsEnabled = 31;
  if (has_nisenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->nisenabled(), target);
  }

  // required int32 nExtendedInfo = 32;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 33;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 34;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->strextendedinfo2(), target);
  }

  // required int32 nEnableMigrated = 35;
  if (has_nenablemigrated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->nenablemigrated(), target);
  }

  // required int32 nRecordExistDays = 36;
  if (has_nrecordexistdays()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->nrecordexistdays(), target);
  }

  // required int32 nType = 37;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->ntype(), target);
  }

  // required string strRiskLevelDesc = 38;
  if (has_strriskleveldesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strriskleveldesc().data(), this->strriskleveldesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->strriskleveldesc(), target);
  }

  // required int32 nPROD_LIFECYCLE = 39;
  if (has_nprod_lifecycle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->nprod_lifecycle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProduceInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strProduceId = 1;
    if (has_strproduceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproduceid());
    }

    // required string strName = 2;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }

    // required string strProduceCode = 3;
    if (has_strproducecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproducecode());
    }

    // required int32 nPeriod = 4;
    if (has_nperiod()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nperiod());
    }

    // required string strRevenue = 5;
    if (has_strrevenue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrevenue());
    }

    // required int32 nMiniAmount = 6;
    if (has_nminiamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nminiamount());
    }

    // required string strRiskLevel = 7;
    if (has_strrisklevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrisklevel());
    }

    // required string strSerialNumber = 8;
    if (has_strserialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strserialnumber());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strPublishBeinTime = 9;
    if (has_strpublishbeintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpublishbeintime());
    }

    // required string strPublishEndTime = 10;
    if (has_strpublishendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpublishendtime());
    }

    // required string strProductionType = 11;
    if (has_strproductiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproductiontype());
    }

    // required string strApplicableCustomer = 12;
    if (has_strapplicablecustomer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strapplicablecustomer());
    }

    // required string strRevenueType = 13;
    if (has_strrevenuetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrevenuetype());
    }

    // required string strIncrementMoney = 14;
    if (has_strincrementmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strincrementmoney());
    }

    // required string strCurrentyType = 15;
    if (has_strcurrentytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcurrentytype());
    }

    // required string strSealsBranch = 16;
    if (has_strsealsbranch()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsealsbranch());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required string strRevenueInitialDay = 17;
    if (has_strrevenueinitialday()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrevenueinitialday());
    }

    // required string strDeadLine = 18;
    if (has_strdeadline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strdeadline());
    }

    // required string strPaymentDay = 19;
    if (has_strpaymentday()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpaymentday());
    }

    // required string strTrusteeFee = 20;
    if (has_strtrusteefee()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtrusteefee());
    }

    // required string strCommissionCharge = 21;
    if (has_strcommissioncharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcommissioncharge());
    }

    // required string strTrustee = 22;
    if (has_strtrustee()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtrustee());
    }

    // required string strOverheadCharge = 23;
    if (has_stroverheadcharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stroverheadcharge());
    }

    // required string strRevenueCalculation = 24;
    if (has_strrevenuecalculation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrevenuecalculation());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required string strContent = 25;
    if (has_strcontent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcontent());
    }

    // required int32 nMaxTime = 26;
    if (has_nmaxtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmaxtime());
    }

    // required int32 nMineTime = 27;
    if (has_nminetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nminetime());
    }

    // required int32 nStandardTime = 28;
    if (has_nstandardtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nstandardtime());
    }

    // required string strPrequestion = 29;
    if (has_strprequestion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strprequestion());
    }

    // required int32 nIsPublished = 30;
    if (has_nispublished()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nispublished());
    }

    // required int32 nIsEnabled = 31;
    if (has_nisenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nisenabled());
    }

    // required int32 nExtendedInfo = 32;
    if (has_nextendedinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required string strExtendedInfo1 = 33;
    if (has_strextendedinfo1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 34;
    if (has_strextendedinfo2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

    // required int32 nEnableMigrated = 35;
    if (has_nenablemigrated()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nenablemigrated());
    }

    // required int32 nRecordExistDays = 36;
    if (has_nrecordexistdays()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nrecordexistdays());
    }

    // required int32 nType = 37;
    if (has_ntype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntype());
    }

    // required string strRiskLevelDesc = 38;
    if (has_strriskleveldesc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strriskleveldesc());
    }

    // required int32 nPROD_LIFECYCLE = 39;
    if (has_nprod_lifecycle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nprod_lifecycle());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProduceInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProduceInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProduceInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProduceInfo::MergeFrom(const ProduceInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strproduceid()) {
      set_strproduceid(from.strproduceid());
    }
    if (from.has_strname()) {
      set_strname(from.strname());
    }
    if (from.has_strproducecode()) {
      set_strproducecode(from.strproducecode());
    }
    if (from.has_nperiod()) {
      set_nperiod(from.nperiod());
    }
    if (from.has_strrevenue()) {
      set_strrevenue(from.strrevenue());
    }
    if (from.has_nminiamount()) {
      set_nminiamount(from.nminiamount());
    }
    if (from.has_strrisklevel()) {
      set_strrisklevel(from.strrisklevel());
    }
    if (from.has_strserialnumber()) {
      set_strserialnumber(from.strserialnumber());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strpublishbeintime()) {
      set_strpublishbeintime(from.strpublishbeintime());
    }
    if (from.has_strpublishendtime()) {
      set_strpublishendtime(from.strpublishendtime());
    }
    if (from.has_strproductiontype()) {
      set_strproductiontype(from.strproductiontype());
    }
    if (from.has_strapplicablecustomer()) {
      set_strapplicablecustomer(from.strapplicablecustomer());
    }
    if (from.has_strrevenuetype()) {
      set_strrevenuetype(from.strrevenuetype());
    }
    if (from.has_strincrementmoney()) {
      set_strincrementmoney(from.strincrementmoney());
    }
    if (from.has_strcurrentytype()) {
      set_strcurrentytype(from.strcurrentytype());
    }
    if (from.has_strsealsbranch()) {
      set_strsealsbranch(from.strsealsbranch());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_strrevenueinitialday()) {
      set_strrevenueinitialday(from.strrevenueinitialday());
    }
    if (from.has_strdeadline()) {
      set_strdeadline(from.strdeadline());
    }
    if (from.has_strpaymentday()) {
      set_strpaymentday(from.strpaymentday());
    }
    if (from.has_strtrusteefee()) {
      set_strtrusteefee(from.strtrusteefee());
    }
    if (from.has_strcommissioncharge()) {
      set_strcommissioncharge(from.strcommissioncharge());
    }
    if (from.has_strtrustee()) {
      set_strtrustee(from.strtrustee());
    }
    if (from.has_stroverheadcharge()) {
      set_stroverheadcharge(from.stroverheadcharge());
    }
    if (from.has_strrevenuecalculation()) {
      set_strrevenuecalculation(from.strrevenuecalculation());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_strcontent()) {
      set_strcontent(from.strcontent());
    }
    if (from.has_nmaxtime()) {
      set_nmaxtime(from.nmaxtime());
    }
    if (from.has_nminetime()) {
      set_nminetime(from.nminetime());
    }
    if (from.has_nstandardtime()) {
      set_nstandardtime(from.nstandardtime());
    }
    if (from.has_strprequestion()) {
      set_strprequestion(from.strprequestion());
    }
    if (from.has_nispublished()) {
      set_nispublished(from.nispublished());
    }
    if (from.has_nisenabled()) {
      set_nisenabled(from.nisenabled());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
    if (from.has_nenablemigrated()) {
      set_nenablemigrated(from.nenablemigrated());
    }
    if (from.has_nrecordexistdays()) {
      set_nrecordexistdays(from.nrecordexistdays());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
    if (from.has_strriskleveldesc()) {
      set_strriskleveldesc(from.strriskleveldesc());
    }
    if (from.has_nprod_lifecycle()) {
      set_nprod_lifecycle(from.nprod_lifecycle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProduceInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProduceInfo::CopyFrom(const ProduceInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProduceInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void ProduceInfo::Swap(ProduceInfo* other) {
  if (other != this) {
    std::swap(strproduceid_, other->strproduceid_);
    std::swap(strname_, other->strname_);
    std::swap(strproducecode_, other->strproducecode_);
    std::swap(nperiod_, other->nperiod_);
    std::swap(strrevenue_, other->strrevenue_);
    std::swap(nminiamount_, other->nminiamount_);
    std::swap(strrisklevel_, other->strrisklevel_);
    std::swap(strserialnumber_, other->strserialnumber_);
    std::swap(strpublishbeintime_, other->strpublishbeintime_);
    std::swap(strpublishendtime_, other->strpublishendtime_);
    std::swap(strproductiontype_, other->strproductiontype_);
    std::swap(strapplicablecustomer_, other->strapplicablecustomer_);
    std::swap(strrevenuetype_, other->strrevenuetype_);
    std::swap(strincrementmoney_, other->strincrementmoney_);
    std::swap(strcurrentytype_, other->strcurrentytype_);
    std::swap(strsealsbranch_, other->strsealsbranch_);
    std::swap(strrevenueinitialday_, other->strrevenueinitialday_);
    std::swap(strdeadline_, other->strdeadline_);
    std::swap(strpaymentday_, other->strpaymentday_);
    std::swap(strtrusteefee_, other->strtrusteefee_);
    std::swap(strcommissioncharge_, other->strcommissioncharge_);
    std::swap(strtrustee_, other->strtrustee_);
    std::swap(stroverheadcharge_, other->stroverheadcharge_);
    std::swap(strrevenuecalculation_, other->strrevenuecalculation_);
    std::swap(strcontent_, other->strcontent_);
    std::swap(nmaxtime_, other->nmaxtime_);
    std::swap(nminetime_, other->nminetime_);
    std::swap(nstandardtime_, other->nstandardtime_);
    std::swap(strprequestion_, other->strprequestion_);
    std::swap(nispublished_, other->nispublished_);
    std::swap(nisenabled_, other->nisenabled_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(nenablemigrated_, other->nenablemigrated_);
    std::swap(nrecordexistdays_, other->nrecordexistdays_);
    std::swap(ntype_, other->ntype_);
    std::swap(strriskleveldesc_, other->strriskleveldesc_);
    std::swap(nprod_lifecycle_, other->nprod_lifecycle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProduceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProduceInfo_descriptor_;
  metadata.reflection = ProduceInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BranchInfo::kStrBranchIdFieldNumber;
const int BranchInfo::kStrNameFieldNumber;
const int BranchInfo::kStrAddressFieldNumber;
const int BranchInfo::kStrContactFieldNumber;
const int BranchInfo::kStrPhoneFieldNumber;
const int BranchInfo::kStrContentFieldNumber;
const int BranchInfo::kNExtendedInfoFieldNumber;
const int BranchInfo::kStrExtendedInfo1FieldNumber;
const int BranchInfo::kStrExtendedInfo2FieldNumber;
const int BranchInfo::kStrParentIdFieldNumber;
const int BranchInfo::kNIsLocalFieldNumber;
const int BranchInfo::kStrJDBRIDFieldNumber;
const int BranchInfo::kStrParentJDBRIDFieldNumber;
const int BranchInfo::kStrParentNameFieldNumber;
const int BranchInfo::kStrJDTYPEFieldNumber;
#endif  // !_MSC_VER

BranchInfo::BranchInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BranchInfo::InitAsDefaultInstance() {
}

BranchInfo::BranchInfo(const BranchInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BranchInfo::SharedCtor() {
  _cached_size_ = 0;
  strbranchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  straddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcontact_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strparentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nislocal_ = 0;
  strjdbrid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strparentjdbrid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strparentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strjdtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BranchInfo::~BranchInfo() {
  SharedDtor();
}

void BranchInfo::SharedDtor() {
  if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchid_;
  }
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (straddress_ != &::google::protobuf::internal::kEmptyString) {
    delete straddress_;
  }
  if (strcontact_ != &::google::protobuf::internal::kEmptyString) {
    delete strcontact_;
  }
  if (strphone_ != &::google::protobuf::internal::kEmptyString) {
    delete strphone_;
  }
  if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
    delete strcontent_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (strparentid_ != &::google::protobuf::internal::kEmptyString) {
    delete strparentid_;
  }
  if (strjdbrid_ != &::google::protobuf::internal::kEmptyString) {
    delete strjdbrid_;
  }
  if (strparentjdbrid_ != &::google::protobuf::internal::kEmptyString) {
    delete strparentjdbrid_;
  }
  if (strparentname_ != &::google::protobuf::internal::kEmptyString) {
    delete strparentname_;
  }
  if (strjdtype_ != &::google::protobuf::internal::kEmptyString) {
    delete strjdtype_;
  }
  if (this != default_instance_) {
  }
}

void BranchInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BranchInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BranchInfo_descriptor_;
}

const BranchInfo& BranchInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

BranchInfo* BranchInfo::default_instance_ = NULL;

BranchInfo* BranchInfo::New() const {
  return new BranchInfo;
}

void BranchInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strbranchid()) {
      if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchid_->clear();
      }
    }
    if (has_strname()) {
      if (strname_ != &::google::protobuf::internal::kEmptyString) {
        strname_->clear();
      }
    }
    if (has_straddress()) {
      if (straddress_ != &::google::protobuf::internal::kEmptyString) {
        straddress_->clear();
      }
    }
    if (has_strcontact()) {
      if (strcontact_ != &::google::protobuf::internal::kEmptyString) {
        strcontact_->clear();
      }
    }
    if (has_strphone()) {
      if (strphone_ != &::google::protobuf::internal::kEmptyString) {
        strphone_->clear();
      }
    }
    if (has_strcontent()) {
      if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
        strcontent_->clear();
      }
    }
    nextendedinfo_ = 0;
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
    if (has_strparentid()) {
      if (strparentid_ != &::google::protobuf::internal::kEmptyString) {
        strparentid_->clear();
      }
    }
    nislocal_ = 0;
    if (has_strjdbrid()) {
      if (strjdbrid_ != &::google::protobuf::internal::kEmptyString) {
        strjdbrid_->clear();
      }
    }
    if (has_strparentjdbrid()) {
      if (strparentjdbrid_ != &::google::protobuf::internal::kEmptyString) {
        strparentjdbrid_->clear();
      }
    }
    if (has_strparentname()) {
      if (strparentname_ != &::google::protobuf::internal::kEmptyString) {
        strparentname_->clear();
      }
    }
    if (has_strjdtype()) {
      if (strjdtype_ != &::google::protobuf::internal::kEmptyString) {
        strjdtype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BranchInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strBranchId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchid().data(), this->strbranchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strName;
        break;
      }

      // required string strName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strname().data(), this->strname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strAddress;
        break;
      }

      // required string strAddress = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_straddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->straddress().data(), this->straddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strContact;
        break;
      }

      // required string strContact = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strContact:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcontact()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcontact().data(), this->strcontact().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strPhone;
        break;
      }

      // required string strPhone = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strphone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strphone().data(), this->strphone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strContent;
        break;
      }

      // required string strContent = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcontent().data(), this->strcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strParentId;
        break;
      }

      // required string strParentId = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strParentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strparentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strparentid().data(), this->strparentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_nIsLocal;
        break;
      }

      // required int32 nIsLocal = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nIsLocal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nislocal_)));
          set_has_nislocal();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_strJDBRID;
        break;
      }

      // required string strJDBRID = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strJDBRID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strjdbrid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strjdbrid().data(), this->strjdbrid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_strParentJDBRID;
        break;
      }

      // required string strParentJDBRID = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strParentJDBRID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strparentjdbrid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strparentjdbrid().data(), this->strparentjdbrid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_strParentName;
        break;
      }

      // required string strParentName = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strParentName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strparentname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strparentname().data(), this->strparentname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_strJDTYPE;
        break;
      }

      // required string strJDTYPE = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strJDTYPE:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strjdtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strjdtype().data(), this->strjdtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BranchInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strBranchId = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strbranchid(), output);
  }

  // required string strName = 2;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strname(), output);
  }

  // required string strAddress = 3;
  if (has_straddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->straddress(), output);
  }

  // required string strContact = 4;
  if (has_strcontact()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontact().data(), this->strcontact().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strcontact(), output);
  }

  // required string strPhone = 5;
  if (has_strphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strphone().data(), this->strphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strphone(), output);
  }

  // required string strContent = 6;
  if (has_strcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontent().data(), this->strcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strcontent(), output);
  }

  // required int32 nExtendedInfo = 7;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 8;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 9;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strextendedinfo2(), output);
  }

  // required string strParentId = 10;
  if (has_strparentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentid().data(), this->strparentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strparentid(), output);
  }

  // required int32 nIsLocal = 11;
  if (has_nislocal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->nislocal(), output);
  }

  // required string strJDBRID = 12;
  if (has_strjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdbrid().data(), this->strjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->strjdbrid(), output);
  }

  // required string strParentJDBRID = 13;
  if (has_strparentjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentjdbrid().data(), this->strparentjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->strparentjdbrid(), output);
  }

  // required string strParentName = 14;
  if (has_strparentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentname().data(), this->strparentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->strparentname(), output);
  }

  // required string strJDTYPE = 15;
  if (has_strjdtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdtype().data(), this->strjdtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->strjdtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BranchInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strBranchId = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strbranchid(), target);
  }

  // required string strName = 2;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strname(), target);
  }

  // required string strAddress = 3;
  if (has_straddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->straddress().data(), this->straddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->straddress(), target);
  }

  // required string strContact = 4;
  if (has_strcontact()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontact().data(), this->strcontact().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strcontact(), target);
  }

  // required string strPhone = 5;
  if (has_strphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strphone().data(), this->strphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strphone(), target);
  }

  // required string strContent = 6;
  if (has_strcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcontent().data(), this->strcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strcontent(), target);
  }

  // required int32 nExtendedInfo = 7;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 8;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 9;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strextendedinfo2(), target);
  }

  // required string strParentId = 10;
  if (has_strparentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentid().data(), this->strparentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strparentid(), target);
  }

  // required int32 nIsLocal = 11;
  if (has_nislocal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->nislocal(), target);
  }

  // required string strJDBRID = 12;
  if (has_strjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdbrid().data(), this->strjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strjdbrid(), target);
  }

  // required string strParentJDBRID = 13;
  if (has_strparentjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentjdbrid().data(), this->strparentjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strparentjdbrid(), target);
  }

  // required string strParentName = 14;
  if (has_strparentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentname().data(), this->strparentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strparentname(), target);
  }

  // required string strJDTYPE = 15;
  if (has_strjdtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdtype().data(), this->strjdtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strjdtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BranchInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strBranchId = 1;
    if (has_strbranchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchid());
    }

    // required string strName = 2;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }

    // required string strAddress = 3;
    if (has_straddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->straddress());
    }

    // required string strContact = 4;
    if (has_strcontact()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcontact());
    }

    // required string strPhone = 5;
    if (has_strphone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strphone());
    }

    // required string strContent = 6;
    if (has_strcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcontent());
    }

    // required int32 nExtendedInfo = 7;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

    // required string strExtendedInfo1 = 8;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strExtendedInfo2 = 9;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

    // required string strParentId = 10;
    if (has_strparentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strparentid());
    }

    // required int32 nIsLocal = 11;
    if (has_nislocal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nislocal());
    }

    // required string strJDBRID = 12;
    if (has_strjdbrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strjdbrid());
    }

    // required string strParentJDBRID = 13;
    if (has_strparentjdbrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strparentjdbrid());
    }

    // required string strParentName = 14;
    if (has_strparentname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strparentname());
    }

    // required string strJDTYPE = 15;
    if (has_strjdtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strjdtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BranchInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BranchInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BranchInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BranchInfo::MergeFrom(const BranchInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strbranchid()) {
      set_strbranchid(from.strbranchid());
    }
    if (from.has_strname()) {
      set_strname(from.strname());
    }
    if (from.has_straddress()) {
      set_straddress(from.straddress());
    }
    if (from.has_strcontact()) {
      set_strcontact(from.strcontact());
    }
    if (from.has_strphone()) {
      set_strphone(from.strphone());
    }
    if (from.has_strcontent()) {
      set_strcontent(from.strcontent());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
    if (from.has_strparentid()) {
      set_strparentid(from.strparentid());
    }
    if (from.has_nislocal()) {
      set_nislocal(from.nislocal());
    }
    if (from.has_strjdbrid()) {
      set_strjdbrid(from.strjdbrid());
    }
    if (from.has_strparentjdbrid()) {
      set_strparentjdbrid(from.strparentjdbrid());
    }
    if (from.has_strparentname()) {
      set_strparentname(from.strparentname());
    }
    if (from.has_strjdtype()) {
      set_strjdtype(from.strjdtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BranchInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BranchInfo::CopyFrom(const BranchInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BranchInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fff) != 0x00007fff) return false;

  return true;
}

void BranchInfo::Swap(BranchInfo* other) {
  if (other != this) {
    std::swap(strbranchid_, other->strbranchid_);
    std::swap(strname_, other->strname_);
    std::swap(straddress_, other->straddress_);
    std::swap(strcontact_, other->strcontact_);
    std::swap(strphone_, other->strphone_);
    std::swap(strcontent_, other->strcontent_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(strparentid_, other->strparentid_);
    std::swap(nislocal_, other->nislocal_);
    std::swap(strjdbrid_, other->strjdbrid_);
    std::swap(strparentjdbrid_, other->strparentjdbrid_);
    std::swap(strparentname_, other->strparentname_);
    std::swap(strjdtype_, other->strjdtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BranchInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BranchInfo_descriptor_;
  metadata.reflection = BranchInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BusinessFileInfo::kStrRecordIdFieldNumber;
const int BusinessFileInfo::kStrBusinessInfoIdFieldNumber;
const int BusinessFileInfo::kNTypeFieldNumber;
const int BusinessFileInfo::kStrFileIdFieldNumber;
const int BusinessFileInfo::kStrRecordBeginFieldNumber;
const int BusinessFileInfo::kStrRecordEndFieldNumber;
const int BusinessFileInfo::kNExtendedInfoFieldNumber;
const int BusinessFileInfo::kStrExtendedInfo1FieldNumber;
const int BusinessFileInfo::kStrExtendedInfo2FieldNumber;
const int BusinessFileInfo::kNMigratedFieldNumber;
#endif  // !_MSC_VER

BusinessFileInfo::BusinessFileInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BusinessFileInfo::InitAsDefaultInstance() {
}

BusinessFileInfo::BusinessFileInfo(const BusinessFileInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BusinessFileInfo::SharedCtor() {
  _cached_size_ = 0;
  strrecordid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinessinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ntype_ = 0;
  strfileid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrecordbegin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrecordend_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nmigrated_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusinessFileInfo::~BusinessFileInfo() {
  SharedDtor();
}

void BusinessFileInfo::SharedDtor() {
  if (strrecordid_ != &::google::protobuf::internal::kEmptyString) {
    delete strrecordid_;
  }
  if (strbusinessinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessinfoid_;
  }
  if (strfileid_ != &::google::protobuf::internal::kEmptyString) {
    delete strfileid_;
  }
  if (strrecordbegin_ != &::google::protobuf::internal::kEmptyString) {
    delete strrecordbegin_;
  }
  if (strrecordend_ != &::google::protobuf::internal::kEmptyString) {
    delete strrecordend_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void BusinessFileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusinessFileInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusinessFileInfo_descriptor_;
}

const BusinessFileInfo& BusinessFileInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

BusinessFileInfo* BusinessFileInfo::default_instance_ = NULL;

BusinessFileInfo* BusinessFileInfo::New() const {
  return new BusinessFileInfo;
}

void BusinessFileInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strrecordid()) {
      if (strrecordid_ != &::google::protobuf::internal::kEmptyString) {
        strrecordid_->clear();
      }
    }
    if (has_strbusinessinfoid()) {
      if (strbusinessinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessinfoid_->clear();
      }
    }
    ntype_ = 0;
    if (has_strfileid()) {
      if (strfileid_ != &::google::protobuf::internal::kEmptyString) {
        strfileid_->clear();
      }
    }
    if (has_strrecordbegin()) {
      if (strrecordbegin_ != &::google::protobuf::internal::kEmptyString) {
        strrecordbegin_->clear();
      }
    }
    if (has_strrecordend()) {
      if (strrecordend_ != &::google::protobuf::internal::kEmptyString) {
        strrecordend_->clear();
      }
    }
    nextendedinfo_ = 0;
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
    nmigrated_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusinessFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strRecordId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrecordid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrecordid().data(), this->strrecordid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strBusinessInfoId;
        break;
      }

      // required string strBusinessInfoId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nType;
        break;
      }

      // required int32 nType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
          set_has_ntype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strFileId;
        break;
      }

      // required string strFileId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strFileId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfileid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strfileid().data(), this->strfileid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strRecordBegin;
        break;
      }

      // required string strRecordBegin = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRecordBegin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrecordbegin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrecordbegin().data(), this->strrecordbegin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strRecordEnd;
        break;
      }

      // required string strRecordEnd = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRecordEnd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrecordend()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrecordend().data(), this->strrecordend().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_nMigrated;
        break;
      }

      // required int32 nMigrated = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nMigrated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmigrated_)));
          set_has_nmigrated();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BusinessFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strRecordId = 1;
  if (has_strrecordid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrecordid().data(), this->strrecordid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strrecordid(), output);
  }

  // required string strBusinessInfoId = 2;
  if (has_strbusinessinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strbusinessinfoid(), output);
  }

  // required int32 nType = 3;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ntype(), output);
  }

  // required string strFileId = 4;
  if (has_strfileid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strfileid(), output);
  }

  // required string strRecordBegin = 5;
  if (has_strrecordbegin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrecordbegin().data(), this->strrecordbegin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strrecordbegin(), output);
  }

  // required string strRecordEnd = 6;
  if (has_strrecordend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrecordend().data(), this->strrecordend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strrecordend(), output);
  }

  // required int32 nExtendedInfo = 7;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 8;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 9;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strextendedinfo2(), output);
  }

  // required int32 nMigrated = 10;
  if (has_nmigrated()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->nmigrated(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BusinessFileInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strRecordId = 1;
  if (has_strrecordid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrecordid().data(), this->strrecordid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strrecordid(), target);
  }

  // required string strBusinessInfoId = 2;
  if (has_strbusinessinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbusinessinfoid(), target);
  }

  // required int32 nType = 3;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ntype(), target);
  }

  // required string strFileId = 4;
  if (has_strfileid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfileid().data(), this->strfileid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strfileid(), target);
  }

  // required string strRecordBegin = 5;
  if (has_strrecordbegin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrecordbegin().data(), this->strrecordbegin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strrecordbegin(), target);
  }

  // required string strRecordEnd = 6;
  if (has_strrecordend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrecordend().data(), this->strrecordend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strrecordend(), target);
  }

  // required int32 nExtendedInfo = 7;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 8;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 9;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strextendedinfo2(), target);
  }

  // required int32 nMigrated = 10;
  if (has_nmigrated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->nmigrated(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BusinessFileInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strRecordId = 1;
    if (has_strrecordid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrecordid());
    }

    // required string strBusinessInfoId = 2;
    if (has_strbusinessinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessinfoid());
    }

    // required int32 nType = 3;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntype());
    }

    // required string strFileId = 4;
    if (has_strfileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strfileid());
    }

    // required string strRecordBegin = 5;
    if (has_strrecordbegin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrecordbegin());
    }

    // required string strRecordEnd = 6;
    if (has_strrecordend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrecordend());
    }

    // required int32 nExtendedInfo = 7;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

    // required string strExtendedInfo1 = 8;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strExtendedInfo2 = 9;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

    // required int32 nMigrated = 10;
    if (has_nmigrated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmigrated());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusinessFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusinessFileInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusinessFileInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusinessFileInfo::MergeFrom(const BusinessFileInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strrecordid()) {
      set_strrecordid(from.strrecordid());
    }
    if (from.has_strbusinessinfoid()) {
      set_strbusinessinfoid(from.strbusinessinfoid());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
    if (from.has_strfileid()) {
      set_strfileid(from.strfileid());
    }
    if (from.has_strrecordbegin()) {
      set_strrecordbegin(from.strrecordbegin());
    }
    if (from.has_strrecordend()) {
      set_strrecordend(from.strrecordend());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
    if (from.has_nmigrated()) {
      set_nmigrated(from.nmigrated());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusinessFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusinessFileInfo::CopyFrom(const BusinessFileInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusinessFileInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;

  return true;
}

void BusinessFileInfo::Swap(BusinessFileInfo* other) {
  if (other != this) {
    std::swap(strrecordid_, other->strrecordid_);
    std::swap(strbusinessinfoid_, other->strbusinessinfoid_);
    std::swap(ntype_, other->ntype_);
    std::swap(strfileid_, other->strfileid_);
    std::swap(strrecordbegin_, other->strrecordbegin_);
    std::swap(strrecordend_, other->strrecordend_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(nmigrated_, other->nmigrated_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusinessFileInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusinessFileInfo_descriptor_;
  metadata.reflection = BusinessFileInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BusinessRelateInfo::kStrBusinessRelateInfoIdFieldNumber;
const int BusinessRelateInfo::kStrBusinessInfoIdFieldNumber;
const int BusinessRelateInfo::kNRelateTypeFieldNumber;
const int BusinessRelateInfo::kStrRelate1FieldNumber;
const int BusinessRelateInfo::kStrRelate2FieldNumber;
const int BusinessRelateInfo::kStrRelate3FieldNumber;
#endif  // !_MSC_VER

BusinessRelateInfo::BusinessRelateInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BusinessRelateInfo::InitAsDefaultInstance() {
}

BusinessRelateInfo::BusinessRelateInfo(const BusinessRelateInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BusinessRelateInfo::SharedCtor() {
  _cached_size_ = 0;
  strbusinessrelateinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinessinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nrelatetype_ = 0;
  strrelate1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrelate2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrelate3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusinessRelateInfo::~BusinessRelateInfo() {
  SharedDtor();
}

void BusinessRelateInfo::SharedDtor() {
  if (strbusinessrelateinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessrelateinfoid_;
  }
  if (strbusinessinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessinfoid_;
  }
  if (strrelate1_ != &::google::protobuf::internal::kEmptyString) {
    delete strrelate1_;
  }
  if (strrelate2_ != &::google::protobuf::internal::kEmptyString) {
    delete strrelate2_;
  }
  if (strrelate3_ != &::google::protobuf::internal::kEmptyString) {
    delete strrelate3_;
  }
  if (this != default_instance_) {
  }
}

void BusinessRelateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusinessRelateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusinessRelateInfo_descriptor_;
}

const BusinessRelateInfo& BusinessRelateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

BusinessRelateInfo* BusinessRelateInfo::default_instance_ = NULL;

BusinessRelateInfo* BusinessRelateInfo::New() const {
  return new BusinessRelateInfo;
}

void BusinessRelateInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strbusinessrelateinfoid()) {
      if (strbusinessrelateinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessrelateinfoid_->clear();
      }
    }
    if (has_strbusinessinfoid()) {
      if (strbusinessinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessinfoid_->clear();
      }
    }
    nrelatetype_ = 0;
    if (has_strrelate1()) {
      if (strrelate1_ != &::google::protobuf::internal::kEmptyString) {
        strrelate1_->clear();
      }
    }
    if (has_strrelate2()) {
      if (strrelate2_ != &::google::protobuf::internal::kEmptyString) {
        strrelate2_->clear();
      }
    }
    if (has_strrelate3()) {
      if (strrelate3_ != &::google::protobuf::internal::kEmptyString) {
        strrelate3_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusinessRelateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strBusinessRelateInfoId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessrelateinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessrelateinfoid().data(), this->strbusinessrelateinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strBusinessInfoId;
        break;
      }

      // required string strBusinessInfoId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nRelateType;
        break;
      }

      // required int32 nRelateType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nRelateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nrelatetype_)));
          set_has_nrelatetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strRelate1;
        break;
      }

      // required string strRelate1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRelate1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrelate1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrelate1().data(), this->strrelate1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strRelate2;
        break;
      }

      // required string strRelate2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRelate2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrelate2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrelate2().data(), this->strrelate2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strRelate3;
        break;
      }

      // required string strRelate3 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRelate3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrelate3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrelate3().data(), this->strrelate3().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BusinessRelateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strBusinessRelateInfoId = 1;
  if (has_strbusinessrelateinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessrelateinfoid().data(), this->strbusinessrelateinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strbusinessrelateinfoid(), output);
  }

  // required string strBusinessInfoId = 2;
  if (has_strbusinessinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strbusinessinfoid(), output);
  }

  // required int32 nRelateType = 3;
  if (has_nrelatetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nrelatetype(), output);
  }

  // required string strRelate1 = 4;
  if (has_strrelate1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrelate1().data(), this->strrelate1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strrelate1(), output);
  }

  // required string strRelate2 = 5;
  if (has_strrelate2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrelate2().data(), this->strrelate2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strrelate2(), output);
  }

  // required string strRelate3 = 6;
  if (has_strrelate3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrelate3().data(), this->strrelate3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strrelate3(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BusinessRelateInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strBusinessRelateInfoId = 1;
  if (has_strbusinessrelateinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessrelateinfoid().data(), this->strbusinessrelateinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strbusinessrelateinfoid(), target);
  }

  // required string strBusinessInfoId = 2;
  if (has_strbusinessinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessinfoid().data(), this->strbusinessinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbusinessinfoid(), target);
  }

  // required int32 nRelateType = 3;
  if (has_nrelatetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nrelatetype(), target);
  }

  // required string strRelate1 = 4;
  if (has_strrelate1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrelate1().data(), this->strrelate1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strrelate1(), target);
  }

  // required string strRelate2 = 5;
  if (has_strrelate2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrelate2().data(), this->strrelate2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strrelate2(), target);
  }

  // required string strRelate3 = 6;
  if (has_strrelate3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrelate3().data(), this->strrelate3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strrelate3(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BusinessRelateInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strBusinessRelateInfoId = 1;
    if (has_strbusinessrelateinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessrelateinfoid());
    }

    // required string strBusinessInfoId = 2;
    if (has_strbusinessinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessinfoid());
    }

    // required int32 nRelateType = 3;
    if (has_nrelatetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nrelatetype());
    }

    // required string strRelate1 = 4;
    if (has_strrelate1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrelate1());
    }

    // required string strRelate2 = 5;
    if (has_strrelate2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrelate2());
    }

    // required string strRelate3 = 6;
    if (has_strrelate3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrelate3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusinessRelateInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusinessRelateInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusinessRelateInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusinessRelateInfo::MergeFrom(const BusinessRelateInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strbusinessrelateinfoid()) {
      set_strbusinessrelateinfoid(from.strbusinessrelateinfoid());
    }
    if (from.has_strbusinessinfoid()) {
      set_strbusinessinfoid(from.strbusinessinfoid());
    }
    if (from.has_nrelatetype()) {
      set_nrelatetype(from.nrelatetype());
    }
    if (from.has_strrelate1()) {
      set_strrelate1(from.strrelate1());
    }
    if (from.has_strrelate2()) {
      set_strrelate2(from.strrelate2());
    }
    if (from.has_strrelate3()) {
      set_strrelate3(from.strrelate3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusinessRelateInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusinessRelateInfo::CopyFrom(const BusinessRelateInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusinessRelateInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void BusinessRelateInfo::Swap(BusinessRelateInfo* other) {
  if (other != this) {
    std::swap(strbusinessrelateinfoid_, other->strbusinessrelateinfoid_);
    std::swap(strbusinessinfoid_, other->strbusinessinfoid_);
    std::swap(nrelatetype_, other->nrelatetype_);
    std::swap(strrelate1_, other->strrelate1_);
    std::swap(strrelate2_, other->strrelate2_);
    std::swap(strrelate3_, other->strrelate3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusinessRelateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusinessRelateInfo_descriptor_;
  metadata.reflection = BusinessRelateInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EmployeeInfo::kStrEmployeeIdFieldNumber;
const int EmployeeInfo::kStrBranchIdFieldNumber;
const int EmployeeInfo::kStrNameFieldNumber;
const int EmployeeInfo::kStrPasswordFieldNumber;
const int EmployeeInfo::kStrCardIdFieldNumber;
const int EmployeeInfo::kStrRoleIdFieldNumber;
const int EmployeeInfo::kStrPhoneFieldNumber;
const int EmployeeInfo::kNExtendedInfoFieldNumber;
const int EmployeeInfo::kStrExtendedInfo1FieldNumber;
const int EmployeeInfo::kStrExtendedInfo2FieldNumber;
const int EmployeeInfo::kNFlagFieldNumber;
const int EmployeeInfo::kStPasswordEidtTimeFieldNumber;
const int EmployeeInfo::kStrJDBRIDFieldNumber;
const int EmployeeInfo::kStrTLNUMFieldNumber;
const int EmployeeInfo::kStrTELFieldNumber;
const int EmployeeInfo::kStrGWFieldNumber;
const int EmployeeInfo::kStrSTSFieldNumber;
const int EmployeeInfo::kStrTLINSTFieldNumber;
const int EmployeeInfo::kStrUSERNAMEFieldNumber;
const int EmployeeInfo::kStrROLENAMEFieldNumber;
const int EmployeeInfo::kStrUSERSTATUSFieldNumber;
const int EmployeeInfo::kNPassErrorCountFieldNumber;
#endif  // !_MSC_VER

EmployeeInfo::EmployeeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EmployeeInfo::InitAsDefaultInstance() {
}

EmployeeInfo::EmployeeInfo(const EmployeeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EmployeeInfo::SharedCtor() {
  _cached_size_ = 0;
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbranchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcardid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strroleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nflag_ = 0;
  stpasswordeidttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strjdbrid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strtlnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strtel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strgw_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strsts_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strtlinst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  struserstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  npasserrorcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EmployeeInfo::~EmployeeInfo() {
  SharedDtor();
}

void EmployeeInfo::SharedDtor() {
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchid_;
  }
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strpassword_ != &::google::protobuf::internal::kEmptyString) {
    delete strpassword_;
  }
  if (strcardid_ != &::google::protobuf::internal::kEmptyString) {
    delete strcardid_;
  }
  if (strroleid_ != &::google::protobuf::internal::kEmptyString) {
    delete strroleid_;
  }
  if (strphone_ != &::google::protobuf::internal::kEmptyString) {
    delete strphone_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (stpasswordeidttime_ != &::google::protobuf::internal::kEmptyString) {
    delete stpasswordeidttime_;
  }
  if (strjdbrid_ != &::google::protobuf::internal::kEmptyString) {
    delete strjdbrid_;
  }
  if (strtlnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strtlnum_;
  }
  if (strtel_ != &::google::protobuf::internal::kEmptyString) {
    delete strtel_;
  }
  if (strgw_ != &::google::protobuf::internal::kEmptyString) {
    delete strgw_;
  }
  if (strsts_ != &::google::protobuf::internal::kEmptyString) {
    delete strsts_;
  }
  if (strtlinst_ != &::google::protobuf::internal::kEmptyString) {
    delete strtlinst_;
  }
  if (strusername_ != &::google::protobuf::internal::kEmptyString) {
    delete strusername_;
  }
  if (strrolename_ != &::google::protobuf::internal::kEmptyString) {
    delete strrolename_;
  }
  if (struserstatus_ != &::google::protobuf::internal::kEmptyString) {
    delete struserstatus_;
  }
  if (this != default_instance_) {
  }
}

void EmployeeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmployeeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmployeeInfo_descriptor_;
}

const EmployeeInfo& EmployeeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

EmployeeInfo* EmployeeInfo::default_instance_ = NULL;

EmployeeInfo* EmployeeInfo::New() const {
  return new EmployeeInfo;
}

void EmployeeInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    if (has_strbranchid()) {
      if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchid_->clear();
      }
    }
    if (has_strname()) {
      if (strname_ != &::google::protobuf::internal::kEmptyString) {
        strname_->clear();
      }
    }
    if (has_strpassword()) {
      if (strpassword_ != &::google::protobuf::internal::kEmptyString) {
        strpassword_->clear();
      }
    }
    if (has_strcardid()) {
      if (strcardid_ != &::google::protobuf::internal::kEmptyString) {
        strcardid_->clear();
      }
    }
    if (has_strroleid()) {
      if (strroleid_ != &::google::protobuf::internal::kEmptyString) {
        strroleid_->clear();
      }
    }
    if (has_strphone()) {
      if (strphone_ != &::google::protobuf::internal::kEmptyString) {
        strphone_->clear();
      }
    }
    nextendedinfo_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
    nflag_ = 0;
    if (has_stpasswordeidttime()) {
      if (stpasswordeidttime_ != &::google::protobuf::internal::kEmptyString) {
        stpasswordeidttime_->clear();
      }
    }
    if (has_strjdbrid()) {
      if (strjdbrid_ != &::google::protobuf::internal::kEmptyString) {
        strjdbrid_->clear();
      }
    }
    if (has_strtlnum()) {
      if (strtlnum_ != &::google::protobuf::internal::kEmptyString) {
        strtlnum_->clear();
      }
    }
    if (has_strtel()) {
      if (strtel_ != &::google::protobuf::internal::kEmptyString) {
        strtel_->clear();
      }
    }
    if (has_strgw()) {
      if (strgw_ != &::google::protobuf::internal::kEmptyString) {
        strgw_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_strsts()) {
      if (strsts_ != &::google::protobuf::internal::kEmptyString) {
        strsts_->clear();
      }
    }
    if (has_strtlinst()) {
      if (strtlinst_ != &::google::protobuf::internal::kEmptyString) {
        strtlinst_->clear();
      }
    }
    if (has_strusername()) {
      if (strusername_ != &::google::protobuf::internal::kEmptyString) {
        strusername_->clear();
      }
    }
    if (has_strrolename()) {
      if (strrolename_ != &::google::protobuf::internal::kEmptyString) {
        strrolename_->clear();
      }
    }
    if (has_struserstatus()) {
      if (struserstatus_ != &::google::protobuf::internal::kEmptyString) {
        struserstatus_->clear();
      }
    }
    npasserrorcount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EmployeeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strEmployeeId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strBranchId;
        break;
      }

      // required string strBranchId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBranchId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchid().data(), this->strbranchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strName;
        break;
      }

      // required string strName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strname().data(), this->strname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strPassword;
        break;
      }

      // required string strPassword = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpassword().data(), this->strpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strCardId;
        break;
      }

      // required string strCardId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCardId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcardid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcardid().data(), this->strcardid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strRoleId;
        break;
      }

      // required string strRoleId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRoleId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strroleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strroleid().data(), this->strroleid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strPhone;
        break;
      }

      // required string strPhone = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strphone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strphone().data(), this->strphone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_nFlag;
        break;
      }

      // required int32 nFlag = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nflag_)));
          set_has_nflag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_stPasswordEidtTime;
        break;
      }

      // required string stPasswordEidtTime = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stPasswordEidtTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stpasswordeidttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stpasswordeidttime().data(), this->stpasswordeidttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_strJDBRID;
        break;
      }

      // required string strJDBRID = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strJDBRID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strjdbrid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strjdbrid().data(), this->strjdbrid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_strTLNUM;
        break;
      }

      // required string strTLNUM = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTLNUM:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtlnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtlnum().data(), this->strtlnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_strTEL;
        break;
      }

      // required string strTEL = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTEL:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtel().data(), this->strtel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_strGW;
        break;
      }

      // required string strGW = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strGW:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strgw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strgw().data(), this->strgw().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_strSTS;
        break;
      }

      // required string strSTS = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSTS:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strsts().data(), this->strsts().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_strTLINST;
        break;
      }

      // required string strTLINST = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTLINST:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtlinst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtlinst().data(), this->strtlinst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_strUSERNAME;
        break;
      }

      // required string strUSERNAME = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strUSERNAME:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strusername().data(), this->strusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_strROLENAME;
        break;
      }

      // required string strROLENAME = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strROLENAME:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrolename().data(), this->strrolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_strUSERSTATUS;
        break;
      }

      // required string strUSERSTATUS = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strUSERSTATUS:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_struserstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->struserstatus().data(), this->struserstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_nPassErrorCount;
        break;
      }

      // required int32 nPassErrorCount = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPassErrorCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npasserrorcount_)));
          set_has_npasserrorcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EmployeeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strEmployeeId = 1;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stremployeeid(), output);
  }

  // required string strBranchId = 2;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strbranchid(), output);
  }

  // required string strName = 3;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strname(), output);
  }

  // required string strPassword = 4;
  if (has_strpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strpassword(), output);
  }

  // required string strCardId = 5;
  if (has_strcardid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardid().data(), this->strcardid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strcardid(), output);
  }

  // required string strRoleId = 6;
  if (has_strroleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleid().data(), this->strroleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strroleid(), output);
  }

  // required string strPhone = 7;
  if (has_strphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strphone().data(), this->strphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strphone(), output);
  }

  // required int32 nExtendedInfo = 8;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 9;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 10;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strextendedinfo2(), output);
  }

  // required int32 nFlag = 11;
  if (has_nflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->nflag(), output);
  }

  // required string stPasswordEidtTime = 12;
  if (has_stpasswordeidttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stpasswordeidttime().data(), this->stpasswordeidttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->stpasswordeidttime(), output);
  }

  // required string strJDBRID = 13;
  if (has_strjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdbrid().data(), this->strjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->strjdbrid(), output);
  }

  // required string strTLNUM = 14;
  if (has_strtlnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtlnum().data(), this->strtlnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->strtlnum(), output);
  }

  // required string strTEL = 15;
  if (has_strtel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtel().data(), this->strtel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->strtel(), output);
  }

  // required string strGW = 16;
  if (has_strgw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strgw().data(), this->strgw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->strgw(), output);
  }

  // required string strSTS = 17;
  if (has_strsts()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsts().data(), this->strsts().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->strsts(), output);
  }

  // required string strTLINST = 18;
  if (has_strtlinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtlinst().data(), this->strtlinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->strtlinst(), output);
  }

  // required string strUSERNAME = 19;
  if (has_strusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->strusername(), output);
  }

  // required string strROLENAME = 20;
  if (has_strrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrolename().data(), this->strrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->strrolename(), output);
  }

  // required string strUSERSTATUS = 21;
  if (has_struserstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->struserstatus().data(), this->struserstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->struserstatus(), output);
  }

  // required int32 nPassErrorCount = 22;
  if (has_npasserrorcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->npasserrorcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EmployeeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strEmployeeId = 1;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stremployeeid(), target);
  }

  // required string strBranchId = 2;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbranchid(), target);
  }

  // required string strName = 3;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strname(), target);
  }

  // required string strPassword = 4;
  if (has_strpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpassword().data(), this->strpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strpassword(), target);
  }

  // required string strCardId = 5;
  if (has_strcardid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardid().data(), this->strcardid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strcardid(), target);
  }

  // required string strRoleId = 6;
  if (has_strroleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleid().data(), this->strroleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strroleid(), target);
  }

  // required string strPhone = 7;
  if (has_strphone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strphone().data(), this->strphone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strphone(), target);
  }

  // required int32 nExtendedInfo = 8;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 9;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 10;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strextendedinfo2(), target);
  }

  // required int32 nFlag = 11;
  if (has_nflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->nflag(), target);
  }

  // required string stPasswordEidtTime = 12;
  if (has_stpasswordeidttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stpasswordeidttime().data(), this->stpasswordeidttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->stpasswordeidttime(), target);
  }

  // required string strJDBRID = 13;
  if (has_strjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdbrid().data(), this->strjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strjdbrid(), target);
  }

  // required string strTLNUM = 14;
  if (has_strtlnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtlnum().data(), this->strtlnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strtlnum(), target);
  }

  // required string strTEL = 15;
  if (has_strtel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtel().data(), this->strtel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strtel(), target);
  }

  // required string strGW = 16;
  if (has_strgw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strgw().data(), this->strgw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strgw(), target);
  }

  // required string strSTS = 17;
  if (has_strsts()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsts().data(), this->strsts().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->strsts(), target);
  }

  // required string strTLINST = 18;
  if (has_strtlinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtlinst().data(), this->strtlinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->strtlinst(), target);
  }

  // required string strUSERNAME = 19;
  if (has_strusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strusername().data(), this->strusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strusername(), target);
  }

  // required string strROLENAME = 20;
  if (has_strrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrolename().data(), this->strrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strrolename(), target);
  }

  // required string strUSERSTATUS = 21;
  if (has_struserstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->struserstatus().data(), this->struserstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->struserstatus(), target);
  }

  // required int32 nPassErrorCount = 22;
  if (has_npasserrorcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->npasserrorcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EmployeeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strEmployeeId = 1;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required string strBranchId = 2;
    if (has_strbranchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchid());
    }

    // required string strName = 3;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }

    // required string strPassword = 4;
    if (has_strpassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpassword());
    }

    // required string strCardId = 5;
    if (has_strcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcardid());
    }

    // required string strRoleId = 6;
    if (has_strroleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strroleid());
    }

    // required string strPhone = 7;
    if (has_strphone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strphone());
    }

    // required int32 nExtendedInfo = 8;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strExtendedInfo1 = 9;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 10;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

    // required int32 nFlag = 11;
    if (has_nflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nflag());
    }

    // required string stPasswordEidtTime = 12;
    if (has_stpasswordeidttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stpasswordeidttime());
    }

    // required string strJDBRID = 13;
    if (has_strjdbrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strjdbrid());
    }

    // required string strTLNUM = 14;
    if (has_strtlnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtlnum());
    }

    // required string strTEL = 15;
    if (has_strtel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtel());
    }

    // required string strGW = 16;
    if (has_strgw()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strgw());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required string strSTS = 17;
    if (has_strsts()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsts());
    }

    // required string strTLINST = 18;
    if (has_strtlinst()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtlinst());
    }

    // required string strUSERNAME = 19;
    if (has_strusername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strusername());
    }

    // required string strROLENAME = 20;
    if (has_strrolename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrolename());
    }

    // required string strUSERSTATUS = 21;
    if (has_struserstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->struserstatus());
    }

    // required int32 nPassErrorCount = 22;
    if (has_npasserrorcount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npasserrorcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmployeeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EmployeeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EmployeeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EmployeeInfo::MergeFrom(const EmployeeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_strbranchid()) {
      set_strbranchid(from.strbranchid());
    }
    if (from.has_strname()) {
      set_strname(from.strname());
    }
    if (from.has_strpassword()) {
      set_strpassword(from.strpassword());
    }
    if (from.has_strcardid()) {
      set_strcardid(from.strcardid());
    }
    if (from.has_strroleid()) {
      set_strroleid(from.strroleid());
    }
    if (from.has_strphone()) {
      set_strphone(from.strphone());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
    if (from.has_nflag()) {
      set_nflag(from.nflag());
    }
    if (from.has_stpasswordeidttime()) {
      set_stpasswordeidttime(from.stpasswordeidttime());
    }
    if (from.has_strjdbrid()) {
      set_strjdbrid(from.strjdbrid());
    }
    if (from.has_strtlnum()) {
      set_strtlnum(from.strtlnum());
    }
    if (from.has_strtel()) {
      set_strtel(from.strtel());
    }
    if (from.has_strgw()) {
      set_strgw(from.strgw());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_strsts()) {
      set_strsts(from.strsts());
    }
    if (from.has_strtlinst()) {
      set_strtlinst(from.strtlinst());
    }
    if (from.has_strusername()) {
      set_strusername(from.strusername());
    }
    if (from.has_strrolename()) {
      set_strrolename(from.strrolename());
    }
    if (from.has_struserstatus()) {
      set_struserstatus(from.struserstatus());
    }
    if (from.has_npasserrorcount()) {
      set_npasserrorcount(from.npasserrorcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EmployeeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeeInfo::CopyFrom(const EmployeeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x003fffff) != 0x003fffff) return false;

  return true;
}

void EmployeeInfo::Swap(EmployeeInfo* other) {
  if (other != this) {
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(strbranchid_, other->strbranchid_);
    std::swap(strname_, other->strname_);
    std::swap(strpassword_, other->strpassword_);
    std::swap(strcardid_, other->strcardid_);
    std::swap(strroleid_, other->strroleid_);
    std::swap(strphone_, other->strphone_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(nflag_, other->nflag_);
    std::swap(stpasswordeidttime_, other->stpasswordeidttime_);
    std::swap(strjdbrid_, other->strjdbrid_);
    std::swap(strtlnum_, other->strtlnum_);
    std::swap(strtel_, other->strtel_);
    std::swap(strgw_, other->strgw_);
    std::swap(strsts_, other->strsts_);
    std::swap(strtlinst_, other->strtlinst_);
    std::swap(strusername_, other->strusername_);
    std::swap(strrolename_, other->strrolename_);
    std::swap(struserstatus_, other->struserstatus_);
    std::swap(npasserrorcount_, other->npasserrorcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EmployeeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmployeeInfo_descriptor_;
  metadata.reflection = EmployeeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EmployeePurviewInfo::kStrEmployeePurviewIdFieldNumber;
const int EmployeePurviewInfo::kStrEmployeeIdFieldNumber;
const int EmployeePurviewInfo::kStrPurviewInfoIdFieldNumber;
const int EmployeePurviewInfo::kNExtendedInfoFieldNumber;
const int EmployeePurviewInfo::kStrExtendedInfo1FieldNumber;
const int EmployeePurviewInfo::kStrExtendedInfo2FieldNumber;
#endif  // !_MSC_VER

EmployeePurviewInfo::EmployeePurviewInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EmployeePurviewInfo::InitAsDefaultInstance() {
}

EmployeePurviewInfo::EmployeePurviewInfo(const EmployeePurviewInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EmployeePurviewInfo::SharedCtor() {
  _cached_size_ = 0;
  stremployeepurviewid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpurviewinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EmployeePurviewInfo::~EmployeePurviewInfo() {
  SharedDtor();
}

void EmployeePurviewInfo::SharedDtor() {
  if (stremployeepurviewid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeepurviewid_;
  }
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strpurviewinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strpurviewinfoid_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void EmployeePurviewInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmployeePurviewInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmployeePurviewInfo_descriptor_;
}

const EmployeePurviewInfo& EmployeePurviewInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

EmployeePurviewInfo* EmployeePurviewInfo::default_instance_ = NULL;

EmployeePurviewInfo* EmployeePurviewInfo::New() const {
  return new EmployeePurviewInfo;
}

void EmployeePurviewInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_stremployeepurviewid()) {
      if (stremployeepurviewid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeepurviewid_->clear();
      }
    }
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    if (has_strpurviewinfoid()) {
      if (strpurviewinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strpurviewinfoid_->clear();
      }
    }
    nextendedinfo_ = 0;
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EmployeePurviewInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strEmployeePurviewId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeepurviewid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeepurviewid().data(), this->stremployeepurviewid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strEmployeeId;
        break;
      }

      // required string strEmployeeId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEmployeeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strPurviewInfoId;
        break;
      }

      // required string strPurviewInfoId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPurviewInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpurviewinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpurviewinfoid().data(), this->strpurviewinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EmployeePurviewInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strEmployeePurviewId = 1;
  if (has_stremployeepurviewid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeepurviewid().data(), this->stremployeepurviewid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stremployeepurviewid(), output);
  }

  // required string strEmployeeId = 2;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stremployeeid(), output);
  }

  // required string strPurviewInfoId = 3;
  if (has_strpurviewinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpurviewinfoid().data(), this->strpurviewinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strpurviewinfoid(), output);
  }

  // required int32 nExtendedInfo = 4;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EmployeePurviewInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strEmployeePurviewId = 1;
  if (has_stremployeepurviewid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeepurviewid().data(), this->stremployeepurviewid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stremployeepurviewid(), target);
  }

  // required string strEmployeeId = 2;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stremployeeid(), target);
  }

  // required string strPurviewInfoId = 3;
  if (has_strpurviewinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpurviewinfoid().data(), this->strpurviewinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strpurviewinfoid(), target);
  }

  // required int32 nExtendedInfo = 4;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EmployeePurviewInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strEmployeePurviewId = 1;
    if (has_stremployeepurviewid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeepurviewid());
    }

    // required string strEmployeeId = 2;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required string strPurviewInfoId = 3;
    if (has_strpurviewinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpurviewinfoid());
    }

    // required int32 nExtendedInfo = 4;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

    // required string strExtendedInfo1 = 5;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 6;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmployeePurviewInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EmployeePurviewInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EmployeePurviewInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EmployeePurviewInfo::MergeFrom(const EmployeePurviewInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stremployeepurviewid()) {
      set_stremployeepurviewid(from.stremployeepurviewid());
    }
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_strpurviewinfoid()) {
      set_strpurviewinfoid(from.strpurviewinfoid());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EmployeePurviewInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeePurviewInfo::CopyFrom(const EmployeePurviewInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeePurviewInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void EmployeePurviewInfo::Swap(EmployeePurviewInfo* other) {
  if (other != this) {
    std::swap(stremployeepurviewid_, other->stremployeepurviewid_);
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(strpurviewinfoid_, other->strpurviewinfoid_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EmployeePurviewInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmployeePurviewInfo_descriptor_;
  metadata.reflection = EmployeePurviewInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EmployeePurviewInfoList::kNEmployeePurviewSizeFieldNumber;
const int EmployeePurviewInfoList::kVecEmployeePurviewFieldNumber;
const int EmployeePurviewInfoList::kNStateSignFieldNumber;
const int EmployeePurviewInfoList::kNReservedFieldNumber;
#endif  // !_MSC_VER

EmployeePurviewInfoList::EmployeePurviewInfoList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EmployeePurviewInfoList::InitAsDefaultInstance() {
}

EmployeePurviewInfoList::EmployeePurviewInfoList(const EmployeePurviewInfoList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EmployeePurviewInfoList::SharedCtor() {
  _cached_size_ = 0;
  nemployeepurviewsize_ = 0;
  nstatesign_ = 0;
  nreserved_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EmployeePurviewInfoList::~EmployeePurviewInfoList() {
  SharedDtor();
}

void EmployeePurviewInfoList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EmployeePurviewInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmployeePurviewInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmployeePurviewInfoList_descriptor_;
}

const EmployeePurviewInfoList& EmployeePurviewInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

EmployeePurviewInfoList* EmployeePurviewInfoList::default_instance_ = NULL;

EmployeePurviewInfoList* EmployeePurviewInfoList::New() const {
  return new EmployeePurviewInfoList;
}

void EmployeePurviewInfoList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nemployeepurviewsize_ = 0;
    nstatesign_ = 0;
    nreserved_ = 0;
  }
  vecemployeepurview_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EmployeePurviewInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nEmployeePurviewSize = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nemployeepurviewsize_)));
          set_has_nemployeepurviewsize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_vecEmployeePurview;
        break;
      }

      // repeated .BFIS.EmployeePurviewInfo vecEmployeePurview = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vecEmployeePurview:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vecemployeepurview()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_vecEmployeePurview;
        if (input->ExpectTag(24)) goto parse_nStateSign;
        break;
      }

      // optional int32 nStateSign = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nStateSign:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstatesign_)));
          set_has_nstatesign();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nReserved;
        break;
      }

      // optional int32 nReserved = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nReserved:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nreserved_)));
          set_has_nreserved();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EmployeePurviewInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nEmployeePurviewSize = 1;
  if (has_nemployeepurviewsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nemployeepurviewsize(), output);
  }

  // repeated .BFIS.EmployeePurviewInfo vecEmployeePurview = 2;
  for (int i = 0; i < this->vecemployeepurview_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vecemployeepurview(i), output);
  }

  // optional int32 nStateSign = 3 [default = 0];
  if (has_nstatesign()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nstatesign(), output);
  }

  // optional int32 nReserved = 4 [default = 0];
  if (has_nreserved()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nreserved(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EmployeePurviewInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nEmployeePurviewSize = 1;
  if (has_nemployeepurviewsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nemployeepurviewsize(), target);
  }

  // repeated .BFIS.EmployeePurviewInfo vecEmployeePurview = 2;
  for (int i = 0; i < this->vecemployeepurview_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->vecemployeepurview(i), target);
  }

  // optional int32 nStateSign = 3 [default = 0];
  if (has_nstatesign()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nstatesign(), target);
  }

  // optional int32 nReserved = 4 [default = 0];
  if (has_nreserved()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nreserved(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EmployeePurviewInfoList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nEmployeePurviewSize = 1;
    if (has_nemployeepurviewsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nemployeepurviewsize());
    }

    // optional int32 nStateSign = 3 [default = 0];
    if (has_nstatesign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nstatesign());
    }

    // optional int32 nReserved = 4 [default = 0];
    if (has_nreserved()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nreserved());
    }

  }
  // repeated .BFIS.EmployeePurviewInfo vecEmployeePurview = 2;
  total_size += 1 * this->vecemployeepurview_size();
  for (int i = 0; i < this->vecemployeepurview_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vecemployeepurview(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmployeePurviewInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EmployeePurviewInfoList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EmployeePurviewInfoList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EmployeePurviewInfoList::MergeFrom(const EmployeePurviewInfoList& from) {
  GOOGLE_CHECK_NE(&from, this);
  vecemployeepurview_.MergeFrom(from.vecemployeepurview_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nemployeepurviewsize()) {
      set_nemployeepurviewsize(from.nemployeepurviewsize());
    }
    if (from.has_nstatesign()) {
      set_nstatesign(from.nstatesign());
    }
    if (from.has_nreserved()) {
      set_nreserved(from.nreserved());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EmployeePurviewInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeePurviewInfoList::CopyFrom(const EmployeePurviewInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeePurviewInfoList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < vecemployeepurview_size(); i++) {
    if (!this->vecemployeepurview(i).IsInitialized()) return false;
  }
  return true;
}

void EmployeePurviewInfoList::Swap(EmployeePurviewInfoList* other) {
  if (other != this) {
    std::swap(nemployeepurviewsize_, other->nemployeepurviewsize_);
    vecemployeepurview_.Swap(&other->vecemployeepurview_);
    std::swap(nstatesign_, other->nstatesign_);
    std::swap(nreserved_, other->nreserved_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EmployeePurviewInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmployeePurviewInfoList_descriptor_;
  metadata.reflection = EmployeePurviewInfoList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PurviewInfo::kStrPurviewInfoIdFieldNumber;
const int PurviewInfo::kStrParentPurviewIdFieldNumber;
const int PurviewInfo::kStrPurviewCodeFieldNumber;
const int PurviewInfo::kStrDescriptionFieldNumber;
const int PurviewInfo::kStrExtendedInfo1FieldNumber;
const int PurviewInfo::kStrExtendedInfo2FieldNumber;
#endif  // !_MSC_VER

PurviewInfo::PurviewInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PurviewInfo::InitAsDefaultInstance() {
}

PurviewInfo::PurviewInfo(const PurviewInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PurviewInfo::SharedCtor() {
  _cached_size_ = 0;
  strpurviewinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strparentpurviewid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strpurviewcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strdescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PurviewInfo::~PurviewInfo() {
  SharedDtor();
}

void PurviewInfo::SharedDtor() {
  if (strpurviewinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strpurviewinfoid_;
  }
  if (strparentpurviewid_ != &::google::protobuf::internal::kEmptyString) {
    delete strparentpurviewid_;
  }
  if (strpurviewcode_ != &::google::protobuf::internal::kEmptyString) {
    delete strpurviewcode_;
  }
  if (strdescription_ != &::google::protobuf::internal::kEmptyString) {
    delete strdescription_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void PurviewInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PurviewInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PurviewInfo_descriptor_;
}

const PurviewInfo& PurviewInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

PurviewInfo* PurviewInfo::default_instance_ = NULL;

PurviewInfo* PurviewInfo::New() const {
  return new PurviewInfo;
}

void PurviewInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strpurviewinfoid()) {
      if (strpurviewinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strpurviewinfoid_->clear();
      }
    }
    if (has_strparentpurviewid()) {
      if (strparentpurviewid_ != &::google::protobuf::internal::kEmptyString) {
        strparentpurviewid_->clear();
      }
    }
    if (has_strpurviewcode()) {
      if (strpurviewcode_ != &::google::protobuf::internal::kEmptyString) {
        strpurviewcode_->clear();
      }
    }
    if (has_strdescription()) {
      if (strdescription_ != &::google::protobuf::internal::kEmptyString) {
        strdescription_->clear();
      }
    }
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PurviewInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strPurviewInfoId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpurviewinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpurviewinfoid().data(), this->strpurviewinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strParentPurviewId;
        break;
      }

      // required string strParentPurviewId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strParentPurviewId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strparentpurviewid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strparentpurviewid().data(), this->strparentpurviewid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strPurviewCode;
        break;
      }

      // required string strPurviewCode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strPurviewCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpurviewcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strpurviewcode().data(), this->strpurviewcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strDescription;
        break;
      }

      // required string strDescription = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strDescription:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdescription()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strdescription().data(), this->strdescription().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PurviewInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strPurviewInfoId = 1;
  if (has_strpurviewinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpurviewinfoid().data(), this->strpurviewinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strpurviewinfoid(), output);
  }

  // required string strParentPurviewId = 2;
  if (has_strparentpurviewid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentpurviewid().data(), this->strparentpurviewid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strparentpurviewid(), output);
  }

  // required string strPurviewCode = 3;
  if (has_strpurviewcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpurviewcode().data(), this->strpurviewcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strpurviewcode(), output);
  }

  // required string strDescription = 4;
  if (has_strdescription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strdescription(), output);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PurviewInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strPurviewInfoId = 1;
  if (has_strpurviewinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpurviewinfoid().data(), this->strpurviewinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strpurviewinfoid(), target);
  }

  // required string strParentPurviewId = 2;
  if (has_strparentpurviewid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strparentpurviewid().data(), this->strparentpurviewid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strparentpurviewid(), target);
  }

  // required string strPurviewCode = 3;
  if (has_strpurviewcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strpurviewcode().data(), this->strpurviewcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strpurviewcode(), target);
  }

  // required string strDescription = 4;
  if (has_strdescription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdescription().data(), this->strdescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strdescription(), target);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PurviewInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strPurviewInfoId = 1;
    if (has_strpurviewinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpurviewinfoid());
    }

    // required string strParentPurviewId = 2;
    if (has_strparentpurviewid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strparentpurviewid());
    }

    // required string strPurviewCode = 3;
    if (has_strpurviewcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strpurviewcode());
    }

    // required string strDescription = 4;
    if (has_strdescription()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strdescription());
    }

    // required string strExtendedInfo1 = 5;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 6;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PurviewInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PurviewInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PurviewInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PurviewInfo::MergeFrom(const PurviewInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strpurviewinfoid()) {
      set_strpurviewinfoid(from.strpurviewinfoid());
    }
    if (from.has_strparentpurviewid()) {
      set_strparentpurviewid(from.strparentpurviewid());
    }
    if (from.has_strpurviewcode()) {
      set_strpurviewcode(from.strpurviewcode());
    }
    if (from.has_strdescription()) {
      set_strdescription(from.strdescription());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PurviewInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurviewInfo::CopyFrom(const PurviewInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurviewInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void PurviewInfo::Swap(PurviewInfo* other) {
  if (other != this) {
    std::swap(strpurviewinfoid_, other->strpurviewinfoid_);
    std::swap(strparentpurviewid_, other->strparentpurviewid_);
    std::swap(strpurviewcode_, other->strpurviewcode_);
    std::swap(strdescription_, other->strdescription_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PurviewInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PurviewInfo_descriptor_;
  metadata.reflection = PurviewInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RoleInfo::kStrRoleInfoIdFieldNumber;
const int RoleInfo::kStrRoleNameFieldNumber;
const int RoleInfo::kNRoleLevelFieldNumber;
const int RoleInfo::kNExtendedInfoFieldNumber;
const int RoleInfo::kStrExtendedInfo1FieldNumber;
const int RoleInfo::kStrExtendedInfo2FieldNumber;
const int RoleInfo::kStrBranchInfoIdFieldNumber;
const int RoleInfo::kNFlagFieldNumber;
#endif  // !_MSC_VER

RoleInfo::RoleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RoleInfo::InitAsDefaultInstance() {
}

RoleInfo::RoleInfo(const RoleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RoleInfo::SharedCtor() {
  _cached_size_ = 0;
  strroleinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nrolelevel_ = 0;
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbranchinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nflag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoleInfo::~RoleInfo() {
  SharedDtor();
}

void RoleInfo::SharedDtor() {
  if (strroleinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strroleinfoid_;
  }
  if (strrolename_ != &::google::protobuf::internal::kEmptyString) {
    delete strrolename_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (strbranchinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchinfoid_;
  }
  if (this != default_instance_) {
  }
}

void RoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleInfo_descriptor_;
}

const RoleInfo& RoleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

RoleInfo* RoleInfo::default_instance_ = NULL;

RoleInfo* RoleInfo::New() const {
  return new RoleInfo;
}

void RoleInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strroleinfoid()) {
      if (strroleinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strroleinfoid_->clear();
      }
    }
    if (has_strrolename()) {
      if (strrolename_ != &::google::protobuf::internal::kEmptyString) {
        strrolename_->clear();
      }
    }
    nrolelevel_ = 0;
    nextendedinfo_ = 0;
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
    if (has_strbranchinfoid()) {
      if (strbranchinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchinfoid_->clear();
      }
    }
    nflag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strRoleInfoId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strroleinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strroleinfoid().data(), this->strroleinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strRoleName;
        break;
      }

      // required string strRoleName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRoleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrolename().data(), this->strrolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nRoleLevel;
        break;
      }

      // required int32 nRoleLevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nRoleLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nrolelevel_)));
          set_has_nrolelevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strBranchInfoId;
        break;
      }

      // required string strBranchInfoId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBranchInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchinfoid().data(), this->strbranchinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_nFlag;
        break;
      }

      // required int32 nFlag = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nflag_)));
          set_has_nflag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strRoleInfoId = 1;
  if (has_strroleinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleinfoid().data(), this->strroleinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strroleinfoid(), output);
  }

  // required string strRoleName = 2;
  if (has_strrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrolename().data(), this->strrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strrolename(), output);
  }

  // required int32 nRoleLevel = 3;
  if (has_nrolelevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nrolelevel(), output);
  }

  // required int32 nExtendedInfo = 4;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strextendedinfo2(), output);
  }

  // required string strBranchInfoId = 7;
  if (has_strbranchinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchinfoid().data(), this->strbranchinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strbranchinfoid(), output);
  }

  // required int32 nFlag = 8;
  if (has_nflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nflag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RoleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strRoleInfoId = 1;
  if (has_strroleinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strroleinfoid().data(), this->strroleinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strroleinfoid(), target);
  }

  // required string strRoleName = 2;
  if (has_strrolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrolename().data(), this->strrolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strrolename(), target);
  }

  // required int32 nRoleLevel = 3;
  if (has_nrolelevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nrolelevel(), target);
  }

  // required int32 nExtendedInfo = 4;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strextendedinfo2(), target);
  }

  // required string strBranchInfoId = 7;
  if (has_strbranchinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchinfoid().data(), this->strbranchinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strbranchinfoid(), target);
  }

  // required int32 nFlag = 8;
  if (has_nflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nflag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RoleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strRoleInfoId = 1;
    if (has_strroleinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strroleinfoid());
    }

    // required string strRoleName = 2;
    if (has_strrolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrolename());
    }

    // required int32 nRoleLevel = 3;
    if (has_nrolelevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nrolelevel());
    }

    // required int32 nExtendedInfo = 4;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

    // required string strExtendedInfo1 = 5;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 6;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

    // required string strBranchInfoId = 7;
    if (has_strbranchinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchinfoid());
    }

    // required int32 nFlag = 8;
    if (has_nflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nflag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RoleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RoleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RoleInfo::MergeFrom(const RoleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strroleinfoid()) {
      set_strroleinfoid(from.strroleinfoid());
    }
    if (from.has_strrolename()) {
      set_strrolename(from.strrolename());
    }
    if (from.has_nrolelevel()) {
      set_nrolelevel(from.nrolelevel());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
    if (from.has_strbranchinfoid()) {
      set_strbranchinfoid(from.strbranchinfoid());
    }
    if (from.has_nflag()) {
      set_nflag(from.nflag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleInfo::CopyFrom(const RoleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void RoleInfo::Swap(RoleInfo* other) {
  if (other != this) {
    std::swap(strroleinfoid_, other->strroleinfoid_);
    std::swap(strrolename_, other->strrolename_);
    std::swap(nrolelevel_, other->nrolelevel_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(strbranchinfoid_, other->strbranchinfoid_);
    std::swap(nflag_, other->nflag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RoleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleInfo_descriptor_;
  metadata.reflection = RoleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserMapInfo::kStrUsermapinfoidFieldNumber;
const int UserMapInfo::kStrEmployeeidFieldNumber;
const int UserMapInfo::kStrSocusernameFieldNumber;
const int UserMapInfo::kStrSocpasswordFieldNumber;
const int UserMapInfo::kStrExtendedinfo1FieldNumber;
const int UserMapInfo::kStrExtendedinfo2FieldNumber;
#endif  // !_MSC_VER

UserMapInfo::UserMapInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserMapInfo::InitAsDefaultInstance() {
}

UserMapInfo::UserMapInfo(const UserMapInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserMapInfo::SharedCtor() {
  _cached_size_ = 0;
  strusermapinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strsocusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strsocpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserMapInfo::~UserMapInfo() {
  SharedDtor();
}

void UserMapInfo::SharedDtor() {
  if (strusermapinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strusermapinfoid_;
  }
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strsocusername_ != &::google::protobuf::internal::kEmptyString) {
    delete strsocusername_;
  }
  if (strsocpassword_ != &::google::protobuf::internal::kEmptyString) {
    delete strsocpassword_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void UserMapInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserMapInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserMapInfo_descriptor_;
}

const UserMapInfo& UserMapInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

UserMapInfo* UserMapInfo::default_instance_ = NULL;

UserMapInfo* UserMapInfo::New() const {
  return new UserMapInfo;
}

void UserMapInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strusermapinfoid()) {
      if (strusermapinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strusermapinfoid_->clear();
      }
    }
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    if (has_strsocusername()) {
      if (strsocusername_ != &::google::protobuf::internal::kEmptyString) {
        strsocusername_->clear();
      }
    }
    if (has_strsocpassword()) {
      if (strsocpassword_ != &::google::protobuf::internal::kEmptyString) {
        strsocpassword_->clear();
      }
    }
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserMapInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strUsermapinfoid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strusermapinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strusermapinfoid().data(), this->strusermapinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strEmployeeid;
        break;
      }

      // required string strEmployeeid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEmployeeid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strSocusername;
        break;
      }

      // required string strSocusername = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSocusername:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsocusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strsocusername().data(), this->strsocusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strSocpassword;
        break;
      }

      // required string strSocpassword = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSocpassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsocpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strsocpassword().data(), this->strsocpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strExtendedinfo1;
        break;
      }

      // required string strExtendedinfo1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedinfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strExtendedinfo2;
        break;
      }

      // required string strExtendedinfo2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedinfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserMapInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strUsermapinfoid = 1;
  if (has_strusermapinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strusermapinfoid().data(), this->strusermapinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strusermapinfoid(), output);
  }

  // required string strEmployeeid = 2;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stremployeeid(), output);
  }

  // required string strSocusername = 3;
  if (has_strsocusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsocusername().data(), this->strsocusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strsocusername(), output);
  }

  // required string strSocpassword = 4;
  if (has_strsocpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsocpassword().data(), this->strsocpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strsocpassword(), output);
  }

  // required string strExtendedinfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strextendedinfo1(), output);
  }

  // required string strExtendedinfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserMapInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strUsermapinfoid = 1;
  if (has_strusermapinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strusermapinfoid().data(), this->strusermapinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strusermapinfoid(), target);
  }

  // required string strEmployeeid = 2;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stremployeeid(), target);
  }

  // required string strSocusername = 3;
  if (has_strsocusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsocusername().data(), this->strsocusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strsocusername(), target);
  }

  // required string strSocpassword = 4;
  if (has_strsocpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strsocpassword().data(), this->strsocpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strsocpassword(), target);
  }

  // required string strExtendedinfo1 = 5;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strextendedinfo1(), target);
  }

  // required string strExtendedinfo2 = 6;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserMapInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strUsermapinfoid = 1;
    if (has_strusermapinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strusermapinfoid());
    }

    // required string strEmployeeid = 2;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required string strSocusername = 3;
    if (has_strsocusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsocusername());
    }

    // required string strSocpassword = 4;
    if (has_strsocpassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsocpassword());
    }

    // required string strExtendedinfo1 = 5;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedinfo2 = 6;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserMapInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserMapInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserMapInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserMapInfo::MergeFrom(const UserMapInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strusermapinfoid()) {
      set_strusermapinfoid(from.strusermapinfoid());
    }
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_strsocusername()) {
      set_strsocusername(from.strsocusername());
    }
    if (from.has_strsocpassword()) {
      set_strsocpassword(from.strsocpassword());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserMapInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMapInfo::CopyFrom(const UserMapInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMapInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void UserMapInfo::Swap(UserMapInfo* other) {
  if (other != this) {
    std::swap(strusermapinfoid_, other->strusermapinfoid_);
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(strsocusername_, other->strsocusername_);
    std::swap(strsocpassword_, other->strsocpassword_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserMapInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserMapInfo_descriptor_;
  metadata.reflection = UserMapInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BusinessQueryParam::kStrBranchidFieldNumber;
const int BusinessQueryParam::kStrEmployeeidFieldNumber;
const int BusinessQueryParam::kStrCustomeridFieldNumber;
const int BusinessQueryParam::kStrProduceidFieldNumber;
const int BusinessQueryParam::kStrStarttimeFieldNumber;
const int BusinessQueryParam::kStrEndtimeFieldNumber;
const int BusinessQueryParam::kNPagesizeFieldNumber;
const int BusinessQueryParam::kNPageindexFieldNumber;
const int BusinessQueryParam::kNRecordcountFieldNumber;
const int BusinessQueryParam::kStrSerialNumberFieldNumber;
const int BusinessQueryParam::kStrCredenitialsTypeFieldNumber;
const int BusinessQueryParam::kStrBusinessTypeFieldNumber;
const int BusinessQueryParam::kStrCardNumberFieldNumber;
const int BusinessQueryParam::kNMarkerTypeFieldNumber;
const int BusinessQueryParam::kStrRiskLevelFieldNumber;
const int BusinessQueryParam::kStrConditionExFieldNumber;
const int BusinessQueryParam::kStrMediumNumFieldNumber;
const int BusinessQueryParam::kStrExtendedInfo2FieldNumber;
#endif  // !_MSC_VER

BusinessQueryParam::BusinessQueryParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BusinessQueryParam::InitAsDefaultInstance() {
}

BusinessQueryParam::BusinessQueryParam(const BusinessQueryParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BusinessQueryParam::SharedCtor() {
  _cached_size_ = 0;
  strbranchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcustomerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproduceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strstarttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  npagesize_ = 0;
  npageindex_ = 0;
  nrecordcount_ = 0;
  strserialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcredenitialstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinesstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcardnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nmarkertype_ = 0;
  strrisklevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strconditionex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmediumnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusinessQueryParam::~BusinessQueryParam() {
  SharedDtor();
}

void BusinessQueryParam::SharedDtor() {
  if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchid_;
  }
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strcustomerid_ != &::google::protobuf::internal::kEmptyString) {
    delete strcustomerid_;
  }
  if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
    delete strproduceid_;
  }
  if (strstarttime_ != &::google::protobuf::internal::kEmptyString) {
    delete strstarttime_;
  }
  if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
    delete strendtime_;
  }
  if (strserialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete strserialnumber_;
  }
  if (strcredenitialstype_ != &::google::protobuf::internal::kEmptyString) {
    delete strcredenitialstype_;
  }
  if (strbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinesstype_;
  }
  if (strcardnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete strcardnumber_;
  }
  if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
    delete strrisklevel_;
  }
  if (strconditionex_ != &::google::protobuf::internal::kEmptyString) {
    delete strconditionex_;
  }
  if (strmediumnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strmediumnum_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void BusinessQueryParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusinessQueryParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusinessQueryParam_descriptor_;
}

const BusinessQueryParam& BusinessQueryParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

BusinessQueryParam* BusinessQueryParam::default_instance_ = NULL;

BusinessQueryParam* BusinessQueryParam::New() const {
  return new BusinessQueryParam;
}

void BusinessQueryParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strbranchid()) {
      if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchid_->clear();
      }
    }
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    if (has_strcustomerid()) {
      if (strcustomerid_ != &::google::protobuf::internal::kEmptyString) {
        strcustomerid_->clear();
      }
    }
    if (has_strproduceid()) {
      if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
        strproduceid_->clear();
      }
    }
    if (has_strstarttime()) {
      if (strstarttime_ != &::google::protobuf::internal::kEmptyString) {
        strstarttime_->clear();
      }
    }
    if (has_strendtime()) {
      if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
        strendtime_->clear();
      }
    }
    npagesize_ = 0;
    npageindex_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    nrecordcount_ = 0;
    if (has_strserialnumber()) {
      if (strserialnumber_ != &::google::protobuf::internal::kEmptyString) {
        strserialnumber_->clear();
      }
    }
    if (has_strcredenitialstype()) {
      if (strcredenitialstype_ != &::google::protobuf::internal::kEmptyString) {
        strcredenitialstype_->clear();
      }
    }
    if (has_strbusinesstype()) {
      if (strbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
        strbusinesstype_->clear();
      }
    }
    if (has_strcardnumber()) {
      if (strcardnumber_ != &::google::protobuf::internal::kEmptyString) {
        strcardnumber_->clear();
      }
    }
    nmarkertype_ = 0;
    if (has_strrisklevel()) {
      if (strrisklevel_ != &::google::protobuf::internal::kEmptyString) {
        strrisklevel_->clear();
      }
    }
    if (has_strconditionex()) {
      if (strconditionex_ != &::google::protobuf::internal::kEmptyString) {
        strconditionex_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_strmediumnum()) {
      if (strmediumnum_ != &::google::protobuf::internal::kEmptyString) {
        strmediumnum_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusinessQueryParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strBranchid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchid().data(), this->strbranchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strEmployeeid;
        break;
      }

      // required string strEmployeeid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEmployeeid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strCustomerid;
        break;
      }

      // required string strCustomerid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCustomerid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcustomerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcustomerid().data(), this->strcustomerid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strProduceid;
        break;
      }

      // required string strProduceid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproduceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproduceid().data(), this->strproduceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strStarttime;
        break;
      }

      // required string strStarttime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strStarttime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strstarttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strstarttime().data(), this->strstarttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strEndtime;
        break;
      }

      // required string strEndtime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEndtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strendtime().data(), this->strendtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_nPagesize;
        break;
      }

      // required int32 nPagesize = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPagesize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npagesize_)));
          set_has_npagesize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_nPageindex;
        break;
      }

      // required int32 nPageindex = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPageindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npageindex_)));
          set_has_npageindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_nRecordcount;
        break;
      }

      // required int32 nRecordcount = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nRecordcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nrecordcount_)));
          set_has_nrecordcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strSerialNumber;
        break;
      }

      // required string strSerialNumber = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strSerialNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strserialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strserialnumber().data(), this->strserialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_strCredenitialsType;
        break;
      }

      // required string strCredenitialsType = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCredenitialsType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcredenitialstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcredenitialstype().data(), this->strcredenitialstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_strBusinessType;
        break;
      }

      // required string strBusinessType = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinesstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinesstype().data(), this->strbusinesstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_strCardNumber;
        break;
      }

      // required string strCardNumber = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCardNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcardnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcardnumber().data(), this->strcardnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_nMarkerType;
        break;
      }

      // required int32 nMarkerType = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nMarkerType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmarkertype_)));
          set_has_nmarkertype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_strRiskLevel;
        break;
      }

      // required string strRiskLevel = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRiskLevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrisklevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrisklevel().data(), this->strrisklevel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_strConditionEx;
        break;
      }

      // required string strConditionEx = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strConditionEx:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strconditionex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strconditionex().data(), this->strconditionex().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_strMediumNum;
        break;
      }

      // required string strMediumNum = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMediumNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmediumnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmediumnum().data(), this->strmediumnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BusinessQueryParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strBranchid = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strbranchid(), output);
  }

  // required string strEmployeeid = 2;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stremployeeid(), output);
  }

  // required string strCustomerid = 3;
  if (has_strcustomerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcustomerid().data(), this->strcustomerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strcustomerid(), output);
  }

  // required string strProduceid = 4;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strproduceid(), output);
  }

  // required string strStarttime = 5;
  if (has_strstarttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strstarttime().data(), this->strstarttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strstarttime(), output);
  }

  // required string strEndtime = 6;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strendtime(), output);
  }

  // required int32 nPagesize = 7;
  if (has_npagesize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->npagesize(), output);
  }

  // required int32 nPageindex = 8;
  if (has_npageindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->npageindex(), output);
  }

  // required int32 nRecordcount = 9;
  if (has_nrecordcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->nrecordcount(), output);
  }

  // required string strSerialNumber = 10;
  if (has_strserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strserialnumber(), output);
  }

  // required string strCredenitialsType = 11;
  if (has_strcredenitialstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialstype().data(), this->strcredenitialstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->strcredenitialstype(), output);
  }

  // required string strBusinessType = 12;
  if (has_strbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesstype().data(), this->strbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->strbusinesstype(), output);
  }

  // required string strCardNumber = 13;
  if (has_strcardnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardnumber().data(), this->strcardnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->strcardnumber(), output);
  }

  // required int32 nMarkerType = 14;
  if (has_nmarkertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->nmarkertype(), output);
  }

  // required string strRiskLevel = 15;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->strrisklevel(), output);
  }

  // required string strConditionEx = 16;
  if (has_strconditionex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strconditionex().data(), this->strconditionex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->strconditionex(), output);
  }

  // required string strMediumNum = 17;
  if (has_strmediumnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumnum().data(), this->strmediumnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->strmediumnum(), output);
  }

  // required string strExtendedInfo2 = 18;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BusinessQueryParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strBranchid = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strbranchid(), target);
  }

  // required string strEmployeeid = 2;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stremployeeid(), target);
  }

  // required string strCustomerid = 3;
  if (has_strcustomerid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcustomerid().data(), this->strcustomerid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strcustomerid(), target);
  }

  // required string strProduceid = 4;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strproduceid(), target);
  }

  // required string strStarttime = 5;
  if (has_strstarttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strstarttime().data(), this->strstarttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strstarttime(), target);
  }

  // required string strEndtime = 6;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strendtime(), target);
  }

  // required int32 nPagesize = 7;
  if (has_npagesize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->npagesize(), target);
  }

  // required int32 nPageindex = 8;
  if (has_npageindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->npageindex(), target);
  }

  // required int32 nRecordcount = 9;
  if (has_nrecordcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->nrecordcount(), target);
  }

  // required string strSerialNumber = 10;
  if (has_strserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strserialnumber().data(), this->strserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strserialnumber(), target);
  }

  // required string strCredenitialsType = 11;
  if (has_strcredenitialstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialstype().data(), this->strcredenitialstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strcredenitialstype(), target);
  }

  // required string strBusinessType = 12;
  if (has_strbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesstype().data(), this->strbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strbusinesstype(), target);
  }

  // required string strCardNumber = 13;
  if (has_strcardnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcardnumber().data(), this->strcardnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strcardnumber(), target);
  }

  // required int32 nMarkerType = 14;
  if (has_nmarkertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->nmarkertype(), target);
  }

  // required string strRiskLevel = 15;
  if (has_strrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrisklevel().data(), this->strrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strrisklevel(), target);
  }

  // required string strConditionEx = 16;
  if (has_strconditionex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strconditionex().data(), this->strconditionex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strconditionex(), target);
  }

  // required string strMediumNum = 17;
  if (has_strmediumnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumnum().data(), this->strmediumnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->strmediumnum(), target);
  }

  // required string strExtendedInfo2 = 18;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BusinessQueryParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strBranchid = 1;
    if (has_strbranchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchid());
    }

    // required string strEmployeeid = 2;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required string strCustomerid = 3;
    if (has_strcustomerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcustomerid());
    }

    // required string strProduceid = 4;
    if (has_strproduceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproduceid());
    }

    // required string strStarttime = 5;
    if (has_strstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strstarttime());
    }

    // required string strEndtime = 6;
    if (has_strendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strendtime());
    }

    // required int32 nPagesize = 7;
    if (has_npagesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npagesize());
    }

    // required int32 nPageindex = 8;
    if (has_npageindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npageindex());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 nRecordcount = 9;
    if (has_nrecordcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nrecordcount());
    }

    // required string strSerialNumber = 10;
    if (has_strserialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strserialnumber());
    }

    // required string strCredenitialsType = 11;
    if (has_strcredenitialstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcredenitialstype());
    }

    // required string strBusinessType = 12;
    if (has_strbusinesstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinesstype());
    }

    // required string strCardNumber = 13;
    if (has_strcardnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcardnumber());
    }

    // required int32 nMarkerType = 14;
    if (has_nmarkertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmarkertype());
    }

    // required string strRiskLevel = 15;
    if (has_strrisklevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrisklevel());
    }

    // required string strConditionEx = 16;
    if (has_strconditionex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strconditionex());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required string strMediumNum = 17;
    if (has_strmediumnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmediumnum());
    }

    // required string strExtendedInfo2 = 18;
    if (has_strextendedinfo2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusinessQueryParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusinessQueryParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusinessQueryParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusinessQueryParam::MergeFrom(const BusinessQueryParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strbranchid()) {
      set_strbranchid(from.strbranchid());
    }
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_strcustomerid()) {
      set_strcustomerid(from.strcustomerid());
    }
    if (from.has_strproduceid()) {
      set_strproduceid(from.strproduceid());
    }
    if (from.has_strstarttime()) {
      set_strstarttime(from.strstarttime());
    }
    if (from.has_strendtime()) {
      set_strendtime(from.strendtime());
    }
    if (from.has_npagesize()) {
      set_npagesize(from.npagesize());
    }
    if (from.has_npageindex()) {
      set_npageindex(from.npageindex());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_nrecordcount()) {
      set_nrecordcount(from.nrecordcount());
    }
    if (from.has_strserialnumber()) {
      set_strserialnumber(from.strserialnumber());
    }
    if (from.has_strcredenitialstype()) {
      set_strcredenitialstype(from.strcredenitialstype());
    }
    if (from.has_strbusinesstype()) {
      set_strbusinesstype(from.strbusinesstype());
    }
    if (from.has_strcardnumber()) {
      set_strcardnumber(from.strcardnumber());
    }
    if (from.has_nmarkertype()) {
      set_nmarkertype(from.nmarkertype());
    }
    if (from.has_strrisklevel()) {
      set_strrisklevel(from.strrisklevel());
    }
    if (from.has_strconditionex()) {
      set_strconditionex(from.strconditionex());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_strmediumnum()) {
      set_strmediumnum(from.strmediumnum());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusinessQueryParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusinessQueryParam::CopyFrom(const BusinessQueryParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusinessQueryParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0003ffff) != 0x0003ffff) return false;

  return true;
}

void BusinessQueryParam::Swap(BusinessQueryParam* other) {
  if (other != this) {
    std::swap(strbranchid_, other->strbranchid_);
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(strcustomerid_, other->strcustomerid_);
    std::swap(strproduceid_, other->strproduceid_);
    std::swap(strstarttime_, other->strstarttime_);
    std::swap(strendtime_, other->strendtime_);
    std::swap(npagesize_, other->npagesize_);
    std::swap(npageindex_, other->npageindex_);
    std::swap(nrecordcount_, other->nrecordcount_);
    std::swap(strserialnumber_, other->strserialnumber_);
    std::swap(strcredenitialstype_, other->strcredenitialstype_);
    std::swap(strbusinesstype_, other->strbusinesstype_);
    std::swap(strcardnumber_, other->strcardnumber_);
    std::swap(nmarkertype_, other->nmarkertype_);
    std::swap(strrisklevel_, other->strrisklevel_);
    std::swap(strconditionex_, other->strconditionex_);
    std::swap(strmediumnum_, other->strmediumnum_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusinessQueryParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusinessQueryParam_descriptor_;
  metadata.reflection = BusinessQueryParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProduceIdQueryParam::kStrInfoIdFieldNumber;
const int ProduceIdQueryParam::kNCountFieldNumber;
#endif  // !_MSC_VER

ProduceIdQueryParam::ProduceIdQueryParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProduceIdQueryParam::InitAsDefaultInstance() {
}

ProduceIdQueryParam::ProduceIdQueryParam(const ProduceIdQueryParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProduceIdQueryParam::SharedCtor() {
  _cached_size_ = 0;
  strinfoid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ncount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProduceIdQueryParam::~ProduceIdQueryParam() {
  SharedDtor();
}

void ProduceIdQueryParam::SharedDtor() {
  if (strinfoid_ != &::google::protobuf::internal::kEmptyString) {
    delete strinfoid_;
  }
  if (this != default_instance_) {
  }
}

void ProduceIdQueryParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProduceIdQueryParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProduceIdQueryParam_descriptor_;
}

const ProduceIdQueryParam& ProduceIdQueryParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

ProduceIdQueryParam* ProduceIdQueryParam::default_instance_ = NULL;

ProduceIdQueryParam* ProduceIdQueryParam::New() const {
  return new ProduceIdQueryParam;
}

void ProduceIdQueryParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strinfoid()) {
      if (strinfoid_ != &::google::protobuf::internal::kEmptyString) {
        strinfoid_->clear();
      }
    }
    ncount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProduceIdQueryParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strInfoId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strinfoid().data(), this->strinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nCount;
        break;
      }

      // required int32 nCount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncount_)));
          set_has_ncount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProduceIdQueryParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strInfoId = 1;
  if (has_strinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strinfoid().data(), this->strinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strinfoid(), output);
  }

  // required int32 nCount = 2;
  if (has_ncount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ncount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProduceIdQueryParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strInfoId = 1;
  if (has_strinfoid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strinfoid().data(), this->strinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strinfoid(), target);
  }

  // required int32 nCount = 2;
  if (has_ncount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ncount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProduceIdQueryParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strInfoId = 1;
    if (has_strinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strinfoid());
    }

    // required int32 nCount = 2;
    if (has_ncount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ncount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProduceIdQueryParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProduceIdQueryParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProduceIdQueryParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProduceIdQueryParam::MergeFrom(const ProduceIdQueryParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strinfoid()) {
      set_strinfoid(from.strinfoid());
    }
    if (from.has_ncount()) {
      set_ncount(from.ncount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProduceIdQueryParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProduceIdQueryParam::CopyFrom(const ProduceIdQueryParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProduceIdQueryParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ProduceIdQueryParam::Swap(ProduceIdQueryParam* other) {
  if (other != this) {
    std::swap(strinfoid_, other->strinfoid_);
    std::swap(ncount_, other->ncount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProduceIdQueryParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProduceIdQueryParam_descriptor_;
  metadata.reflection = ProduceIdQueryParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TaskPlan::kStrPlanidFieldNumber;
const int TaskPlan::kStrBegintimeFieldNumber;
const int TaskPlan::kStrEndtimeFieldNumber;
const int TaskPlan::kNEableFieldNumber;
const int TaskPlan::kNOrderidFieldNumber;
#endif  // !_MSC_VER

TaskPlan::TaskPlan()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TaskPlan::InitAsDefaultInstance() {
}

TaskPlan::TaskPlan(const TaskPlan& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TaskPlan::SharedCtor() {
  _cached_size_ = 0;
  strplanid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbegintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  neable_ = 0;
  norderid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskPlan::~TaskPlan() {
  SharedDtor();
}

void TaskPlan::SharedDtor() {
  if (strplanid_ != &::google::protobuf::internal::kEmptyString) {
    delete strplanid_;
  }
  if (strbegintime_ != &::google::protobuf::internal::kEmptyString) {
    delete strbegintime_;
  }
  if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
    delete strendtime_;
  }
  if (this != default_instance_) {
  }
}

void TaskPlan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskPlan::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskPlan_descriptor_;
}

const TaskPlan& TaskPlan::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

TaskPlan* TaskPlan::default_instance_ = NULL;

TaskPlan* TaskPlan::New() const {
  return new TaskPlan;
}

void TaskPlan::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strplanid()) {
      if (strplanid_ != &::google::protobuf::internal::kEmptyString) {
        strplanid_->clear();
      }
    }
    if (has_strbegintime()) {
      if (strbegintime_ != &::google::protobuf::internal::kEmptyString) {
        strbegintime_->clear();
      }
    }
    if (has_strendtime()) {
      if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
        strendtime_->clear();
      }
    }
    neable_ = 0;
    norderid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strPlanid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strplanid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strplanid().data(), this->strplanid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strBegintime;
        break;
      }

      // required string strBegintime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBegintime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbegintime().data(), this->strbegintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strEndtime;
        break;
      }

      // required string strEndtime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEndtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strendtime().data(), this->strendtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nEable;
        break;
      }

      // required int32 nEable = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nEable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &neable_)));
          set_has_neable();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_nOrderid;
        break;
      }

      // required int32 nOrderid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nOrderid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &norderid_)));
          set_has_norderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TaskPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strPlanid = 1;
  if (has_strplanid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strplanid().data(), this->strplanid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strplanid(), output);
  }

  // required string strBegintime = 2;
  if (has_strbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbegintime().data(), this->strbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strbegintime(), output);
  }

  // required string strEndtime = 3;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strendtime(), output);
  }

  // required int32 nEable = 4;
  if (has_neable()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->neable(), output);
  }

  // required int32 nOrderid = 5;
  if (has_norderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->norderid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TaskPlan::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strPlanid = 1;
  if (has_strplanid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strplanid().data(), this->strplanid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strplanid(), target);
  }

  // required string strBegintime = 2;
  if (has_strbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbegintime().data(), this->strbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbegintime(), target);
  }

  // required string strEndtime = 3;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strendtime(), target);
  }

  // required int32 nEable = 4;
  if (has_neable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->neable(), target);
  }

  // required int32 nOrderid = 5;
  if (has_norderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->norderid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TaskPlan::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strPlanid = 1;
    if (has_strplanid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strplanid());
    }

    // required string strBegintime = 2;
    if (has_strbegintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbegintime());
    }

    // required string strEndtime = 3;
    if (has_strendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strendtime());
    }

    // required int32 nEable = 4;
    if (has_neable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->neable());
    }

    // required int32 nOrderid = 5;
    if (has_norderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->norderid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskPlan::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskPlan* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskPlan*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskPlan::MergeFrom(const TaskPlan& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strplanid()) {
      set_strplanid(from.strplanid());
    }
    if (from.has_strbegintime()) {
      set_strbegintime(from.strbegintime());
    }
    if (from.has_strendtime()) {
      set_strendtime(from.strendtime());
    }
    if (from.has_neable()) {
      set_neable(from.neable());
    }
    if (from.has_norderid()) {
      set_norderid(from.norderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskPlan::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskPlan::CopyFrom(const TaskPlan& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskPlan::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void TaskPlan::Swap(TaskPlan* other) {
  if (other != this) {
    std::swap(strplanid_, other->strplanid_);
    std::swap(strbegintime_, other->strbegintime_);
    std::swap(strendtime_, other->strendtime_);
    std::swap(neable_, other->neable_);
    std::swap(norderid_, other->norderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskPlan::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskPlan_descriptor_;
  metadata.reflection = TaskPlan_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BackupTask::kStrTaskidFieldNumber;
const int BackupTask::kNTypeFieldNumber;
const int BackupTask::kNStatusFieldNumber;
const int BackupTask::kStrBusinessidFieldNumber;
const int BackupTask::kStrProduceidFieldNumber;
const int BackupTask::kStrEmployeeidFieldNumber;
const int BackupTask::kStCustomerFieldNumber;
const int BackupTask::kStrAutotimeFieldNumber;
const int BackupTask::kStrBegintimeFieldNumber;
const int BackupTask::kStrEndtimeFieldNumber;
const int BackupTask::kNProcessFieldNumber;
const int BackupTask::kStrLaunchEmployeeIDFieldNumber;
const int BackupTask::kNOrderidFieldNumber;
const int BackupTask::kStrTimeForBusinessFieldNumber;
const int BackupTask::kStrExtendedInfo2FieldNumber;
#endif  // !_MSC_VER

BackupTask::BackupTask()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BackupTask::InitAsDefaultInstance() {
  stcustomer_ = const_cast< ::BFIS::ClientInfo*>(&::BFIS::ClientInfo::default_instance());
}

BackupTask::BackupTask(const BackupTask& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BackupTask::SharedCtor() {
  _cached_size_ = 0;
  strtaskid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ntype_ = 0;
  nstatus_ = 0;
  strbusinessid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproduceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stcustomer_ = NULL;
  strautotime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbegintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nprocess_ = 0;
  strlaunchemployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  norderid_ = 0;
  strtimeforbusiness_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BackupTask::~BackupTask() {
  SharedDtor();
}

void BackupTask::SharedDtor() {
  if (strtaskid_ != &::google::protobuf::internal::kEmptyString) {
    delete strtaskid_;
  }
  if (strbusinessid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessid_;
  }
  if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
    delete strproduceid_;
  }
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strautotime_ != &::google::protobuf::internal::kEmptyString) {
    delete strautotime_;
  }
  if (strbegintime_ != &::google::protobuf::internal::kEmptyString) {
    delete strbegintime_;
  }
  if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
    delete strendtime_;
  }
  if (strlaunchemployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete strlaunchemployeeid_;
  }
  if (strtimeforbusiness_ != &::google::protobuf::internal::kEmptyString) {
    delete strtimeforbusiness_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
    delete stcustomer_;
  }
}

void BackupTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackupTask::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BackupTask_descriptor_;
}

const BackupTask& BackupTask::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

BackupTask* BackupTask::default_instance_ = NULL;

BackupTask* BackupTask::New() const {
  return new BackupTask;
}

void BackupTask::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strtaskid()) {
      if (strtaskid_ != &::google::protobuf::internal::kEmptyString) {
        strtaskid_->clear();
      }
    }
    ntype_ = 0;
    nstatus_ = 0;
    if (has_strbusinessid()) {
      if (strbusinessid_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessid_->clear();
      }
    }
    if (has_strproduceid()) {
      if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
        strproduceid_->clear();
      }
    }
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    if (has_stcustomer()) {
      if (stcustomer_ != NULL) stcustomer_->::BFIS::ClientInfo::Clear();
    }
    if (has_strautotime()) {
      if (strautotime_ != &::google::protobuf::internal::kEmptyString) {
        strautotime_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strbegintime()) {
      if (strbegintime_ != &::google::protobuf::internal::kEmptyString) {
        strbegintime_->clear();
      }
    }
    if (has_strendtime()) {
      if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
        strendtime_->clear();
      }
    }
    nprocess_ = 0;
    if (has_strlaunchemployeeid()) {
      if (strlaunchemployeeid_ != &::google::protobuf::internal::kEmptyString) {
        strlaunchemployeeid_->clear();
      }
    }
    norderid_ = 0;
    if (has_strtimeforbusiness()) {
      if (strtimeforbusiness_ != &::google::protobuf::internal::kEmptyString) {
        strtimeforbusiness_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BackupTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strTaskid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtaskid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtaskid().data(), this->strtaskid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nType;
        break;
      }

      // required int32 nType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
          set_has_ntype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nStatus;
        break;
      }

      // required int32 nStatus = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstatus_)));
          set_has_nstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strBusinessid;
        break;
      }

      // required string strBusinessid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessid().data(), this->strbusinessid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strProduceid;
        break;
      }

      // required string strProduceid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproduceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproduceid().data(), this->strproduceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strEmployeeid;
        break;
      }

      // required string strEmployeeid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEmployeeid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_stCustomer;
        break;
      }

      // required .BFIS.ClientInfo stCustomer = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stCustomer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stcustomer()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strAutotime;
        break;
      }

      // required string strAutotime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strAutotime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strautotime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strautotime().data(), this->strautotime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strBegintime;
        break;
      }

      // required string strBegintime = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBegintime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbegintime().data(), this->strbegintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strEndtime;
        break;
      }

      // required string strEndtime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEndtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strendtime().data(), this->strendtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_nProcess;
        break;
      }

      // required int32 nProcess = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nProcess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nprocess_)));
          set_has_nprocess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_strLaunchEmployeeID;
        break;
      }

      // required string strLaunchEmployeeID = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strLaunchEmployeeID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlaunchemployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strlaunchemployeeid().data(), this->strlaunchemployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_nOrderid;
        break;
      }

      // required int32 nOrderid = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nOrderid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &norderid_)));
          set_has_norderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_strTimeForBusiness;
        break;
      }

      // required string strTimeForBusiness = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTimeForBusiness:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtimeforbusiness()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtimeforbusiness().data(), this->strtimeforbusiness().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BackupTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strTaskid = 1;
  if (has_strtaskid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtaskid().data(), this->strtaskid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strtaskid(), output);
  }

  // required int32 nType = 2;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ntype(), output);
  }

  // required int32 nStatus = 3;
  if (has_nstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nstatus(), output);
  }

  // required string strBusinessid = 4;
  if (has_strbusinessid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessid().data(), this->strbusinessid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strbusinessid(), output);
  }

  // required string strProduceid = 5;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strproduceid(), output);
  }

  // required string strEmployeeid = 6;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->stremployeeid(), output);
  }

  // required .BFIS.ClientInfo stCustomer = 7;
  if (has_stcustomer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->stcustomer(), output);
  }

  // required string strAutotime = 8;
  if (has_strautotime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strautotime().data(), this->strautotime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strautotime(), output);
  }

  // required string strBegintime = 9;
  if (has_strbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbegintime().data(), this->strbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strbegintime(), output);
  }

  // required string strEndtime = 10;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strendtime(), output);
  }

  // required int32 nProcess = 11;
  if (has_nprocess()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->nprocess(), output);
  }

  // required string strLaunchEmployeeID = 12;
  if (has_strlaunchemployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strlaunchemployeeid().data(), this->strlaunchemployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->strlaunchemployeeid(), output);
  }

  // required int32 nOrderid = 13;
  if (has_norderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->norderid(), output);
  }

  // required string strTimeForBusiness = 14;
  if (has_strtimeforbusiness()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtimeforbusiness().data(), this->strtimeforbusiness().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->strtimeforbusiness(), output);
  }

  // required string strExtendedInfo2 = 15;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BackupTask::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strTaskid = 1;
  if (has_strtaskid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtaskid().data(), this->strtaskid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strtaskid(), target);
  }

  // required int32 nType = 2;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ntype(), target);
  }

  // required int32 nStatus = 3;
  if (has_nstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nstatus(), target);
  }

  // required string strBusinessid = 4;
  if (has_strbusinessid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessid().data(), this->strbusinessid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strbusinessid(), target);
  }

  // required string strProduceid = 5;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strproduceid(), target);
  }

  // required string strEmployeeid = 6;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->stremployeeid(), target);
  }

  // required .BFIS.ClientInfo stCustomer = 7;
  if (has_stcustomer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->stcustomer(), target);
  }

  // required string strAutotime = 8;
  if (has_strautotime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strautotime().data(), this->strautotime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strautotime(), target);
  }

  // required string strBegintime = 9;
  if (has_strbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbegintime().data(), this->strbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strbegintime(), target);
  }

  // required string strEndtime = 10;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strendtime(), target);
  }

  // required int32 nProcess = 11;
  if (has_nprocess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->nprocess(), target);
  }

  // required string strLaunchEmployeeID = 12;
  if (has_strlaunchemployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strlaunchemployeeid().data(), this->strlaunchemployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strlaunchemployeeid(), target);
  }

  // required int32 nOrderid = 13;
  if (has_norderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->norderid(), target);
  }

  // required string strTimeForBusiness = 14;
  if (has_strtimeforbusiness()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtimeforbusiness().data(), this->strtimeforbusiness().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strtimeforbusiness(), target);
  }

  // required string strExtendedInfo2 = 15;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BackupTask::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strTaskid = 1;
    if (has_strtaskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtaskid());
    }

    // required int32 nType = 2;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntype());
    }

    // required int32 nStatus = 3;
    if (has_nstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nstatus());
    }

    // required string strBusinessid = 4;
    if (has_strbusinessid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessid());
    }

    // required string strProduceid = 5;
    if (has_strproduceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproduceid());
    }

    // required string strEmployeeid = 6;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required .BFIS.ClientInfo stCustomer = 7;
    if (has_stcustomer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stcustomer());
    }

    // required string strAutotime = 8;
    if (has_strautotime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strautotime());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strBegintime = 9;
    if (has_strbegintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbegintime());
    }

    // required string strEndtime = 10;
    if (has_strendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strendtime());
    }

    // required int32 nProcess = 11;
    if (has_nprocess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nprocess());
    }

    // required string strLaunchEmployeeID = 12;
    if (has_strlaunchemployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strlaunchemployeeid());
    }

    // required int32 nOrderid = 13;
    if (has_norderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->norderid());
    }

    // required string strTimeForBusiness = 14;
    if (has_strtimeforbusiness()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtimeforbusiness());
    }

    // required string strExtendedInfo2 = 15;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackupTask::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BackupTask* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BackupTask*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BackupTask::MergeFrom(const BackupTask& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strtaskid()) {
      set_strtaskid(from.strtaskid());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
    if (from.has_nstatus()) {
      set_nstatus(from.nstatus());
    }
    if (from.has_strbusinessid()) {
      set_strbusinessid(from.strbusinessid());
    }
    if (from.has_strproduceid()) {
      set_strproduceid(from.strproduceid());
    }
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_stcustomer()) {
      mutable_stcustomer()->::BFIS::ClientInfo::MergeFrom(from.stcustomer());
    }
    if (from.has_strautotime()) {
      set_strautotime(from.strautotime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strbegintime()) {
      set_strbegintime(from.strbegintime());
    }
    if (from.has_strendtime()) {
      set_strendtime(from.strendtime());
    }
    if (from.has_nprocess()) {
      set_nprocess(from.nprocess());
    }
    if (from.has_strlaunchemployeeid()) {
      set_strlaunchemployeeid(from.strlaunchemployeeid());
    }
    if (from.has_norderid()) {
      set_norderid(from.norderid());
    }
    if (from.has_strtimeforbusiness()) {
      set_strtimeforbusiness(from.strtimeforbusiness());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BackupTask::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackupTask::CopyFrom(const BackupTask& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackupTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fff) != 0x00007fff) return false;

  if (has_stcustomer()) {
    if (!this->stcustomer().IsInitialized()) return false;
  }
  return true;
}

void BackupTask::Swap(BackupTask* other) {
  if (other != this) {
    std::swap(strtaskid_, other->strtaskid_);
    std::swap(ntype_, other->ntype_);
    std::swap(nstatus_, other->nstatus_);
    std::swap(strbusinessid_, other->strbusinessid_);
    std::swap(strproduceid_, other->strproduceid_);
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(stcustomer_, other->stcustomer_);
    std::swap(strautotime_, other->strautotime_);
    std::swap(strbegintime_, other->strbegintime_);
    std::swap(strendtime_, other->strendtime_);
    std::swap(nprocess_, other->nprocess_);
    std::swap(strlaunchemployeeid_, other->strlaunchemployeeid_);
    std::swap(norderid_, other->norderid_);
    std::swap(strtimeforbusiness_, other->strtimeforbusiness_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BackupTask::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BackupTask_descriptor_;
  metadata.reflection = BackupTask_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int McServer::kStrBranchIDFieldNumber;
const int McServer::kStrBranchNameFieldNumber;
const int McServer::kStrMCIPFieldNumber;
const int McServer::kNPortFieldNumber;
const int McServer::kStrMCUserNameFieldNumber;
const int McServer::kStrMCUserPwdFieldNumber;
const int McServer::kNIsLocalFieldNumber;
#endif  // !_MSC_VER

McServer::McServer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void McServer::InitAsDefaultInstance() {
}

McServer::McServer(const McServer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void McServer::SharedCtor() {
  _cached_size_ = 0;
  strbranchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbranchname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmcip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nport_ = 0;
  strmcusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmcuserpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nislocal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

McServer::~McServer() {
  SharedDtor();
}

void McServer::SharedDtor() {
  if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchid_;
  }
  if (strbranchname_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchname_;
  }
  if (strmcip_ != &::google::protobuf::internal::kEmptyString) {
    delete strmcip_;
  }
  if (strmcusername_ != &::google::protobuf::internal::kEmptyString) {
    delete strmcusername_;
  }
  if (strmcuserpwd_ != &::google::protobuf::internal::kEmptyString) {
    delete strmcuserpwd_;
  }
  if (this != default_instance_) {
  }
}

void McServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* McServer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return McServer_descriptor_;
}

const McServer& McServer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

McServer* McServer::default_instance_ = NULL;

McServer* McServer::New() const {
  return new McServer;
}

void McServer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strbranchid()) {
      if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchid_->clear();
      }
    }
    if (has_strbranchname()) {
      if (strbranchname_ != &::google::protobuf::internal::kEmptyString) {
        strbranchname_->clear();
      }
    }
    if (has_strmcip()) {
      if (strmcip_ != &::google::protobuf::internal::kEmptyString) {
        strmcip_->clear();
      }
    }
    nport_ = 0;
    if (has_strmcusername()) {
      if (strmcusername_ != &::google::protobuf::internal::kEmptyString) {
        strmcusername_->clear();
      }
    }
    if (has_strmcuserpwd()) {
      if (strmcuserpwd_ != &::google::protobuf::internal::kEmptyString) {
        strmcuserpwd_->clear();
      }
    }
    nislocal_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool McServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strBranchID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchid().data(), this->strbranchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strBranchName;
        break;
      }

      // required string strBranchName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBranchName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchname().data(), this->strbranchname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strMCIP;
        break;
      }

      // required string strMCIP = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMCIP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmcip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmcip().data(), this->strmcip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nPort;
        break;
      }

      // required int32 nPort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nport_)));
          set_has_nport();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strMCUserName;
        break;
      }

      // required string strMCUserName = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMCUserName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmcusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmcusername().data(), this->strmcusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strMCUserPwd;
        break;
      }

      // required string strMCUserPwd = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMCUserPwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmcuserpwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmcuserpwd().data(), this->strmcuserpwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_nIsLocal;
        break;
      }

      // required int32 nIsLocal = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nIsLocal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nislocal_)));
          set_has_nislocal();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void McServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strBranchID = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strbranchid(), output);
  }

  // required string strBranchName = 2;
  if (has_strbranchname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchname().data(), this->strbranchname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strbranchname(), output);
  }

  // required string strMCIP = 3;
  if (has_strmcip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmcip().data(), this->strmcip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strmcip(), output);
  }

  // required int32 nPort = 4;
  if (has_nport()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nport(), output);
  }

  // required string strMCUserName = 5;
  if (has_strmcusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmcusername().data(), this->strmcusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strmcusername(), output);
  }

  // required string strMCUserPwd = 6;
  if (has_strmcuserpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmcuserpwd().data(), this->strmcuserpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strmcuserpwd(), output);
  }

  // required int32 nIsLocal = 7;
  if (has_nislocal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->nislocal(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* McServer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strBranchID = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strbranchid(), target);
  }

  // required string strBranchName = 2;
  if (has_strbranchname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchname().data(), this->strbranchname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbranchname(), target);
  }

  // required string strMCIP = 3;
  if (has_strmcip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmcip().data(), this->strmcip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strmcip(), target);
  }

  // required int32 nPort = 4;
  if (has_nport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nport(), target);
  }

  // required string strMCUserName = 5;
  if (has_strmcusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmcusername().data(), this->strmcusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strmcusername(), target);
  }

  // required string strMCUserPwd = 6;
  if (has_strmcuserpwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmcuserpwd().data(), this->strmcuserpwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strmcuserpwd(), target);
  }

  // required int32 nIsLocal = 7;
  if (has_nislocal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->nislocal(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int McServer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strBranchID = 1;
    if (has_strbranchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchid());
    }

    // required string strBranchName = 2;
    if (has_strbranchname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchname());
    }

    // required string strMCIP = 3;
    if (has_strmcip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmcip());
    }

    // required int32 nPort = 4;
    if (has_nport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nport());
    }

    // required string strMCUserName = 5;
    if (has_strmcusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmcusername());
    }

    // required string strMCUserPwd = 6;
    if (has_strmcuserpwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmcuserpwd());
    }

    // required int32 nIsLocal = 7;
    if (has_nislocal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nislocal());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void McServer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const McServer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const McServer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void McServer::MergeFrom(const McServer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strbranchid()) {
      set_strbranchid(from.strbranchid());
    }
    if (from.has_strbranchname()) {
      set_strbranchname(from.strbranchname());
    }
    if (from.has_strmcip()) {
      set_strmcip(from.strmcip());
    }
    if (from.has_nport()) {
      set_nport(from.nport());
    }
    if (from.has_strmcusername()) {
      set_strmcusername(from.strmcusername());
    }
    if (from.has_strmcuserpwd()) {
      set_strmcuserpwd(from.strmcuserpwd());
    }
    if (from.has_nislocal()) {
      set_nislocal(from.nislocal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void McServer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void McServer::CopyFrom(const McServer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool McServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void McServer::Swap(McServer* other) {
  if (other != this) {
    std::swap(strbranchid_, other->strbranchid_);
    std::swap(strbranchname_, other->strbranchname_);
    std::swap(strmcip_, other->strmcip_);
    std::swap(nport_, other->nport_);
    std::swap(strmcusername_, other->strmcusername_);
    std::swap(strmcuserpwd_, other->strmcuserpwd_);
    std::swap(nislocal_, other->nislocal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata McServer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = McServer_descriptor_;
  metadata.reflection = McServer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MigrateLog::kStrMigrateTaskIDFieldNumber;
const int MigrateLog::kStrBusinessIDFieldNumber;
const int MigrateLog::kStrProduceIDFieldNumber;
const int MigrateLog::kStrEmployeeIDFieldNumber;
const int MigrateLog::kNTypeFieldNumber;
const int MigrateLog::kNStatusFieldNumber;
const int MigrateLog::kStrAutoTimeFieldNumber;
const int MigrateLog::kStrBeginTimeFieldNumber;
const int MigrateLog::kStrEndTimeFieldNumber;
const int MigrateLog::kStrLaunchEmployeeIDFieldNumber;
const int MigrateLog::kNOrderIDFieldNumber;
#endif  // !_MSC_VER

MigrateLog::MigrateLog()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MigrateLog::InitAsDefaultInstance() {
}

MigrateLog::MigrateLog(const MigrateLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MigrateLog::SharedCtor() {
  _cached_size_ = 0;
  strmigratetaskid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinessid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproduceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ntype_ = 0;
  nstatus_ = 0;
  strautotime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbegintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strlaunchemployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  norderid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MigrateLog::~MigrateLog() {
  SharedDtor();
}

void MigrateLog::SharedDtor() {
  if (strmigratetaskid_ != &::google::protobuf::internal::kEmptyString) {
    delete strmigratetaskid_;
  }
  if (strbusinessid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessid_;
  }
  if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
    delete strproduceid_;
  }
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strautotime_ != &::google::protobuf::internal::kEmptyString) {
    delete strautotime_;
  }
  if (strbegintime_ != &::google::protobuf::internal::kEmptyString) {
    delete strbegintime_;
  }
  if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
    delete strendtime_;
  }
  if (strlaunchemployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete strlaunchemployeeid_;
  }
  if (this != default_instance_) {
  }
}

void MigrateLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MigrateLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MigrateLog_descriptor_;
}

const MigrateLog& MigrateLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

MigrateLog* MigrateLog::default_instance_ = NULL;

MigrateLog* MigrateLog::New() const {
  return new MigrateLog;
}

void MigrateLog::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strmigratetaskid()) {
      if (strmigratetaskid_ != &::google::protobuf::internal::kEmptyString) {
        strmigratetaskid_->clear();
      }
    }
    if (has_strbusinessid()) {
      if (strbusinessid_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessid_->clear();
      }
    }
    if (has_strproduceid()) {
      if (strproduceid_ != &::google::protobuf::internal::kEmptyString) {
        strproduceid_->clear();
      }
    }
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    ntype_ = 0;
    nstatus_ = 0;
    if (has_strautotime()) {
      if (strautotime_ != &::google::protobuf::internal::kEmptyString) {
        strautotime_->clear();
      }
    }
    if (has_strbegintime()) {
      if (strbegintime_ != &::google::protobuf::internal::kEmptyString) {
        strbegintime_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strendtime()) {
      if (strendtime_ != &::google::protobuf::internal::kEmptyString) {
        strendtime_->clear();
      }
    }
    if (has_strlaunchemployeeid()) {
      if (strlaunchemployeeid_ != &::google::protobuf::internal::kEmptyString) {
        strlaunchemployeeid_->clear();
      }
    }
    norderid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MigrateLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strMigrateTaskID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmigratetaskid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmigratetaskid().data(), this->strmigratetaskid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strBusinessID;
        break;
      }

      // required string strBusinessID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessid().data(), this->strbusinessid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strProduceID;
        break;
      }

      // required string strProduceID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproduceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproduceid().data(), this->strproduceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strEmployeeID;
        break;
      }

      // required string strEmployeeID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEmployeeID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_nType;
        break;
      }

      // required int32 nType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
          set_has_ntype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_nStatus;
        break;
      }

      // required int32 nStatus = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstatus_)));
          set_has_nstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strAutoTime;
        break;
      }

      // required string strAutoTime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strAutoTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strautotime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strautotime().data(), this->strautotime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strBeginTime;
        break;
      }

      // required string strBeginTime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBeginTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbegintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbegintime().data(), this->strbegintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strEndTime;
        break;
      }

      // required string strEndTime = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEndTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strendtime().data(), this->strendtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strLaunchEmployeeID;
        break;
      }

      // required string strLaunchEmployeeID = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strLaunchEmployeeID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlaunchemployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strlaunchemployeeid().data(), this->strlaunchemployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_nOrderID;
        break;
      }

      // required int32 nOrderID = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nOrderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &norderid_)));
          set_has_norderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MigrateLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strMigrateTaskID = 1;
  if (has_strmigratetaskid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmigratetaskid().data(), this->strmigratetaskid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strmigratetaskid(), output);
  }

  // required string strBusinessID = 2;
  if (has_strbusinessid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessid().data(), this->strbusinessid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strbusinessid(), output);
  }

  // required string strProduceID = 3;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strproduceid(), output);
  }

  // required string strEmployeeID = 4;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->stremployeeid(), output);
  }

  // required int32 nType = 5;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ntype(), output);
  }

  // required int32 nStatus = 6;
  if (has_nstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nstatus(), output);
  }

  // required string strAutoTime = 7;
  if (has_strautotime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strautotime().data(), this->strautotime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strautotime(), output);
  }

  // required string strBeginTime = 8;
  if (has_strbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbegintime().data(), this->strbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strbegintime(), output);
  }

  // required string strEndTime = 9;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strendtime(), output);
  }

  // required string strLaunchEmployeeID = 10;
  if (has_strlaunchemployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strlaunchemployeeid().data(), this->strlaunchemployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strlaunchemployeeid(), output);
  }

  // required int32 nOrderID = 11;
  if (has_norderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->norderid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MigrateLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strMigrateTaskID = 1;
  if (has_strmigratetaskid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmigratetaskid().data(), this->strmigratetaskid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strmigratetaskid(), target);
  }

  // required string strBusinessID = 2;
  if (has_strbusinessid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessid().data(), this->strbusinessid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbusinessid(), target);
  }

  // required string strProduceID = 3;
  if (has_strproduceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproduceid().data(), this->strproduceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strproduceid(), target);
  }

  // required string strEmployeeID = 4;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->stremployeeid(), target);
  }

  // required int32 nType = 5;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ntype(), target);
  }

  // required int32 nStatus = 6;
  if (has_nstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nstatus(), target);
  }

  // required string strAutoTime = 7;
  if (has_strautotime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strautotime().data(), this->strautotime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strautotime(), target);
  }

  // required string strBeginTime = 8;
  if (has_strbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbegintime().data(), this->strbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strbegintime(), target);
  }

  // required string strEndTime = 9;
  if (has_strendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strendtime(), target);
  }

  // required string strLaunchEmployeeID = 10;
  if (has_strlaunchemployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strlaunchemployeeid().data(), this->strlaunchemployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strlaunchemployeeid(), target);
  }

  // required int32 nOrderID = 11;
  if (has_norderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->norderid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MigrateLog::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strMigrateTaskID = 1;
    if (has_strmigratetaskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmigratetaskid());
    }

    // required string strBusinessID = 2;
    if (has_strbusinessid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessid());
    }

    // required string strProduceID = 3;
    if (has_strproduceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproduceid());
    }

    // required string strEmployeeID = 4;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required int32 nType = 5;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntype());
    }

    // required int32 nStatus = 6;
    if (has_nstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nstatus());
    }

    // required string strAutoTime = 7;
    if (has_strautotime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strautotime());
    }

    // required string strBeginTime = 8;
    if (has_strbegintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbegintime());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strEndTime = 9;
    if (has_strendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strendtime());
    }

    // required string strLaunchEmployeeID = 10;
    if (has_strlaunchemployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strlaunchemployeeid());
    }

    // required int32 nOrderID = 11;
    if (has_norderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->norderid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MigrateLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MigrateLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MigrateLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MigrateLog::MergeFrom(const MigrateLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strmigratetaskid()) {
      set_strmigratetaskid(from.strmigratetaskid());
    }
    if (from.has_strbusinessid()) {
      set_strbusinessid(from.strbusinessid());
    }
    if (from.has_strproduceid()) {
      set_strproduceid(from.strproduceid());
    }
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
    if (from.has_nstatus()) {
      set_nstatus(from.nstatus());
    }
    if (from.has_strautotime()) {
      set_strautotime(from.strautotime());
    }
    if (from.has_strbegintime()) {
      set_strbegintime(from.strbegintime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strendtime()) {
      set_strendtime(from.strendtime());
    }
    if (from.has_strlaunchemployeeid()) {
      set_strlaunchemployeeid(from.strlaunchemployeeid());
    }
    if (from.has_norderid()) {
      set_norderid(from.norderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MigrateLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateLog::CopyFrom(const MigrateLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateLog::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void MigrateLog::Swap(MigrateLog* other) {
  if (other != this) {
    std::swap(strmigratetaskid_, other->strmigratetaskid_);
    std::swap(strbusinessid_, other->strbusinessid_);
    std::swap(strproduceid_, other->strproduceid_);
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(ntype_, other->ntype_);
    std::swap(nstatus_, other->nstatus_);
    std::swap(strautotime_, other->strautotime_);
    std::swap(strbegintime_, other->strbegintime_);
    std::swap(strendtime_, other->strendtime_);
    std::swap(strlaunchemployeeid_, other->strlaunchemployeeid_);
    std::swap(norderid_, other->norderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MigrateLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MigrateLog_descriptor_;
  metadata.reflection = MigrateLog_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryCondition::kStrCon1FieldNumber;
const int QueryCondition::kStrCon2FieldNumber;
const int QueryCondition::kNPageSizeFieldNumber;
const int QueryCondition::kNPageIndexFieldNumber;
const int QueryCondition::kNReservedFieldNumber;
const int QueryCondition::kStrReservedFieldNumber;
#endif  // !_MSC_VER

QueryCondition::QueryCondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void QueryCondition::InitAsDefaultInstance() {
}

QueryCondition::QueryCondition(const QueryCondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void QueryCondition::SharedCtor() {
  _cached_size_ = 0;
  strcon1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcon2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  npagesize_ = 0;
  npageindex_ = 0;
  nreserved_ = 0;
  strreserved_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryCondition::~QueryCondition() {
  SharedDtor();
}

void QueryCondition::SharedDtor() {
  if (strcon1_ != &::google::protobuf::internal::kEmptyString) {
    delete strcon1_;
  }
  if (strcon2_ != &::google::protobuf::internal::kEmptyString) {
    delete strcon2_;
  }
  if (strreserved_ != &::google::protobuf::internal::kEmptyString) {
    delete strreserved_;
  }
  if (this != default_instance_) {
  }
}

void QueryCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryCondition_descriptor_;
}

const QueryCondition& QueryCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

QueryCondition* QueryCondition::default_instance_ = NULL;

QueryCondition* QueryCondition::New() const {
  return new QueryCondition;
}

void QueryCondition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strcon1()) {
      if (strcon1_ != &::google::protobuf::internal::kEmptyString) {
        strcon1_->clear();
      }
    }
    if (has_strcon2()) {
      if (strcon2_ != &::google::protobuf::internal::kEmptyString) {
        strcon2_->clear();
      }
    }
    npagesize_ = 0;
    npageindex_ = 0;
    nreserved_ = 0;
    if (has_strreserved()) {
      if (strreserved_ != &::google::protobuf::internal::kEmptyString) {
        strreserved_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strCon1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcon1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcon1().data(), this->strcon1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strCon2;
        break;
      }

      // required string strCon2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCon2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcon2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcon2().data(), this->strcon2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nPageSize;
        break;
      }

      // required int32 nPageSize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPageSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npagesize_)));
          set_has_npagesize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nPageIndex;
        break;
      }

      // required int32 nPageIndex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nPageIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npageindex_)));
          set_has_npageindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_nReserved;
        break;
      }

      // required int32 nReserved = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nReserved:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nreserved_)));
          set_has_nreserved();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strReserved;
        break;
      }

      // required string strReserved = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strReserved:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strreserved()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strreserved().data(), this->strreserved().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void QueryCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strCon1 = 1;
  if (has_strcon1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcon1().data(), this->strcon1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strcon1(), output);
  }

  // required string strCon2 = 2;
  if (has_strcon2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcon2().data(), this->strcon2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strcon2(), output);
  }

  // required int32 nPageSize = 3;
  if (has_npagesize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->npagesize(), output);
  }

  // required int32 nPageIndex = 4;
  if (has_npageindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->npageindex(), output);
  }

  // required int32 nReserved = 5;
  if (has_nreserved()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nreserved(), output);
  }

  // required string strReserved = 6;
  if (has_strreserved()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strreserved().data(), this->strreserved().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strreserved(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* QueryCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strCon1 = 1;
  if (has_strcon1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcon1().data(), this->strcon1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strcon1(), target);
  }

  // required string strCon2 = 2;
  if (has_strcon2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcon2().data(), this->strcon2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strcon2(), target);
  }

  // required int32 nPageSize = 3;
  if (has_npagesize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->npagesize(), target);
  }

  // required int32 nPageIndex = 4;
  if (has_npageindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->npageindex(), target);
  }

  // required int32 nReserved = 5;
  if (has_nreserved()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nreserved(), target);
  }

  // required string strReserved = 6;
  if (has_strreserved()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strreserved().data(), this->strreserved().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strreserved(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int QueryCondition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strCon1 = 1;
    if (has_strcon1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcon1());
    }

    // required string strCon2 = 2;
    if (has_strcon2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcon2());
    }

    // required int32 nPageSize = 3;
    if (has_npagesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npagesize());
    }

    // required int32 nPageIndex = 4;
    if (has_npageindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npageindex());
    }

    // required int32 nReserved = 5;
    if (has_nreserved()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nreserved());
    }

    // required string strReserved = 6;
    if (has_strreserved()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strreserved());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryCondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryCondition::MergeFrom(const QueryCondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strcon1()) {
      set_strcon1(from.strcon1());
    }
    if (from.has_strcon2()) {
      set_strcon2(from.strcon2());
    }
    if (from.has_npagesize()) {
      set_npagesize(from.npagesize());
    }
    if (from.has_npageindex()) {
      set_npageindex(from.npageindex());
    }
    if (from.has_nreserved()) {
      set_nreserved(from.nreserved());
    }
    if (from.has_strreserved()) {
      set_strreserved(from.strreserved());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryCondition::CopyFrom(const QueryCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCondition::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void QueryCondition::Swap(QueryCondition* other) {
  if (other != this) {
    std::swap(strcon1_, other->strcon1_);
    std::swap(strcon2_, other->strcon2_);
    std::swap(npagesize_, other->npagesize_);
    std::swap(npageindex_, other->npageindex_);
    std::swap(nreserved_, other->nreserved_);
    std::swap(strreserved_, other->strreserved_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryCondition_descriptor_;
  metadata.reflection = QueryCondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BusinessDockMsgInfo::kStrChannelCodeFieldNumber;
const int BusinessDockMsgInfo::kStrServiceCodeFieldNumber;
const int BusinessDockMsgInfo::kStrJDBRIDFieldNumber;
const int BusinessDockMsgInfo::kStrOperatorIdFieldNumber;
const int BusinessDockMsgInfo::kStrChannelSerialNumFieldNumber;
const int BusinessDockMsgInfo::kStrKernelSerialNumFieldNumber;
const int BusinessDockMsgInfo::kStrDateTimeFieldNumber;
const int BusinessDockMsgInfo::kStrChannelDateFieldNumber;
const int BusinessDockMsgInfo::kStrRepondCodeFieldNumber;
const int BusinessDockMsgInfo::kStrChineseDescribeInfoFieldNumber;
const int BusinessDockMsgInfo::kStrBusinessCodeFieldNumber;
const int BusinessDockMsgInfo::kStrBusinessNameFieldNumber;
const int BusinessDockMsgInfo::kStrBusinessStatusFieldNumber;
const int BusinessDockMsgInfo::kStrProduceCodeFieldNumber;
const int BusinessDockMsgInfo::kStrObjectProduceCodeFieldNumber;
const int BusinessDockMsgInfo::kStrFundNameFieldNumber;
const int BusinessDockMsgInfo::kStrProduceNameFieldNumber;
const int BusinessDockMsgInfo::kStrIncomeTypeFieldNumber;
const int BusinessDockMsgInfo::kStrBusinessDateFieldNumber;
const int BusinessDockMsgInfo::kStrClientNameFieldNumber;
const int BusinessDockMsgInfo::kStrCredenitialsTypeFieldNumber;
const int BusinessDockMsgInfo::kStrCredenitialNumFieldNumber;
const int BusinessDockMsgInfo::kStrMediumTypeFieldNumber;
const int BusinessDockMsgInfo::kStrMediumNumFieldNumber;
const int BusinessDockMsgInfo::kStrClientRiskLevelFieldNumber;
const int BusinessDockMsgInfo::kStrProduceRiskLevelFieldNumber;
const int BusinessDockMsgInfo::kStrFundTypeFieldNumber;
const int BusinessDockMsgInfo::kStrCancelBusinessTypeFieldNumber;
const int BusinessDockMsgInfo::kStrTerminalIPFieldNumber;
const int BusinessDockMsgInfo::kStrTradeSerialNumFieldNumber;
const int BusinessDockMsgInfo::kStrFinancSerialNumFieldNumber;
const int BusinessDockMsgInfo::kNSystemTypeFieldNumber;
const int BusinessDockMsgInfo::kNBootFlagFieldNumber;
const int BusinessDockMsgInfo::kStrTermIdFieldNumber;
const int BusinessDockMsgInfo::kStrTranTimeFieldNumber;
const int BusinessDockMsgInfo::kStrAcctNoFieldNumber;
const int BusinessDockMsgInfo::kStrIBFISSerialNumFieldNumber;
const int BusinessDockMsgInfo::kStrVideoEndDateFieldNumber;
const int BusinessDockMsgInfo::kStrExtendedInfoFieldNumber;
#endif  // !_MSC_VER

BusinessDockMsgInfo::BusinessDockMsgInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BusinessDockMsgInfo::InitAsDefaultInstance() {
}

BusinessDockMsgInfo::BusinessDockMsgInfo(const BusinessDockMsgInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BusinessDockMsgInfo::SharedCtor() {
  _cached_size_ = 0;
  strchannelcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strservicecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strjdbrid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stroperatorid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strchannelserialnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strkernelserialnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strdatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strchanneldate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strrepondcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strchinesedescribeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinesscode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinessname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinessstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproducecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strobjectproducecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strfundname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproducename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strincometype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinessdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strclientname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcredenitialstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcredenitialnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmediumtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmediumnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strclientrisklevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strproducerisklevel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strfundtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strcancelbusinesstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strterminalip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strtradeserialnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strfinancserialnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nsystemtype_ = 0;
  nbootflag_ = 0;
  strtermid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strtrantime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stracctno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stribfisserialnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strvideoenddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusinessDockMsgInfo::~BusinessDockMsgInfo() {
  SharedDtor();
}

void BusinessDockMsgInfo::SharedDtor() {
  if (strchannelcode_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannelcode_;
  }
  if (strservicecode_ != &::google::protobuf::internal::kEmptyString) {
    delete strservicecode_;
  }
  if (strjdbrid_ != &::google::protobuf::internal::kEmptyString) {
    delete strjdbrid_;
  }
  if (stroperatorid_ != &::google::protobuf::internal::kEmptyString) {
    delete stroperatorid_;
  }
  if (strchannelserialnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannelserialnum_;
  }
  if (strkernelserialnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strkernelserialnum_;
  }
  if (strdatetime_ != &::google::protobuf::internal::kEmptyString) {
    delete strdatetime_;
  }
  if (strchanneldate_ != &::google::protobuf::internal::kEmptyString) {
    delete strchanneldate_;
  }
  if (strrepondcode_ != &::google::protobuf::internal::kEmptyString) {
    delete strrepondcode_;
  }
  if (strchinesedescribeinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete strchinesedescribeinfo_;
  }
  if (strbusinesscode_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinesscode_;
  }
  if (strbusinessname_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessname_;
  }
  if (strbusinessstatus_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessstatus_;
  }
  if (strproducecode_ != &::google::protobuf::internal::kEmptyString) {
    delete strproducecode_;
  }
  if (strobjectproducecode_ != &::google::protobuf::internal::kEmptyString) {
    delete strobjectproducecode_;
  }
  if (strfundname_ != &::google::protobuf::internal::kEmptyString) {
    delete strfundname_;
  }
  if (strproducename_ != &::google::protobuf::internal::kEmptyString) {
    delete strproducename_;
  }
  if (strincometype_ != &::google::protobuf::internal::kEmptyString) {
    delete strincometype_;
  }
  if (strbusinessdate_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinessdate_;
  }
  if (strclientname_ != &::google::protobuf::internal::kEmptyString) {
    delete strclientname_;
  }
  if (strcredenitialstype_ != &::google::protobuf::internal::kEmptyString) {
    delete strcredenitialstype_;
  }
  if (strcredenitialnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strcredenitialnum_;
  }
  if (strmediumtype_ != &::google::protobuf::internal::kEmptyString) {
    delete strmediumtype_;
  }
  if (strmediumnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strmediumnum_;
  }
  if (strclientrisklevel_ != &::google::protobuf::internal::kEmptyString) {
    delete strclientrisklevel_;
  }
  if (strproducerisklevel_ != &::google::protobuf::internal::kEmptyString) {
    delete strproducerisklevel_;
  }
  if (strfundtype_ != &::google::protobuf::internal::kEmptyString) {
    delete strfundtype_;
  }
  if (strcancelbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
    delete strcancelbusinesstype_;
  }
  if (strterminalip_ != &::google::protobuf::internal::kEmptyString) {
    delete strterminalip_;
  }
  if (strtradeserialnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strtradeserialnum_;
  }
  if (strfinancserialnum_ != &::google::protobuf::internal::kEmptyString) {
    delete strfinancserialnum_;
  }
  if (strtermid_ != &::google::protobuf::internal::kEmptyString) {
    delete strtermid_;
  }
  if (strtrantime_ != &::google::protobuf::internal::kEmptyString) {
    delete strtrantime_;
  }
  if (stracctno_ != &::google::protobuf::internal::kEmptyString) {
    delete stracctno_;
  }
  if (stribfisserialnum_ != &::google::protobuf::internal::kEmptyString) {
    delete stribfisserialnum_;
  }
  if (strvideoenddate_ != &::google::protobuf::internal::kEmptyString) {
    delete strvideoenddate_;
  }
  if (strextendedinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo_;
  }
  if (this != default_instance_) {
  }
}

void BusinessDockMsgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusinessDockMsgInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusinessDockMsgInfo_descriptor_;
}

const BusinessDockMsgInfo& BusinessDockMsgInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

BusinessDockMsgInfo* BusinessDockMsgInfo::default_instance_ = NULL;

BusinessDockMsgInfo* BusinessDockMsgInfo::New() const {
  return new BusinessDockMsgInfo;
}

void BusinessDockMsgInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strchannelcode()) {
      if (strchannelcode_ != &::google::protobuf::internal::kEmptyString) {
        strchannelcode_->clear();
      }
    }
    if (has_strservicecode()) {
      if (strservicecode_ != &::google::protobuf::internal::kEmptyString) {
        strservicecode_->clear();
      }
    }
    if (has_strjdbrid()) {
      if (strjdbrid_ != &::google::protobuf::internal::kEmptyString) {
        strjdbrid_->clear();
      }
    }
    if (has_stroperatorid()) {
      if (stroperatorid_ != &::google::protobuf::internal::kEmptyString) {
        stroperatorid_->clear();
      }
    }
    if (has_strchannelserialnum()) {
      if (strchannelserialnum_ != &::google::protobuf::internal::kEmptyString) {
        strchannelserialnum_->clear();
      }
    }
    if (has_strkernelserialnum()) {
      if (strkernelserialnum_ != &::google::protobuf::internal::kEmptyString) {
        strkernelserialnum_->clear();
      }
    }
    if (has_strdatetime()) {
      if (strdatetime_ != &::google::protobuf::internal::kEmptyString) {
        strdatetime_->clear();
      }
    }
    if (has_strchanneldate()) {
      if (strchanneldate_ != &::google::protobuf::internal::kEmptyString) {
        strchanneldate_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strrepondcode()) {
      if (strrepondcode_ != &::google::protobuf::internal::kEmptyString) {
        strrepondcode_->clear();
      }
    }
    if (has_strchinesedescribeinfo()) {
      if (strchinesedescribeinfo_ != &::google::protobuf::internal::kEmptyString) {
        strchinesedescribeinfo_->clear();
      }
    }
    if (has_strbusinesscode()) {
      if (strbusinesscode_ != &::google::protobuf::internal::kEmptyString) {
        strbusinesscode_->clear();
      }
    }
    if (has_strbusinessname()) {
      if (strbusinessname_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessname_->clear();
      }
    }
    if (has_strbusinessstatus()) {
      if (strbusinessstatus_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessstatus_->clear();
      }
    }
    if (has_strproducecode()) {
      if (strproducecode_ != &::google::protobuf::internal::kEmptyString) {
        strproducecode_->clear();
      }
    }
    if (has_strobjectproducecode()) {
      if (strobjectproducecode_ != &::google::protobuf::internal::kEmptyString) {
        strobjectproducecode_->clear();
      }
    }
    if (has_strfundname()) {
      if (strfundname_ != &::google::protobuf::internal::kEmptyString) {
        strfundname_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_strproducename()) {
      if (strproducename_ != &::google::protobuf::internal::kEmptyString) {
        strproducename_->clear();
      }
    }
    if (has_strincometype()) {
      if (strincometype_ != &::google::protobuf::internal::kEmptyString) {
        strincometype_->clear();
      }
    }
    if (has_strbusinessdate()) {
      if (strbusinessdate_ != &::google::protobuf::internal::kEmptyString) {
        strbusinessdate_->clear();
      }
    }
    if (has_strclientname()) {
      if (strclientname_ != &::google::protobuf::internal::kEmptyString) {
        strclientname_->clear();
      }
    }
    if (has_strcredenitialstype()) {
      if (strcredenitialstype_ != &::google::protobuf::internal::kEmptyString) {
        strcredenitialstype_->clear();
      }
    }
    if (has_strcredenitialnum()) {
      if (strcredenitialnum_ != &::google::protobuf::internal::kEmptyString) {
        strcredenitialnum_->clear();
      }
    }
    if (has_strmediumtype()) {
      if (strmediumtype_ != &::google::protobuf::internal::kEmptyString) {
        strmediumtype_->clear();
      }
    }
    if (has_strmediumnum()) {
      if (strmediumnum_ != &::google::protobuf::internal::kEmptyString) {
        strmediumnum_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_strclientrisklevel()) {
      if (strclientrisklevel_ != &::google::protobuf::internal::kEmptyString) {
        strclientrisklevel_->clear();
      }
    }
    if (has_strproducerisklevel()) {
      if (strproducerisklevel_ != &::google::protobuf::internal::kEmptyString) {
        strproducerisklevel_->clear();
      }
    }
    if (has_strfundtype()) {
      if (strfundtype_ != &::google::protobuf::internal::kEmptyString) {
        strfundtype_->clear();
      }
    }
    if (has_strcancelbusinesstype()) {
      if (strcancelbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
        strcancelbusinesstype_->clear();
      }
    }
    if (has_strterminalip()) {
      if (strterminalip_ != &::google::protobuf::internal::kEmptyString) {
        strterminalip_->clear();
      }
    }
    if (has_strtradeserialnum()) {
      if (strtradeserialnum_ != &::google::protobuf::internal::kEmptyString) {
        strtradeserialnum_->clear();
      }
    }
    if (has_strfinancserialnum()) {
      if (strfinancserialnum_ != &::google::protobuf::internal::kEmptyString) {
        strfinancserialnum_->clear();
      }
    }
    nsystemtype_ = 0;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    nbootflag_ = 0;
    if (has_strtermid()) {
      if (strtermid_ != &::google::protobuf::internal::kEmptyString) {
        strtermid_->clear();
      }
    }
    if (has_strtrantime()) {
      if (strtrantime_ != &::google::protobuf::internal::kEmptyString) {
        strtrantime_->clear();
      }
    }
    if (has_stracctno()) {
      if (stracctno_ != &::google::protobuf::internal::kEmptyString) {
        stracctno_->clear();
      }
    }
    if (has_stribfisserialnum()) {
      if (stribfisserialnum_ != &::google::protobuf::internal::kEmptyString) {
        stribfisserialnum_->clear();
      }
    }
    if (has_strvideoenddate()) {
      if (strvideoenddate_ != &::google::protobuf::internal::kEmptyString) {
        strvideoenddate_->clear();
      }
    }
    if (has_strextendedinfo()) {
      if (strextendedinfo_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusinessDockMsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strChannelCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchannelcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strchannelcode().data(), this->strchannelcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strServiceCode;
        break;
      }

      // required string strServiceCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strServiceCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strservicecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strservicecode().data(), this->strservicecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strJDBRID;
        break;
      }

      // required string strJDBRID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strJDBRID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strjdbrid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strjdbrid().data(), this->strjdbrid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strOperatorId;
        break;
      }

      // required string strOperatorId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strOperatorId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stroperatorid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stroperatorid().data(), this->stroperatorid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strChannelSerialNum;
        break;
      }

      // required string strChannelSerialNum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strChannelSerialNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchannelserialnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strchannelserialnum().data(), this->strchannelserialnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strKernelSerialNum;
        break;
      }

      // required string strKernelSerialNum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strKernelSerialNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strkernelserialnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strkernelserialnum().data(), this->strkernelserialnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strDateTime;
        break;
      }

      // required string strDateTime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strDateTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strdatetime().data(), this->strdatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_strChannelDate;
        break;
      }

      // required string strChannelDate = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strChannelDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchanneldate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strchanneldate().data(), this->strchanneldate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strRepondCode;
        break;
      }

      // required string strRepondCode = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strRepondCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrepondcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strrepondcode().data(), this->strrepondcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_strChineseDescribeInfo;
        break;
      }

      // required string strChineseDescribeInfo = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strChineseDescribeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchinesedescribeinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strchinesedescribeinfo().data(), this->strchinesedescribeinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_strBusinessCode;
        break;
      }

      // required string strBusinessCode = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinesscode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinesscode().data(), this->strbusinesscode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_strBusinessName;
        break;
      }

      // required string strBusinessName = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessname().data(), this->strbusinessname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_strBusinessStatus;
        break;
      }

      // required string strBusinessStatus = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessstatus().data(), this->strbusinessstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_strProduceCode;
        break;
      }

      // required string strProduceCode = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproducecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproducecode().data(), this->strproducecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_strObjectProduceCode;
        break;
      }

      // required string strObjectProduceCode = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strObjectProduceCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strobjectproducecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strobjectproducecode().data(), this->strobjectproducecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_strFundName;
        break;
      }

      // required string strFundName = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strFundName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfundname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strfundname().data(), this->strfundname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_strProduceName;
        break;
      }

      // required string strProduceName = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproducename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproducename().data(), this->strproducename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_strIncomeType;
        break;
      }

      // required string strIncomeType = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strIncomeType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strincometype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strincometype().data(), this->strincometype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_strBusinessDate;
        break;
      }

      // required string strBusinessDate = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinessdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinessdate().data(), this->strbusinessdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_strClientName;
        break;
      }

      // required string strClientName = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strClientName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclientname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strclientname().data(), this->strclientname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_strCredenitialsType;
        break;
      }

      // required string strCredenitialsType = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCredenitialsType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcredenitialstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcredenitialstype().data(), this->strcredenitialstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_strCredenitialNum;
        break;
      }

      // required string strCredenitialNum = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCredenitialNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcredenitialnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcredenitialnum().data(), this->strcredenitialnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_strMediumType;
        break;
      }

      // required string strMediumType = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMediumType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmediumtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmediumtype().data(), this->strmediumtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_strMediumNum;
        break;
      }

      // required string strMediumNum = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMediumNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmediumnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmediumnum().data(), this->strmediumnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_strClientRiskLevel;
        break;
      }

      // required string strClientRiskLevel = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strClientRiskLevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strclientrisklevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strclientrisklevel().data(), this->strclientrisklevel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_strProduceRiskLevel;
        break;
      }

      // required string strProduceRiskLevel = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strProduceRiskLevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strproducerisklevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strproducerisklevel().data(), this->strproducerisklevel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_strFundType;
        break;
      }

      // required string strFundType = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strFundType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfundtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strfundtype().data(), this->strfundtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_strCancelBusinessType;
        break;
      }

      // required string strCancelBusinessType = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strCancelBusinessType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcancelbusinesstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strcancelbusinesstype().data(), this->strcancelbusinesstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_strTerminalIP;
        break;
      }

      // required string strTerminalIP = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTerminalIP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strterminalip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strterminalip().data(), this->strterminalip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_strTradeSerialNum;
        break;
      }

      // required string strTradeSerialNum = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTradeSerialNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtradeserialnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtradeserialnum().data(), this->strtradeserialnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_strFinancSerialNum;
        break;
      }

      // required string strFinancSerialNum = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strFinancSerialNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfinancserialnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strfinancserialnum().data(), this->strfinancserialnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_nSystemType;
        break;
      }

      // required int32 nSystemType = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nSystemType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nsystemtype_)));
          set_has_nsystemtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_nBootFlag;
        break;
      }

      // required int32 nBootFlag = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nBootFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbootflag_)));
          set_has_nbootflag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_strTermId;
        break;
      }

      // optional string strTermId = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTermId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtermid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtermid().data(), this->strtermid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(282)) goto parse_strTranTime;
        break;
      }

      // optional string strTranTime = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strTranTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtrantime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strtrantime().data(), this->strtrantime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_strAcctNo;
        break;
      }

      // optional string strAcctNo = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strAcctNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stracctno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stracctno().data(), this->stracctno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_strIBFISSerialNum;
        break;
      }

      // optional string strIBFISSerialNum = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strIBFISSerialNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stribfisserialnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stribfisserialnum().data(), this->stribfisserialnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(306)) goto parse_strVideoEndDate;
        break;
      }

      // optional string strVideoEndDate = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strVideoEndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvideoenddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strvideoenddate().data(), this->strvideoenddate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(314)) goto parse_strExtendedInfo;
        break;
      }

      // optional string strExtendedInfo = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo().data(), this->strextendedinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BusinessDockMsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strChannelCode = 1;
  if (has_strchannelcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchannelcode().data(), this->strchannelcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strchannelcode(), output);
  }

  // required string strServiceCode = 2;
  if (has_strservicecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strservicecode().data(), this->strservicecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strservicecode(), output);
  }

  // required string strJDBRID = 3;
  if (has_strjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdbrid().data(), this->strjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strjdbrid(), output);
  }

  // required string strOperatorId = 4;
  if (has_stroperatorid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroperatorid().data(), this->stroperatorid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->stroperatorid(), output);
  }

  // required string strChannelSerialNum = 5;
  if (has_strchannelserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchannelserialnum().data(), this->strchannelserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strchannelserialnum(), output);
  }

  // required string strKernelSerialNum = 6;
  if (has_strkernelserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strkernelserialnum().data(), this->strkernelserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strkernelserialnum(), output);
  }

  // required string strDateTime = 7;
  if (has_strdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdatetime().data(), this->strdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strdatetime(), output);
  }

  // required string strChannelDate = 8;
  if (has_strchanneldate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchanneldate().data(), this->strchanneldate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strchanneldate(), output);
  }

  // required string strRepondCode = 9;
  if (has_strrepondcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrepondcode().data(), this->strrepondcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strrepondcode(), output);
  }

  // required string strChineseDescribeInfo = 10;
  if (has_strchinesedescribeinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchinesedescribeinfo().data(), this->strchinesedescribeinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->strchinesedescribeinfo(), output);
  }

  // required string strBusinessCode = 11;
  if (has_strbusinesscode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesscode().data(), this->strbusinesscode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->strbusinesscode(), output);
  }

  // required string strBusinessName = 12;
  if (has_strbusinessname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessname().data(), this->strbusinessname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->strbusinessname(), output);
  }

  // required string strBusinessStatus = 13;
  if (has_strbusinessstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessstatus().data(), this->strbusinessstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->strbusinessstatus(), output);
  }

  // required string strProduceCode = 14;
  if (has_strproducecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducecode().data(), this->strproducecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->strproducecode(), output);
  }

  // required string strObjectProduceCode = 15;
  if (has_strobjectproducecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strobjectproducecode().data(), this->strobjectproducecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->strobjectproducecode(), output);
  }

  // required string strFundName = 16;
  if (has_strfundname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfundname().data(), this->strfundname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->strfundname(), output);
  }

  // required string strProduceName = 17;
  if (has_strproducename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducename().data(), this->strproducename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->strproducename(), output);
  }

  // required string strIncomeType = 18;
  if (has_strincometype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strincometype().data(), this->strincometype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->strincometype(), output);
  }

  // required string strBusinessDate = 19;
  if (has_strbusinessdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessdate().data(), this->strbusinessdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->strbusinessdate(), output);
  }

  // required string strClientName = 20;
  if (has_strclientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientname().data(), this->strclientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->strclientname(), output);
  }

  // required string strCredenitialsType = 21;
  if (has_strcredenitialstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialstype().data(), this->strcredenitialstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->strcredenitialstype(), output);
  }

  // required string strCredenitialNum = 22;
  if (has_strcredenitialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialnum().data(), this->strcredenitialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->strcredenitialnum(), output);
  }

  // required string strMediumType = 23;
  if (has_strmediumtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumtype().data(), this->strmediumtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->strmediumtype(), output);
  }

  // required string strMediumNum = 24;
  if (has_strmediumnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumnum().data(), this->strmediumnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->strmediumnum(), output);
  }

  // required string strClientRiskLevel = 25;
  if (has_strclientrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientrisklevel().data(), this->strclientrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->strclientrisklevel(), output);
  }

  // required string strProduceRiskLevel = 26;
  if (has_strproducerisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducerisklevel().data(), this->strproducerisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->strproducerisklevel(), output);
  }

  // required string strFundType = 27;
  if (has_strfundtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfundtype().data(), this->strfundtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->strfundtype(), output);
  }

  // required string strCancelBusinessType = 28;
  if (has_strcancelbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcancelbusinesstype().data(), this->strcancelbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->strcancelbusinesstype(), output);
  }

  // required string strTerminalIP = 29;
  if (has_strterminalip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strterminalip().data(), this->strterminalip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->strterminalip(), output);
  }

  // required string strTradeSerialNum = 30;
  if (has_strtradeserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtradeserialnum().data(), this->strtradeserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->strtradeserialnum(), output);
  }

  // required string strFinancSerialNum = 31;
  if (has_strfinancserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfinancserialnum().data(), this->strfinancserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->strfinancserialnum(), output);
  }

  // required int32 nSystemType = 32;
  if (has_nsystemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->nsystemtype(), output);
  }

  // required int32 nBootFlag = 33;
  if (has_nbootflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->nbootflag(), output);
  }

  // optional string strTermId = 34;
  if (has_strtermid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtermid().data(), this->strtermid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      34, this->strtermid(), output);
  }

  // optional string strTranTime = 35;
  if (has_strtrantime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtrantime().data(), this->strtrantime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      35, this->strtrantime(), output);
  }

  // optional string strAcctNo = 36;
  if (has_stracctno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stracctno().data(), this->stracctno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      36, this->stracctno(), output);
  }

  // optional string strIBFISSerialNum = 37;
  if (has_stribfisserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stribfisserialnum().data(), this->stribfisserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->stribfisserialnum(), output);
  }

  // optional string strVideoEndDate = 38;
  if (has_strvideoenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvideoenddate().data(), this->strvideoenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      38, this->strvideoenddate(), output);
  }

  // optional string strExtendedInfo = 39;
  if (has_strextendedinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo().data(), this->strextendedinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      39, this->strextendedinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BusinessDockMsgInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strChannelCode = 1;
  if (has_strchannelcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchannelcode().data(), this->strchannelcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strchannelcode(), target);
  }

  // required string strServiceCode = 2;
  if (has_strservicecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strservicecode().data(), this->strservicecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strservicecode(), target);
  }

  // required string strJDBRID = 3;
  if (has_strjdbrid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strjdbrid().data(), this->strjdbrid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strjdbrid(), target);
  }

  // required string strOperatorId = 4;
  if (has_stroperatorid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroperatorid().data(), this->stroperatorid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->stroperatorid(), target);
  }

  // required string strChannelSerialNum = 5;
  if (has_strchannelserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchannelserialnum().data(), this->strchannelserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strchannelserialnum(), target);
  }

  // required string strKernelSerialNum = 6;
  if (has_strkernelserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strkernelserialnum().data(), this->strkernelserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strkernelserialnum(), target);
  }

  // required string strDateTime = 7;
  if (has_strdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strdatetime().data(), this->strdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strdatetime(), target);
  }

  // required string strChannelDate = 8;
  if (has_strchanneldate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchanneldate().data(), this->strchanneldate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->strchanneldate(), target);
  }

  // required string strRepondCode = 9;
  if (has_strrepondcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strrepondcode().data(), this->strrepondcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strrepondcode(), target);
  }

  // required string strChineseDescribeInfo = 10;
  if (has_strchinesedescribeinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strchinesedescribeinfo().data(), this->strchinesedescribeinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->strchinesedescribeinfo(), target);
  }

  // required string strBusinessCode = 11;
  if (has_strbusinesscode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesscode().data(), this->strbusinesscode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->strbusinesscode(), target);
  }

  // required string strBusinessName = 12;
  if (has_strbusinessname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessname().data(), this->strbusinessname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->strbusinessname(), target);
  }

  // required string strBusinessStatus = 13;
  if (has_strbusinessstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessstatus().data(), this->strbusinessstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strbusinessstatus(), target);
  }

  // required string strProduceCode = 14;
  if (has_strproducecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducecode().data(), this->strproducecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->strproducecode(), target);
  }

  // required string strObjectProduceCode = 15;
  if (has_strobjectproducecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strobjectproducecode().data(), this->strobjectproducecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->strobjectproducecode(), target);
  }

  // required string strFundName = 16;
  if (has_strfundname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfundname().data(), this->strfundname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->strfundname(), target);
  }

  // required string strProduceName = 17;
  if (has_strproducename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducename().data(), this->strproducename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->strproducename(), target);
  }

  // required string strIncomeType = 18;
  if (has_strincometype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strincometype().data(), this->strincometype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->strincometype(), target);
  }

  // required string strBusinessDate = 19;
  if (has_strbusinessdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinessdate().data(), this->strbusinessdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->strbusinessdate(), target);
  }

  // required string strClientName = 20;
  if (has_strclientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientname().data(), this->strclientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->strclientname(), target);
  }

  // required string strCredenitialsType = 21;
  if (has_strcredenitialstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialstype().data(), this->strcredenitialstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->strcredenitialstype(), target);
  }

  // required string strCredenitialNum = 22;
  if (has_strcredenitialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcredenitialnum().data(), this->strcredenitialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->strcredenitialnum(), target);
  }

  // required string strMediumType = 23;
  if (has_strmediumtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumtype().data(), this->strmediumtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->strmediumtype(), target);
  }

  // required string strMediumNum = 24;
  if (has_strmediumnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmediumnum().data(), this->strmediumnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->strmediumnum(), target);
  }

  // required string strClientRiskLevel = 25;
  if (has_strclientrisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strclientrisklevel().data(), this->strclientrisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->strclientrisklevel(), target);
  }

  // required string strProduceRiskLevel = 26;
  if (has_strproducerisklevel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strproducerisklevel().data(), this->strproducerisklevel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->strproducerisklevel(), target);
  }

  // required string strFundType = 27;
  if (has_strfundtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfundtype().data(), this->strfundtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->strfundtype(), target);
  }

  // required string strCancelBusinessType = 28;
  if (has_strcancelbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strcancelbusinesstype().data(), this->strcancelbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->strcancelbusinesstype(), target);
  }

  // required string strTerminalIP = 29;
  if (has_strterminalip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strterminalip().data(), this->strterminalip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->strterminalip(), target);
  }

  // required string strTradeSerialNum = 30;
  if (has_strtradeserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtradeserialnum().data(), this->strtradeserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->strtradeserialnum(), target);
  }

  // required string strFinancSerialNum = 31;
  if (has_strfinancserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strfinancserialnum().data(), this->strfinancserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->strfinancserialnum(), target);
  }

  // required int32 nSystemType = 32;
  if (has_nsystemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->nsystemtype(), target);
  }

  // required int32 nBootFlag = 33;
  if (has_nbootflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->nbootflag(), target);
  }

  // optional string strTermId = 34;
  if (has_strtermid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtermid().data(), this->strtermid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->strtermid(), target);
  }

  // optional string strTranTime = 35;
  if (has_strtrantime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strtrantime().data(), this->strtrantime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->strtrantime(), target);
  }

  // optional string strAcctNo = 36;
  if (has_stracctno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stracctno().data(), this->stracctno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->stracctno(), target);
  }

  // optional string strIBFISSerialNum = 37;
  if (has_stribfisserialnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stribfisserialnum().data(), this->stribfisserialnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->stribfisserialnum(), target);
  }

  // optional string strVideoEndDate = 38;
  if (has_strvideoenddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvideoenddate().data(), this->strvideoenddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->strvideoenddate(), target);
  }

  // optional string strExtendedInfo = 39;
  if (has_strextendedinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo().data(), this->strextendedinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->strextendedinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BusinessDockMsgInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strChannelCode = 1;
    if (has_strchannelcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strchannelcode());
    }

    // required string strServiceCode = 2;
    if (has_strservicecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strservicecode());
    }

    // required string strJDBRID = 3;
    if (has_strjdbrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strjdbrid());
    }

    // required string strOperatorId = 4;
    if (has_stroperatorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stroperatorid());
    }

    // required string strChannelSerialNum = 5;
    if (has_strchannelserialnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strchannelserialnum());
    }

    // required string strKernelSerialNum = 6;
    if (has_strkernelserialnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strkernelserialnum());
    }

    // required string strDateTime = 7;
    if (has_strdatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strdatetime());
    }

    // required string strChannelDate = 8;
    if (has_strchanneldate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strchanneldate());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strRepondCode = 9;
    if (has_strrepondcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strrepondcode());
    }

    // required string strChineseDescribeInfo = 10;
    if (has_strchinesedescribeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strchinesedescribeinfo());
    }

    // required string strBusinessCode = 11;
    if (has_strbusinesscode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinesscode());
    }

    // required string strBusinessName = 12;
    if (has_strbusinessname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessname());
    }

    // required string strBusinessStatus = 13;
    if (has_strbusinessstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessstatus());
    }

    // required string strProduceCode = 14;
    if (has_strproducecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproducecode());
    }

    // required string strObjectProduceCode = 15;
    if (has_strobjectproducecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strobjectproducecode());
    }

    // required string strFundName = 16;
    if (has_strfundname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strfundname());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required string strProduceName = 17;
    if (has_strproducename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproducename());
    }

    // required string strIncomeType = 18;
    if (has_strincometype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strincometype());
    }

    // required string strBusinessDate = 19;
    if (has_strbusinessdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinessdate());
    }

    // required string strClientName = 20;
    if (has_strclientname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strclientname());
    }

    // required string strCredenitialsType = 21;
    if (has_strcredenitialstype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcredenitialstype());
    }

    // required string strCredenitialNum = 22;
    if (has_strcredenitialnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcredenitialnum());
    }

    // required string strMediumType = 23;
    if (has_strmediumtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmediumtype());
    }

    // required string strMediumNum = 24;
    if (has_strmediumnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmediumnum());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required string strClientRiskLevel = 25;
    if (has_strclientrisklevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strclientrisklevel());
    }

    // required string strProduceRiskLevel = 26;
    if (has_strproducerisklevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strproducerisklevel());
    }

    // required string strFundType = 27;
    if (has_strfundtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strfundtype());
    }

    // required string strCancelBusinessType = 28;
    if (has_strcancelbusinesstype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strcancelbusinesstype());
    }

    // required string strTerminalIP = 29;
    if (has_strterminalip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strterminalip());
    }

    // required string strTradeSerialNum = 30;
    if (has_strtradeserialnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtradeserialnum());
    }

    // required string strFinancSerialNum = 31;
    if (has_strfinancserialnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strfinancserialnum());
    }

    // required int32 nSystemType = 32;
    if (has_nsystemtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nsystemtype());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required int32 nBootFlag = 33;
    if (has_nbootflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nbootflag());
    }

    // optional string strTermId = 34;
    if (has_strtermid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtermid());
    }

    // optional string strTranTime = 35;
    if (has_strtrantime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strtrantime());
    }

    // optional string strAcctNo = 36;
    if (has_stracctno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stracctno());
    }

    // optional string strIBFISSerialNum = 37;
    if (has_stribfisserialnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stribfisserialnum());
    }

    // optional string strVideoEndDate = 38;
    if (has_strvideoenddate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strvideoenddate());
    }

    // optional string strExtendedInfo = 39;
    if (has_strextendedinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusinessDockMsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusinessDockMsgInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusinessDockMsgInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusinessDockMsgInfo::MergeFrom(const BusinessDockMsgInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strchannelcode()) {
      set_strchannelcode(from.strchannelcode());
    }
    if (from.has_strservicecode()) {
      set_strservicecode(from.strservicecode());
    }
    if (from.has_strjdbrid()) {
      set_strjdbrid(from.strjdbrid());
    }
    if (from.has_stroperatorid()) {
      set_stroperatorid(from.stroperatorid());
    }
    if (from.has_strchannelserialnum()) {
      set_strchannelserialnum(from.strchannelserialnum());
    }
    if (from.has_strkernelserialnum()) {
      set_strkernelserialnum(from.strkernelserialnum());
    }
    if (from.has_strdatetime()) {
      set_strdatetime(from.strdatetime());
    }
    if (from.has_strchanneldate()) {
      set_strchanneldate(from.strchanneldate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strrepondcode()) {
      set_strrepondcode(from.strrepondcode());
    }
    if (from.has_strchinesedescribeinfo()) {
      set_strchinesedescribeinfo(from.strchinesedescribeinfo());
    }
    if (from.has_strbusinesscode()) {
      set_strbusinesscode(from.strbusinesscode());
    }
    if (from.has_strbusinessname()) {
      set_strbusinessname(from.strbusinessname());
    }
    if (from.has_strbusinessstatus()) {
      set_strbusinessstatus(from.strbusinessstatus());
    }
    if (from.has_strproducecode()) {
      set_strproducecode(from.strproducecode());
    }
    if (from.has_strobjectproducecode()) {
      set_strobjectproducecode(from.strobjectproducecode());
    }
    if (from.has_strfundname()) {
      set_strfundname(from.strfundname());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_strproducename()) {
      set_strproducename(from.strproducename());
    }
    if (from.has_strincometype()) {
      set_strincometype(from.strincometype());
    }
    if (from.has_strbusinessdate()) {
      set_strbusinessdate(from.strbusinessdate());
    }
    if (from.has_strclientname()) {
      set_strclientname(from.strclientname());
    }
    if (from.has_strcredenitialstype()) {
      set_strcredenitialstype(from.strcredenitialstype());
    }
    if (from.has_strcredenitialnum()) {
      set_strcredenitialnum(from.strcredenitialnum());
    }
    if (from.has_strmediumtype()) {
      set_strmediumtype(from.strmediumtype());
    }
    if (from.has_strmediumnum()) {
      set_strmediumnum(from.strmediumnum());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_strclientrisklevel()) {
      set_strclientrisklevel(from.strclientrisklevel());
    }
    if (from.has_strproducerisklevel()) {
      set_strproducerisklevel(from.strproducerisklevel());
    }
    if (from.has_strfundtype()) {
      set_strfundtype(from.strfundtype());
    }
    if (from.has_strcancelbusinesstype()) {
      set_strcancelbusinesstype(from.strcancelbusinesstype());
    }
    if (from.has_strterminalip()) {
      set_strterminalip(from.strterminalip());
    }
    if (from.has_strtradeserialnum()) {
      set_strtradeserialnum(from.strtradeserialnum());
    }
    if (from.has_strfinancserialnum()) {
      set_strfinancserialnum(from.strfinancserialnum());
    }
    if (from.has_nsystemtype()) {
      set_nsystemtype(from.nsystemtype());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_nbootflag()) {
      set_nbootflag(from.nbootflag());
    }
    if (from.has_strtermid()) {
      set_strtermid(from.strtermid());
    }
    if (from.has_strtrantime()) {
      set_strtrantime(from.strtrantime());
    }
    if (from.has_stracctno()) {
      set_stracctno(from.stracctno());
    }
    if (from.has_stribfisserialnum()) {
      set_stribfisserialnum(from.stribfisserialnum());
    }
    if (from.has_strvideoenddate()) {
      set_strvideoenddate(from.strvideoenddate());
    }
    if (from.has_strextendedinfo()) {
      set_strextendedinfo(from.strextendedinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusinessDockMsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusinessDockMsgInfo::CopyFrom(const BusinessDockMsgInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusinessDockMsgInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BusinessDockMsgInfo::Swap(BusinessDockMsgInfo* other) {
  if (other != this) {
    std::swap(strchannelcode_, other->strchannelcode_);
    std::swap(strservicecode_, other->strservicecode_);
    std::swap(strjdbrid_, other->strjdbrid_);
    std::swap(stroperatorid_, other->stroperatorid_);
    std::swap(strchannelserialnum_, other->strchannelserialnum_);
    std::swap(strkernelserialnum_, other->strkernelserialnum_);
    std::swap(strdatetime_, other->strdatetime_);
    std::swap(strchanneldate_, other->strchanneldate_);
    std::swap(strrepondcode_, other->strrepondcode_);
    std::swap(strchinesedescribeinfo_, other->strchinesedescribeinfo_);
    std::swap(strbusinesscode_, other->strbusinesscode_);
    std::swap(strbusinessname_, other->strbusinessname_);
    std::swap(strbusinessstatus_, other->strbusinessstatus_);
    std::swap(strproducecode_, other->strproducecode_);
    std::swap(strobjectproducecode_, other->strobjectproducecode_);
    std::swap(strfundname_, other->strfundname_);
    std::swap(strproducename_, other->strproducename_);
    std::swap(strincometype_, other->strincometype_);
    std::swap(strbusinessdate_, other->strbusinessdate_);
    std::swap(strclientname_, other->strclientname_);
    std::swap(strcredenitialstype_, other->strcredenitialstype_);
    std::swap(strcredenitialnum_, other->strcredenitialnum_);
    std::swap(strmediumtype_, other->strmediumtype_);
    std::swap(strmediumnum_, other->strmediumnum_);
    std::swap(strclientrisklevel_, other->strclientrisklevel_);
    std::swap(strproducerisklevel_, other->strproducerisklevel_);
    std::swap(strfundtype_, other->strfundtype_);
    std::swap(strcancelbusinesstype_, other->strcancelbusinesstype_);
    std::swap(strterminalip_, other->strterminalip_);
    std::swap(strtradeserialnum_, other->strtradeserialnum_);
    std::swap(strfinancserialnum_, other->strfinancserialnum_);
    std::swap(nsystemtype_, other->nsystemtype_);
    std::swap(nbootflag_, other->nbootflag_);
    std::swap(strtermid_, other->strtermid_);
    std::swap(strtrantime_, other->strtrantime_);
    std::swap(stracctno_, other->stracctno_);
    std::swap(stribfisserialnum_, other->stribfisserialnum_);
    std::swap(strvideoenddate_, other->strvideoenddate_);
    std::swap(strextendedinfo_, other->strextendedinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusinessDockMsgInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusinessDockMsgInfo_descriptor_;
  metadata.reflection = BusinessDockMsgInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ManualSyncParameter::kNBranchInfoFieldNumber;
const int ManualSyncParameter::kNProduceInfoFieldNumber;
const int ManualSyncParameter::kNEmployeeInfoFieldNumber;
#endif  // !_MSC_VER

ManualSyncParameter::ManualSyncParameter()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManualSyncParameter::InitAsDefaultInstance() {
}

ManualSyncParameter::ManualSyncParameter(const ManualSyncParameter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManualSyncParameter::SharedCtor() {
  _cached_size_ = 0;
  nbranchinfo_ = 0;
  nproduceinfo_ = 0;
  nemployeeinfo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManualSyncParameter::~ManualSyncParameter() {
  SharedDtor();
}

void ManualSyncParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ManualSyncParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManualSyncParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManualSyncParameter_descriptor_;
}

const ManualSyncParameter& ManualSyncParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

ManualSyncParameter* ManualSyncParameter::default_instance_ = NULL;

ManualSyncParameter* ManualSyncParameter::New() const {
  return new ManualSyncParameter;
}

void ManualSyncParameter::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nbranchinfo_ = 0;
    nproduceinfo_ = 0;
    nemployeeinfo_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManualSyncParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nBranchInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nbranchinfo_)));
          set_has_nbranchinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nProduceInfo;
        break;
      }

      // required int32 nProduceInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nProduceInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nproduceinfo_)));
          set_has_nproduceinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nEmployeeInfo;
        break;
      }

      // required int32 nEmployeeInfo = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nEmployeeInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nemployeeinfo_)));
          set_has_nemployeeinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManualSyncParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nBranchInfo = 1;
  if (has_nbranchinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nbranchinfo(), output);
  }

  // required int32 nProduceInfo = 2;
  if (has_nproduceinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nproduceinfo(), output);
  }

  // required int32 nEmployeeInfo = 3;
  if (has_nemployeeinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nemployeeinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManualSyncParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nBranchInfo = 1;
  if (has_nbranchinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nbranchinfo(), target);
  }

  // required int32 nProduceInfo = 2;
  if (has_nproduceinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nproduceinfo(), target);
  }

  // required int32 nEmployeeInfo = 3;
  if (has_nemployeeinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nemployeeinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManualSyncParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nBranchInfo = 1;
    if (has_nbranchinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nbranchinfo());
    }

    // required int32 nProduceInfo = 2;
    if (has_nproduceinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nproduceinfo());
    }

    // required int32 nEmployeeInfo = 3;
    if (has_nemployeeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nemployeeinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManualSyncParameter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManualSyncParameter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManualSyncParameter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManualSyncParameter::MergeFrom(const ManualSyncParameter& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nbranchinfo()) {
      set_nbranchinfo(from.nbranchinfo());
    }
    if (from.has_nproduceinfo()) {
      set_nproduceinfo(from.nproduceinfo());
    }
    if (from.has_nemployeeinfo()) {
      set_nemployeeinfo(from.nemployeeinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManualSyncParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManualSyncParameter::CopyFrom(const ManualSyncParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManualSyncParameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ManualSyncParameter::Swap(ManualSyncParameter* other) {
  if (other != this) {
    std::swap(nbranchinfo_, other->nbranchinfo_);
    std::swap(nproduceinfo_, other->nproduceinfo_);
    std::swap(nemployeeinfo_, other->nemployeeinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManualSyncParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManualSyncParameter_descriptor_;
  metadata.reflection = ManualSyncParameter_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ScriptInfo::kStrScriptIdFieldNumber;
const int ScriptInfo::kStrBusinessCodeFieldNumber;
const int ScriptInfo::kStrBusinessTypeFieldNumber;
const int ScriptInfo::kStrScriptContentFieldNumber;
const int ScriptInfo::kNExtendedInfoFieldNumber;
const int ScriptInfo::kStrExtendedInfo1FieldNumber;
const int ScriptInfo::kStrExtendedInfo2FieldNumber;
#endif  // !_MSC_VER

ScriptInfo::ScriptInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ScriptInfo::InitAsDefaultInstance() {
}

ScriptInfo::ScriptInfo(const ScriptInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ScriptInfo::SharedCtor() {
  _cached_size_ = 0;
  strscriptid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinesscode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbusinesstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strscriptcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strextendedinfo2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScriptInfo::~ScriptInfo() {
  SharedDtor();
}

void ScriptInfo::SharedDtor() {
  if (strscriptid_ != &::google::protobuf::internal::kEmptyString) {
    delete strscriptid_;
  }
  if (strbusinesscode_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinesscode_;
  }
  if (strbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
    delete strbusinesstype_;
  }
  if (strscriptcontent_ != &::google::protobuf::internal::kEmptyString) {
    delete strscriptcontent_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo2_;
  }
  if (this != default_instance_) {
  }
}

void ScriptInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScriptInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScriptInfo_descriptor_;
}

const ScriptInfo& ScriptInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

ScriptInfo* ScriptInfo::default_instance_ = NULL;

ScriptInfo* ScriptInfo::New() const {
  return new ScriptInfo;
}

void ScriptInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strscriptid()) {
      if (strscriptid_ != &::google::protobuf::internal::kEmptyString) {
        strscriptid_->clear();
      }
    }
    if (has_strbusinesscode()) {
      if (strbusinesscode_ != &::google::protobuf::internal::kEmptyString) {
        strbusinesscode_->clear();
      }
    }
    if (has_strbusinesstype()) {
      if (strbusinesstype_ != &::google::protobuf::internal::kEmptyString) {
        strbusinesstype_->clear();
      }
    }
    if (has_strscriptcontent()) {
      if (strscriptcontent_ != &::google::protobuf::internal::kEmptyString) {
        strscriptcontent_->clear();
      }
    }
    nextendedinfo_ = 0;
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
    if (has_strextendedinfo2()) {
      if (strextendedinfo2_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScriptInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strScriptId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strscriptid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strscriptid().data(), this->strscriptid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strBusinessCode;
        break;
      }

      // required string strBusinessCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinesscode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinesscode().data(), this->strbusinesscode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strBusinessType;
        break;
      }

      // required string strBusinessType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBusinessType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbusinesstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbusinesstype().data(), this->strbusinesstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strScriptContent;
        break;
      }

      // required string strScriptContent = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strScriptContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strscriptcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strscriptcontent().data(), this->strscriptcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_strExtendedInfo2;
        break;
      }

      // required string strExtendedInfo2 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo2().data(), this->strextendedinfo2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ScriptInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strScriptId = 1;
  if (has_strscriptid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strscriptid().data(), this->strscriptid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strscriptid(), output);
  }

  // required string strBusinessCode = 2;
  if (has_strbusinesscode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesscode().data(), this->strbusinesscode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strbusinesscode(), output);
  }

  // required string strBusinessType = 3;
  if (has_strbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesstype().data(), this->strbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strbusinesstype(), output);
  }

  // required string strScriptContent = 4;
  if (has_strscriptcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strscriptcontent().data(), this->strscriptcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strscriptcontent(), output);
  }

  // required int32 nExtendedInfo = 5;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 6;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strextendedinfo1(), output);
  }

  // required string strExtendedInfo2 = 7;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->strextendedinfo2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ScriptInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strScriptId = 1;
  if (has_strscriptid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strscriptid().data(), this->strscriptid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strscriptid(), target);
  }

  // required string strBusinessCode = 2;
  if (has_strbusinesscode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesscode().data(), this->strbusinesscode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strbusinesscode(), target);
  }

  // required string strBusinessType = 3;
  if (has_strbusinesstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbusinesstype().data(), this->strbusinesstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strbusinesstype(), target);
  }

  // required string strScriptContent = 4;
  if (has_strscriptcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strscriptcontent().data(), this->strscriptcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strscriptcontent(), target);
  }

  // required int32 nExtendedInfo = 5;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 6;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strextendedinfo1(), target);
  }

  // required string strExtendedInfo2 = 7;
  if (has_strextendedinfo2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo2().data(), this->strextendedinfo2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strextendedinfo2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ScriptInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strScriptId = 1;
    if (has_strscriptid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strscriptid());
    }

    // required string strBusinessCode = 2;
    if (has_strbusinesscode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinesscode());
    }

    // required string strBusinessType = 3;
    if (has_strbusinesstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbusinesstype());
    }

    // required string strScriptContent = 4;
    if (has_strscriptcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strscriptcontent());
    }

    // required int32 nExtendedInfo = 5;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

    // required string strExtendedInfo1 = 6;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

    // required string strExtendedInfo2 = 7;
    if (has_strextendedinfo2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScriptInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScriptInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScriptInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScriptInfo::MergeFrom(const ScriptInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strscriptid()) {
      set_strscriptid(from.strscriptid());
    }
    if (from.has_strbusinesscode()) {
      set_strbusinesscode(from.strbusinesscode());
    }
    if (from.has_strbusinesstype()) {
      set_strbusinesstype(from.strbusinesstype());
    }
    if (from.has_strscriptcontent()) {
      set_strscriptcontent(from.strscriptcontent());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
    if (from.has_strextendedinfo2()) {
      set_strextendedinfo2(from.strextendedinfo2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScriptInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScriptInfo::CopyFrom(const ScriptInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScriptInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void ScriptInfo::Swap(ScriptInfo* other) {
  if (other != this) {
    std::swap(strscriptid_, other->strscriptid_);
    std::swap(strbusinesscode_, other->strbusinesscode_);
    std::swap(strbusinesstype_, other->strbusinesstype_);
    std::swap(strscriptcontent_, other->strscriptcontent_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(strextendedinfo2_, other->strextendedinfo2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScriptInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScriptInfo_descriptor_;
  metadata.reflection = ScriptInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OperateLogInfo::kStrOperateLogIdFieldNumber;
const int OperateLogInfo::kStrModuleFieldNumber;
const int OperateLogInfo::kStrOperateEventFieldNumber;
const int OperateLogInfo::kStrIpFieldNumber;
const int OperateLogInfo::kStrEmployeeIdFieldNumber;
const int OperateLogInfo::kStrBranchIdFieldNumber;
const int OperateLogInfo::kStOperateTimeFieldNumber;
const int OperateLogInfo::kNExtendedInfoFieldNumber;
const int OperateLogInfo::kStrExtendedInfo1FieldNumber;
#endif  // !_MSC_VER

OperateLogInfo::OperateLogInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OperateLogInfo::InitAsDefaultInstance() {
}

OperateLogInfo::OperateLogInfo(const OperateLogInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OperateLogInfo::SharedCtor() {
  _cached_size_ = 0;
  stroperatelogid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmodule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stroperateevent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stremployeeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strbranchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stoperatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nextendedinfo_ = 0;
  strextendedinfo1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OperateLogInfo::~OperateLogInfo() {
  SharedDtor();
}

void OperateLogInfo::SharedDtor() {
  if (stroperatelogid_ != &::google::protobuf::internal::kEmptyString) {
    delete stroperatelogid_;
  }
  if (strmodule_ != &::google::protobuf::internal::kEmptyString) {
    delete strmodule_;
  }
  if (stroperateevent_ != &::google::protobuf::internal::kEmptyString) {
    delete stroperateevent_;
  }
  if (strip_ != &::google::protobuf::internal::kEmptyString) {
    delete strip_;
  }
  if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
    delete stremployeeid_;
  }
  if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchid_;
  }
  if (stoperatetime_ != &::google::protobuf::internal::kEmptyString) {
    delete stoperatetime_;
  }
  if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
    delete strextendedinfo1_;
  }
  if (this != default_instance_) {
  }
}

void OperateLogInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperateLogInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperateLogInfo_descriptor_;
}

const OperateLogInfo& OperateLogInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

OperateLogInfo* OperateLogInfo::default_instance_ = NULL;

OperateLogInfo* OperateLogInfo::New() const {
  return new OperateLogInfo;
}

void OperateLogInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_stroperatelogid()) {
      if (stroperatelogid_ != &::google::protobuf::internal::kEmptyString) {
        stroperatelogid_->clear();
      }
    }
    if (has_strmodule()) {
      if (strmodule_ != &::google::protobuf::internal::kEmptyString) {
        strmodule_->clear();
      }
    }
    if (has_stroperateevent()) {
      if (stroperateevent_ != &::google::protobuf::internal::kEmptyString) {
        stroperateevent_->clear();
      }
    }
    if (has_strip()) {
      if (strip_ != &::google::protobuf::internal::kEmptyString) {
        strip_->clear();
      }
    }
    if (has_stremployeeid()) {
      if (stremployeeid_ != &::google::protobuf::internal::kEmptyString) {
        stremployeeid_->clear();
      }
    }
    if (has_strbranchid()) {
      if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchid_->clear();
      }
    }
    if (has_stoperatetime()) {
      if (stoperatetime_ != &::google::protobuf::internal::kEmptyString) {
        stoperatetime_->clear();
      }
    }
    nextendedinfo_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_strextendedinfo1()) {
      if (strextendedinfo1_ != &::google::protobuf::internal::kEmptyString) {
        strextendedinfo1_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OperateLogInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strOperateLogId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stroperatelogid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stroperatelogid().data(), this->stroperatelogid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strModule;
        break;
      }

      // required string strModule = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strModule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmodule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmodule().data(), this->strmodule().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strOperateEvent;
        break;
      }

      // required string strOperateEvent = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strOperateEvent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stroperateevent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stroperateevent().data(), this->stroperateevent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_strIp;
        break;
      }

      // required string strIp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strip().data(), this->strip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strEmployeeId;
        break;
      }

      // required string strEmployeeId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strEmployeeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stremployeeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stremployeeid().data(), this->stremployeeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_strBranchId;
        break;
      }

      // required string strBranchId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strBranchId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchid().data(), this->strbranchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_stOperateTime;
        break;
      }

      // required string stOperateTime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stOperateTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stoperatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stoperatetime().data(), this->stoperatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_nExtendedInfo;
        break;
      }

      // required int32 nExtendedInfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nExtendedInfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nextendedinfo_)));
          set_has_nextendedinfo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_strExtendedInfo1;
        break;
      }

      // required string strExtendedInfo1 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strExtendedInfo1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strextendedinfo1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strextendedinfo1().data(), this->strextendedinfo1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OperateLogInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strOperateLogId = 1;
  if (has_stroperatelogid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroperatelogid().data(), this->stroperatelogid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stroperatelogid(), output);
  }

  // required string strModule = 2;
  if (has_strmodule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmodule().data(), this->strmodule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strmodule(), output);
  }

  // required string strOperateEvent = 3;
  if (has_stroperateevent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroperateevent().data(), this->stroperateevent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->stroperateevent(), output);
  }

  // required string strIp = 4;
  if (has_strip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strip().data(), this->strip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->strip(), output);
  }

  // required string strEmployeeId = 5;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->stremployeeid(), output);
  }

  // required string strBranchId = 6;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strbranchid(), output);
  }

  // required string stOperateTime = 7;
  if (has_stoperatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stoperatetime().data(), this->stoperatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->stoperatetime(), output);
  }

  // required int32 nExtendedInfo = 8;
  if (has_nextendedinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->nextendedinfo(), output);
  }

  // required string strExtendedInfo1 = 9;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->strextendedinfo1(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OperateLogInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strOperateLogId = 1;
  if (has_stroperatelogid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroperatelogid().data(), this->stroperatelogid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stroperatelogid(), target);
  }

  // required string strModule = 2;
  if (has_strmodule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmodule().data(), this->strmodule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strmodule(), target);
  }

  // required string strOperateEvent = 3;
  if (has_stroperateevent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stroperateevent().data(), this->stroperateevent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stroperateevent(), target);
  }

  // required string strIp = 4;
  if (has_strip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strip().data(), this->strip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strip(), target);
  }

  // required string strEmployeeId = 5;
  if (has_stremployeeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stremployeeid().data(), this->stremployeeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stremployeeid(), target);
  }

  // required string strBranchId = 6;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strbranchid(), target);
  }

  // required string stOperateTime = 7;
  if (has_stoperatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stoperatetime().data(), this->stoperatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->stoperatetime(), target);
  }

  // required int32 nExtendedInfo = 8;
  if (has_nextendedinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->nextendedinfo(), target);
  }

  // required string strExtendedInfo1 = 9;
  if (has_strextendedinfo1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strextendedinfo1().data(), this->strextendedinfo1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->strextendedinfo1(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OperateLogInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strOperateLogId = 1;
    if (has_stroperatelogid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stroperatelogid());
    }

    // required string strModule = 2;
    if (has_strmodule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmodule());
    }

    // required string strOperateEvent = 3;
    if (has_stroperateevent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stroperateevent());
    }

    // required string strIp = 4;
    if (has_strip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strip());
    }

    // required string strEmployeeId = 5;
    if (has_stremployeeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stremployeeid());
    }

    // required string strBranchId = 6;
    if (has_strbranchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchid());
    }

    // required string stOperateTime = 7;
    if (has_stoperatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stoperatetime());
    }

    // required int32 nExtendedInfo = 8;
    if (has_nextendedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nextendedinfo());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string strExtendedInfo1 = 9;
    if (has_strextendedinfo1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strextendedinfo1());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperateLogInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OperateLogInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OperateLogInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OperateLogInfo::MergeFrom(const OperateLogInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stroperatelogid()) {
      set_stroperatelogid(from.stroperatelogid());
    }
    if (from.has_strmodule()) {
      set_strmodule(from.strmodule());
    }
    if (from.has_stroperateevent()) {
      set_stroperateevent(from.stroperateevent());
    }
    if (from.has_strip()) {
      set_strip(from.strip());
    }
    if (from.has_stremployeeid()) {
      set_stremployeeid(from.stremployeeid());
    }
    if (from.has_strbranchid()) {
      set_strbranchid(from.strbranchid());
    }
    if (from.has_stoperatetime()) {
      set_stoperatetime(from.stoperatetime());
    }
    if (from.has_nextendedinfo()) {
      set_nextendedinfo(from.nextendedinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_strextendedinfo1()) {
      set_strextendedinfo1(from.strextendedinfo1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OperateLogInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateLogInfo::CopyFrom(const OperateLogInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateLogInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void OperateLogInfo::Swap(OperateLogInfo* other) {
  if (other != this) {
    std::swap(stroperatelogid_, other->stroperatelogid_);
    std::swap(strmodule_, other->strmodule_);
    std::swap(stroperateevent_, other->stroperateevent_);
    std::swap(strip_, other->strip_);
    std::swap(stremployeeid_, other->stremployeeid_);
    std::swap(strbranchid_, other->strbranchid_);
    std::swap(stoperatetime_, other->stoperatetime_);
    std::swap(nextendedinfo_, other->nextendedinfo_);
    std::swap(strextendedinfo1_, other->strextendedinfo1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OperateLogInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperateLogInfo_descriptor_;
  metadata.reflection = OperateLogInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DiskAndConnectStatus::kStrbranchIdFieldNumber;
const int DiskAndConnectStatus::kNConnectStatusFieldNumber;
const int DiskAndConnectStatus::kNDiskTatolSpaceFieldNumber;
const int DiskAndConnectStatus::kNDiskFreeSpaceFieldNumber;
#endif  // !_MSC_VER

DiskAndConnectStatus::DiskAndConnectStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DiskAndConnectStatus::InitAsDefaultInstance() {
}

DiskAndConnectStatus::DiskAndConnectStatus(const DiskAndConnectStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DiskAndConnectStatus::SharedCtor() {
  _cached_size_ = 0;
  strbranchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nconnectstatus_ = 0;
  ndisktatolspace_ = 0;
  ndiskfreespace_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DiskAndConnectStatus::~DiskAndConnectStatus() {
  SharedDtor();
}

void DiskAndConnectStatus::SharedDtor() {
  if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
    delete strbranchid_;
  }
  if (this != default_instance_) {
  }
}

void DiskAndConnectStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiskAndConnectStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DiskAndConnectStatus_descriptor_;
}

const DiskAndConnectStatus& DiskAndConnectStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BFIS_2eProtoMessageDefine_2eproto();
  return *default_instance_;
}

DiskAndConnectStatus* DiskAndConnectStatus::default_instance_ = NULL;

DiskAndConnectStatus* DiskAndConnectStatus::New() const {
  return new DiskAndConnectStatus;
}

void DiskAndConnectStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strbranchid()) {
      if (strbranchid_ != &::google::protobuf::internal::kEmptyString) {
        strbranchid_->clear();
      }
    }
    nconnectstatus_ = 0;
    ndisktatolspace_ = 0;
    ndiskfreespace_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DiskAndConnectStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strbranchId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbranchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strbranchid().data(), this->strbranchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nConnectStatus;
        break;
      }

      // required int32 nConnectStatus = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nConnectStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nconnectstatus_)));
          set_has_nconnectstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nDiskTatolSpace;
        break;
      }

      // required int32 nDiskTatolSpace = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nDiskTatolSpace:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndisktatolspace_)));
          set_has_ndisktatolspace();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nDiskFreeSpace;
        break;
      }

      // required int32 nDiskFreeSpace = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nDiskFreeSpace:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndiskfreespace_)));
          set_has_ndiskfreespace();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DiskAndConnectStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strbranchId = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strbranchid(), output);
  }

  // required int32 nConnectStatus = 2;
  if (has_nconnectstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nconnectstatus(), output);
  }

  // required int32 nDiskTatolSpace = 3;
  if (has_ndisktatolspace()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ndisktatolspace(), output);
  }

  // required int32 nDiskFreeSpace = 4;
  if (has_ndiskfreespace()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ndiskfreespace(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DiskAndConnectStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strbranchId = 1;
  if (has_strbranchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strbranchid().data(), this->strbranchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strbranchid(), target);
  }

  // required int32 nConnectStatus = 2;
  if (has_nconnectstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nconnectstatus(), target);
  }

  // required int32 nDiskTatolSpace = 3;
  if (has_ndisktatolspace()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ndisktatolspace(), target);
  }

  // required int32 nDiskFreeSpace = 4;
  if (has_ndiskfreespace()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ndiskfreespace(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DiskAndConnectStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strbranchId = 1;
    if (has_strbranchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strbranchid());
    }

    // required int32 nConnectStatus = 2;
    if (has_nconnectstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nconnectstatus());
    }

    // required int32 nDiskTatolSpace = 3;
    if (has_ndisktatolspace()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ndisktatolspace());
    }

    // required int32 nDiskFreeSpace = 4;
    if (has_ndiskfreespace()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ndiskfreespace());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiskAndConnectStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DiskAndConnectStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DiskAndConnectStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DiskAndConnectStatus::MergeFrom(const DiskAndConnectStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strbranchid()) {
      set_strbranchid(from.strbranchid());
    }
    if (from.has_nconnectstatus()) {
      set_nconnectstatus(from.nconnectstatus());
    }
    if (from.has_ndisktatolspace()) {
      set_ndisktatolspace(from.ndisktatolspace());
    }
    if (from.has_ndiskfreespace()) {
      set_ndiskfreespace(from.ndiskfreespace());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DiskAndConnectStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiskAndConnectStatus::CopyFrom(const DiskAndConnectStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiskAndConnectStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void DiskAndConnectStatus::Swap(DiskAndConnectStatus* other) {
  if (other != this) {
    std::swap(strbranchid_, other->strbranchid_);
    std::swap(nconnectstatus_, other->nconnectstatus_);
    std::swap(ndisktatolspace_, other->ndisktatolspace_);
    std::swap(ndiskfreespace_, other->ndiskfreespace_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DiskAndConnectStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DiskAndConnectStatus_descriptor_;
  metadata.reflection = DiskAndConnectStatus_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BFIS

// @@protoc_insertion_point(global_scope)
